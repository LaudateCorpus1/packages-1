{
  "name": "minidux",
  "version": "1.0.1",
  "description": "just like redux but tiny",
  "main": "index.js",
  "scripts": {
    "test:node": "tape test.js | tap-spec",
    "test:testron": "browserify test.js | testron | tap-spec",
    "test": "standard && npm run test:node && npm run test:testron"
  },
  "repository": {
    "user": "freeman-lab",
    "repo": "minidux",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/freeman-lab/minidux/tarball/master",
    "clone_url": "https://github.com/freeman-lab/minidux",
    "https_url": "https://github.com/freeman-lab/minidux",
    "travis_url": "https://travis-ci.org/freeman-lab/minidux",
    "zip_url": "https://github.com/freeman-lab/minidux/archive/master.zip",
    "api_url": "https://api.github.com/repos/freeman-lab/minidux"
  },
  "author": {
    "name": "sethvincent"
  },
  "license": "MIT",
  "homepage": "https://github.com/freeman-lab/minidux#readme",
  "devDependencies": {
    "browserify": "^13.0.0",
    "electron-prebuilt": "^0.37.6",
    "standard": "^6.0.7",
    "tap-spec": "^4.1.1",
    "tape": "^4.5.0",
    "testron": "^1.2.0"
  },
  "dependencies": {
    "composite": "^0.2.3",
    "is-plain-object": "^2.0.1",
    "xtend": "^4.0.1"
  },
  "gitHead": "30e94d6b735b64e892e4abbb23a231dfd54bf0a2",
  "_npmVersion": "3.3.12",
  "_nodeVersion": "5.5.0",
  "dist": {
    "shasum": "bc5db6fd13ccd71d9296e8b4c5ac92577abab0fc",
    "tarball": "http://registry.npmjs.org/minidux/-/minidux-1.0.1.tgz"
  },
  "versions": [
    {
      "number": "1.0.0",
      "date": "2016-04-18T01:06:33.200Z"
    },
    {
      "number": "1.0.1",
      "date": "2016-04-19T22:54:34.719Z"
    }
  ],
  "created": "2016-04-18T01:06:33.200Z",
  "modified": "2016-04-19T22:54:34.719Z",
  "lastPublisher": {
    "name": "freeman-lab",
    "email": "the.freeman.lab@gmail.com"
  },
  "owners": [
    {
      "name": "freeman-lab",
      "email": "the.freeman.lab@gmail.com"
    },
    {
      "name": "sethvincent",
      "email": "sethvincent@gmail.com"
    }
  ],
  "readme": "# minidux\n\n> just like [`redux`](https://github.com/reactjs/redux) but tiny\n\nThis little module mimics the [`redux`](https://github.com/reactjs/redux) API, is written in vanilla JS, and has minimal dependencies and dev dependencies.\n\n## Redux docs\n\nBecause this module aims to be a drop-in replacement for redux, you can read the [redux docs](http://redux.js.org/) for detailed usage examples and [API reference](http://redux.js.org/docs/api/index.html).\n\n## Usage\n\nUsage of minidux is identical to redux:\n\n```js\nvar createStore = require('minidux').createStore\n\nfunction reducer (state, action) {\n  if (action.type === 'example') {\n    return { example: true }\n  }\n}\n\nvar store = createStore(reducer, {\n  example: false\n})\n\nstore.subscribe(function (state) {\n  console.log(state)\n})\n\nstore.dispatch({ type: 'example' })\n```\n\n## Requiring modules\n\nIf you'd like to use `applyMiddleware`, `bindActionCreators`, `combineReducers`, `createStore`, & `compose` separately, you can `require` those files directly:\n\n```js\nvar applyMiddleware = require('minidux/applyMiddleware')\nvar bindActionCreators = require('minidux/bindActionCreators')\nvar combineReducers = require('minidux/combineReducers')\nvar createStore = require('minidux/createStore')\nvar compose = require('minidux/compose')\n```\n\n## API\n\n#### `var store = createStore(reducer, [initialState], [enhancer])`\n[Full redux docs for `createStore`](http://redux.js.org/docs/api/createStore.html)\n\n#### `store.getState()`\n[Full redux docs for `store.getState`](http://redux.js.org/docs/api/Store.html#getState)\n\n#### `store.dispatch(action)`\n[Full redux docs for `store.dispatch`](http://redux.js.org/docs/api/Store.html#dispatch)\n\n#### `store.subscribe(listener)`\n[Full redux docs for `store.subscribe`](http://redux.js.org/docs/api/Store.html#subscribe)\n\n#### `store.replaceReducer(nextReducer)`\n[Full redux docs for `store.replaceReducer`](http://redux.js.org/docs/api/Store.html#replaceReducer)\n\n### `combineReducers(reducers)`\n[Full redux docs for `combineReducers`](http://redux.js.org/docs/api/combineReducers.html)\n\n### `applyMiddleware(...middlewares)`\n[Full redux docs for `applyMiddleware`](http://redux.js.org/docs/api/applyMiddleware.html)\n\n### `bindActionCreators(actionCreators, dispatch)`\n[Full redux docs for `bindActionCreators`](http://redux.js.org/docs/api/bindActionCreators.html)\n\n### `compose(...functions)`\n[Full redux docs for `compose`](http://redux.js.org/docs/api/compose.html)\n\nInstead of implementing another `compose` function we use the `[composite](http://npmjs.com/composite)` module.\n\n## Issues\n\nNotice any incompatibilites with `redux`? Let us know in the [issues queue](issues).\n\n## See also\n- [hxdx](https://github.com/freeman-lab/hxdx) – connects a `redux`-style store to a `virtual-dom`-style view\n- [send-action](https://github.com/sethvincent/send-action) – a state container with an API that is much simpler than redux, but that follows a similar pattern\n- [store-emitter](https://github.com/sethvincent/store-emitter) – a state container with an API similar to redux with more flexible options for listening to changes\n- [prior art](http://redux.js.org/docs/introduction/PriorArt.html) – some of the projects that redux is based on\n\n## License\n\n[MIT](LICENSE.md)\n"
}