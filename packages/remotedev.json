{
  "name": "remotedev",
  "version": "0.2.3",
  "description": "Remote debugging for any flux implementation.",
  "main": "lib/index.js",
  "files": [
    "lib",
    "dist"
  ],
  "scripts": {
    "clean": "rimraf lib",
    "build:lib": "babel src --out-dir lib",
    "build:umd": "webpack src/index.js dist/remotedev.js --config webpack.config.development.js",
    "build:umd:min": "webpack src/index.js dist/remotedev.min.js --config webpack.config.production.js",
    "build": "npm run build:lib && npm run build:umd && npm run build:umd:min",
    "lint": "eslint src test",
    "prepublish": "npm run lint && npm run clean && npm run build"
  },
  "repository": {
    "user": "zalmoxisus",
    "repo": "remotedev",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/zalmoxisus/remotedev/tarball/master",
    "clone_url": "https://github.com/zalmoxisus/remotedev",
    "https_url": "https://github.com/zalmoxisus/remotedev",
    "travis_url": "https://travis-ci.org/zalmoxisus/remotedev",
    "zip_url": "https://github.com/zalmoxisus/remotedev/archive/master.zip",
    "api_url": "https://api.github.com/repos/zalmoxisus/remotedev"
  },
  "keywords": [
    "redux",
    "devtools",
    "flux",
    "react",
    "hot reloading",
    "time travel",
    "live edit"
  ],
  "author": {
    "name": "Mihail Diordiev",
    "email": "zalmoxisus@gmail.com",
    "url": "https://github.com/zalmoxisus"
  },
  "license": "MIT",
  "homepage": "https://github.com/zalmoxisus/remotedev",
  "devDependencies": {
    "babel-cli": "^6.3.15",
    "babel-core": "^6.1.20",
    "babel-eslint": "^5.0.0-beta6",
    "babel-loader": "^6.2.0",
    "babel-preset-es2015-loose": "^6.1.3",
    "babel-preset-react": "^6.3.13",
    "babel-preset-stage-0": "^6.3.13",
    "eslint": "^1.10.3",
    "eslint-config-airbnb": "^2.1.1",
    "eslint-plugin-react": "^3.11.3",
    "expect": "^1.6.0",
    "rimraf": "^2.3.4",
    "webpack": "^1.11.0"
  },
  "dependencies": {
    "jsan": "^3.1.3",
    "querystring": "^0.2.0",
    "socketcluster-client": "^5.0.0"
  },
  "gitHead": "a96ef304db846f61fb98580b87fc5448bb1ea42b",
  "_npmVersion": "3.7.3",
  "_nodeVersion": "5.8.0",
  "dist": {
    "shasum": "c15978e5c691399a49060f5c0ba4f7ccc3c6dc8e",
    "tarball": "http://registry.npmjs.org/remotedev/-/remotedev-0.2.3.tgz"
  },
  "versions": [
    {
      "number": "0.0.1",
      "date": "2015-12-20T12:58:41.576Z"
    },
    {
      "number": "0.0.2",
      "date": "2016-01-21T11:30:52.762Z"
    },
    {
      "number": "0.0.3",
      "date": "2016-01-21T11:47:45.334Z"
    },
    {
      "number": "0.0.4",
      "date": "2016-01-21T14:52:45.624Z"
    },
    {
      "number": "0.1.0",
      "date": "2016-01-22T15:29:23.340Z"
    },
    {
      "number": "0.1.1",
      "date": "2016-01-23T09:19:24.708Z"
    },
    {
      "number": "0.1.2",
      "date": "2016-02-14T18:37:05.532Z"
    },
    {
      "number": "0.2.0-beta-1",
      "date": "2016-08-20T14:11:09.097Z"
    },
    {
      "number": "0.2.0-beta-2",
      "date": "2016-08-20T14:57:09.610Z"
    },
    {
      "number": "0.2.0-beta-3",
      "date": "2016-08-20T15:28:48.783Z"
    },
    {
      "number": "0.2.0-beta-4",
      "date": "2016-08-21T09:40:02.405Z"
    },
    {
      "number": "0.2.0",
      "date": "2016-08-23T14:06:28.396Z"
    },
    {
      "number": "0.2.1",
      "date": "2016-08-23T16:34:29.636Z"
    },
    {
      "number": "0.2.2",
      "date": "2016-08-24T16:16:11.076Z"
    },
    {
      "number": "0.2.3",
      "date": "2016-10-28T19:34:18.641Z"
    }
  ],
  "created": "2015-12-20T12:58:41.576Z",
  "modified": "2016-10-28T19:34:18.641Z",
  "lastPublisher": {
    "name": "zalmoxisus",
    "email": "zalmoxisus@gmail.com"
  },
  "owners": [
    {
      "name": "zalmoxisus",
      "email": "zalmoxisus@gmail.com"
    }
  ],
  "readme": "RemoteDev\n=========\n\nMonitoring flux app's actions along with states to a remote monitor. Meant to be used even in production with any flux architecture for web, universal, React Native, hybrid, desktop and server side apps.\n\n![Demo](demo.gif)\n\n### Installation\n\n##### NPM\n```\nnpm install --save-dev remotedev\n```\n\n##### CDN\n```\n<script src=\"https://npmcdn.com/remotedev/dist/remotedev.min.js\"></script>\n```\n\n### Usage\n\n```js\nimport { connectViaExtension, extractState } from 'remotedev';\n// It will try to use Redux DevTools extension first if installed\n// In case you want only remote monitoring use `connect`:\n// import { connect, extractState } from 'remotedev';\n\n// Connect to the monitor\nremotedev = connectViaExtension();\n\n// Subscribe to change state (if need more than just logging)\nremotedev.subscribe(message => {\n  // Helper when only time travelling needed\n  extractState(message, state => {\n    this.setState(state);\n  });\n});\n\n// Send changes to the remote monitor\nremotedev.send(action, state);\n```\n\nSee [the examples for different flux architectures](https://github.com/zalmoxisus/remotedev/tree/master/examples).\n\n### Monitoring\n\nUse one of our monitor apps to inspect and dispatch actions:\n* [web](http://remotedev.io/local)\n* [redux-devtools-extension](https://github.com/zalmoxisus/redux-devtools-extension) - Click \"Remote\" button (or press [`Cmd+Ctrl+Arrow up`](https://github.com/zalmoxisus/redux-devtools-extension#keyboard-shortcuts)) to open remote monitoring.\n* [react-native-debugger](https://github.com/jhen0409/react-native-debugger) - Electron app, which already includes `remotedev-server`, `remotedev-app` and even React DevTools.\n* [chrome app](https://chrome.google.com/webstore/detail/remotedev/faicmgpfiaijcedapokpbdejaodbelph).\n* [remote-redux-devtools-on-debugger](https://github.com/jhen0409/remote-redux-devtools-on-debugger) - Used in React Native debugger as a dock monitor.\n* [atom-redux-devtools](https://github.com/zalmoxisus/atom-redux-devtools) - Used in Atom editor.\n* [redux-dispatch-cli](https://github.com/jhen0409/redux-dispatch-cli) - A CLI tool for Redux remote dispatch.\n\nUse [remotedev-app](https://github.com/zalmoxisus/remotedev-app) to create your own monitor app.\n\n### Communicate via local server\n\nIn order to make it simple to use, by default, the module and the monitor app communicate via [remotedev.io](http://remotedev.io) server. Use [remotedev-server](https://github.com/zalmoxisus/remotedev-server) cli to run it locally in order to make the connection faster and not to require an internet connection.\nYou can import it in your `server.js` script and start remotedev server together with your development server:\n```js\nvar remotedev = require('remotedev-server');\nremotedev({ hostname: 'localhost', port: 8000 });\n```\nSee [remotedev-server](https://github.com/zalmoxisus/remotedev-server) repository for more details.\nFor React Native you can use [react-native-debugger](https://github.com/jhen0409/react-native-debugger) or [remote-redux-devtools-on-debugger](https://github.com/jhen0409/remote-redux-devtools-on-debugger), which already include `remotedev-server`.\n\n### License\n\nMIT\n"
}