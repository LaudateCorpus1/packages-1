{
  "name": "electron-run-in-browser",
  "version": "1.0.0",
  "description": "electron helper: run some js in a BrowserWindow",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [
    "electron"
  ],
  "author": {
    "name": "joshwnj"
  },
  "license": "MIT",
  "gitHead": "389aec1e5937a37840922eb12d823bfc445b5542",
  "_npmVersion": "2.14.12",
  "_nodeVersion": "4.2.6",
  "dist": {
    "shasum": "0508e0b03149e65365c31f62a1879a8ae44480cd",
    "tarball": "http://registry.npmjs.org/electron-run-in-browser/-/electron-run-in-browser-1.0.0.tgz"
  },
  "versions": [
    {
      "number": "1.0.0",
      "date": "2016-07-13T08:59:10.914Z"
    }
  ],
  "created": "2016-07-13T08:59:10.914Z",
  "modified": "2016-07-13T08:59:10.914Z",
  "lastPublisher": {
    "name": "joshwnj",
    "email": "josh@x-team.com"
  },
  "owners": [
    {
      "name": "joshwnj",
      "email": "josh@x-team.com"
    }
  ],
  "readme": "# electron-run-in-browser\n\nRun some js in a `BrowserWindow` and get the result.\n\n## Usage\n\n`runInBrowser(win, func, cb)`\n\n- `win`: `BrowserWindow` instance.\n- `func`: function. Serialized with `toString` so it needs to be self-contained.\n- `cb`: callback function, called with (err, result)\n\n### Example\n\n```js\nconst BrowserWindow = require('electron').BrowserWindow\nconst runInBrowser = require('electron-run-in-browser')\n\nconst win = new BrowserWindow()\n\nwin.webContents.on('dom-ready', function (e) {\n  runInBrowser(win, getDocumentTitle, function (err, title) {\n    console.log('title:', title)\n  })\n})\n\nfunction getDocumentTitle () {\n  return document.title\n}\n```\n\n## License\n\nMIT\n\n"
}