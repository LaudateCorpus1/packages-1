{
  "name": "diagrams",
  "version": "0.6.8",
  "description": "Generate Flowcharts, Network Sequence, Dot, and Railroad Diagrams",
  "main": "src/diagrams.js",
  "bin": {
    "diagrams": "./bin/diagrams.js"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "dependencies": {
    "commander": "2.8.1",
    "electron-prebuilt": "^0.36.2",
    "railroad-diagrams": "1.0.0",
    "viz.js": "^1.3.0"
  },
  "repository": {
    "user": "francoislaberge",
    "repo": "diagrams",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/francoislaberge/diagrams/tarball/master",
    "clone_url": "https://github.com/francoislaberge/diagrams",
    "https_url": "https://github.com/francoislaberge/diagrams",
    "travis_url": "https://travis-ci.org/francoislaberge/diagrams",
    "zip_url": "https://github.com/francoislaberge/diagrams/archive/master.zip",
    "api_url": "https://api.github.com/repos/francoislaberge/diagrams"
  },
  "author": {
    "name": "Francois Laberge",
    "email": "francoislaberge@gmail.com"
  },
  "license": "MIT",
  "keywords": [
    "flowchart",
    "sequence",
    "diagrams",
    "dot",
    "graphviz",
    "railroad",
    "diagrams",
    "visualization",
    "system",
    "design"
  ],
  "gitHead": "a60a45a625ba76a5b78ae045272ebf5ccc29c441",
  "homepage": "https://github.com/francoislaberge/diagrams#readme",
  "_npmVersion": "2.14.7",
  "_nodeVersion": "4.2.1",
  "dist": {
    "shasum": "fadabf769167c17f49bbbbbd50b563fca38a988b",
    "tarball": "http://registry.npmjs.org/diagrams/-/diagrams-0.6.8.tgz"
  },
  "versions": [
    {
      "number": "0.2.0",
      "date": "2015-10-09T04:00:07.419Z"
    },
    {
      "number": "0.2.1",
      "date": "2015-10-09T04:02:08.581Z"
    },
    {
      "number": "0.2.2",
      "date": "2015-10-09T04:09:07.246Z"
    },
    {
      "number": "0.2.3",
      "date": "2015-10-09T04:38:41.905Z"
    },
    {
      "number": "0.2.4",
      "date": "2015-10-09T04:57:05.326Z"
    },
    {
      "number": "0.2.5",
      "date": "2015-10-09T05:15:52.275Z"
    },
    {
      "number": "0.2.6",
      "date": "2015-10-09T05:17:34.573Z"
    },
    {
      "number": "0.2.7",
      "date": "2015-10-09T05:19:01.535Z"
    },
    {
      "number": "0.3.0",
      "date": "2015-12-17T16:50:15.837Z"
    },
    {
      "number": "0.4.0",
      "date": "2015-12-27T20:59:49.803Z"
    },
    {
      "number": "0.4.1",
      "date": "2015-12-27T22:31:56.376Z"
    },
    {
      "number": "0.5.0",
      "date": "2015-12-27T23:16:10.182Z"
    },
    {
      "number": "0.5.1",
      "date": "2015-12-27T23:38:52.760Z"
    },
    {
      "number": "0.5.2",
      "date": "2015-12-28T01:09:19.596Z"
    },
    {
      "number": "0.5.3",
      "date": "2015-12-28T01:21:32.128Z"
    },
    {
      "number": "0.6.0",
      "date": "2015-12-28T02:43:29.671Z"
    },
    {
      "number": "0.6.1",
      "date": "2015-12-28T15:49:41.058Z"
    },
    {
      "number": "0.6.2",
      "date": "2015-12-29T19:09:40.939Z"
    },
    {
      "number": "0.6.3",
      "date": "2015-12-29T19:13:07.493Z"
    },
    {
      "number": "0.6.4",
      "date": "2015-12-29T19:21:22.145Z"
    },
    {
      "number": "0.6.5",
      "date": "2016-01-03T01:23:20.403Z"
    },
    {
      "number": "0.6.6",
      "date": "2016-01-03T15:16:41.545Z"
    },
    {
      "number": "0.6.7",
      "date": "2016-01-03T15:20:28.927Z"
    },
    {
      "number": "0.6.8",
      "date": "2016-01-03T15:27:53.780Z"
    }
  ],
  "created": "2015-10-09T04:00:07.419Z",
  "modified": "2016-01-03T15:27:53.780Z",
  "lastPublisher": {
    "name": "francoislaberge",
    "email": "francoislaberge@gmail.com"
  },
  "owners": [
    {
      "name": "francoislaberge",
      "email": "francoislaberge@gmail.com"
    }
  ],
  "readme": "# Overview\nCommand line tool for generating a suite of various types of diagrams, each based on intuitive text DSLs.\n\nSee below for documentation/examples of the syntax/output for each of the currently supported diagrams type:\n  - [flowchart](#flowchart)\n  - [network sequence](#sequence)\n  - [graphviz's dot](#dot)\n  - [railroad diagrams](#railroad)\n\n<img src=\"http://francoislaberge.github.io/diagrams/docs/flowchart.png\" width=\"25%\"/><img src=\"http://francoislaberge.github.io/diagrams/docs/sequence.png\" width=\"25%\"/><img src=\"http://francoislaberge.github.io/diagrams/docs/dot.png\" width=\"25%\"/><img src=\"http://francoislaberge.github.io/diagrams/docs/railroad.png\" width=\"25%\"/>\n\n# Installation\n\n```bash\nnpm install -g diagrams\n```\n\n# Usage\n\n## flowchart\nDocumentation: [Flowchart.js ](http://flowchart.js.org/).\n\nTo generate flowcharts, run:\n\n    diagrams flowchart input.flowchart flowchart.svg\n\n<table>\n<tr>\n<td><strong>input.flowchart</strong></td>\n<td><strong>flowchart.svg</strong></td>\n</tr>\n<tr>\n  <td>\n  <pre>\n<code>\nst=>start: Start\ne=>end\nop1=>operation: My Operation\nsub1=>subroutine: My Subroutine\ncond=>condition: Yes\nor No?:>http://www.google.com\nio=>inputoutput: catch something\n\nst->op1->cond\ncond(yes)->io->e\ncond(no)->sub1(right)->op1\n</code>\n  </pre>\n  </td>\n  <td>\n    <img src=\"http://francoislaberge.github.io/diagrams/docs/flowchart.png\" width=\"600px\" />\n  </td>\n</tr>\n</table>\n\n\n## sequence\nDocumentation: [Network Sequence Diagram Syntax ](https://bramp.github.io/js-sequence-diagrams/).\n\nTo generate Network Sequence Diagrams, run:\n\n    diagrams sequence input.sequence sequence.svg\n\n<table>\n<tr>\n<td><strong>input.sequence</strong></td>\n<td><strong>sequence.svg</strong></td>\n</tr>\n<tr>\n  <td>\n  <pre>\n<code>\nAlice->Bob: Hello Bob, how are you?\nNote right of Bob: Bob thinks\nBob-->Alice: I am good thanks!\n</code>\n  </pre>\n  </td>\n  <td>\n    <img src=\"http://francoislaberge.github.io/diagrams/docs/sequence.png\" width=\"350px\" />\n  </td>\n</tr>\n</table>\n\n## dot\nDocumentation on the dot file format:\n  - Read [dotguide.pdf](http://www.graphviz.org/pdf/dotguide.pdf).\n  - See the [online generator](http://mdaines.github.io/viz.js/).\n\nTo generate diagrams from Graphviz's .dot file format, run:\n\n    diagrams dot input.dot dot.svg\n\n<table>\n<tr>\n<td><strong>input.dot</strong></td>\n<td><strong>dot.svg</strong></td>\n</tr>\n<tr>\n  <td>\n  <pre>\n<code>\ndigraph G {\n    main -> parse -> execute;\n    main -> init;\n    main -> cleanup;\n    execute -> make_string;\n    execute -> printf\n    init -> make_string;\n    main -> printf;\n    execute -> compare;\n}\n</code>\n  </pre>\n  </td>\n  <td>\n    <img src=\"http://francoislaberge.github.io/diagrams/docs/dot.png\" width=\"300px\" />\n  </td>\n</tr>\n</table>\n\n## railroad\nDocumentation see [railroad-diagrams](http://npmjs.org/railroad-diagrams)'s documentation':\n  - **NOTE:** There is no real documentation for the input file syntax (PRs welcome), but the examples\n      should help you figure it out a bit\n  - [Examples](http://www.xanthir.com/etc/railroad-diagrams/example.html)\n  - [Online Generator](http://www.xanthir.com/etc/railroad-diagrams/generator.html)\n\nTo generate Railroad Diagrams, run:\n\n    diagrams railroad input.railroad railroad.svg\n\n<table>\n<tr>\n<td><strong>input.railroad</strong></td>\n<td><strong>railroad.svg</strong></td>\n</tr>\n<tr>\n  <td>\n  <pre>\n<code>\nDiagram(\n  Optional('+', 'skip'),\n    Choice(0,\n      NonTerminal('name-start char'),\n      NonTerminal('escape')),\n      ZeroOrMore(\n        Choice(0,\n          NonTerminal('name char'),\n          NonTerminal('escape'))))\n</code>\n  </pre>\n  </td>\n  <td>\n    <img src=\"http://francoislaberge.github.io/diagrams/docs/railroad.png\"  width=\"500px\" />\n  </td>\n</tr>\n</table>\n\n## Credits\n\n  - [flowchart.js](http://flowchart.js.org/) for the flowchart diagrams\n  - [js-sequence-diagrams](https://bramp.github.io/js-sequence-diagrams/) for the sequence diagrams\n  - [viz.js](https://github.com/mdaines/viz.js) for getting Graphviz compiled to js\n  - [railroad-diagrams](https://npmjs.org/railroad-diagrams) for the railroad diagrams\n  - [electron](http://electron.atom.io/) for headless browsing to wrap above libraries that don't work without a browser environment\n\n## TODOs\nIt's a work in progress. See [TODO.md](https://github.com/francoislaberge/diagrams/blob/master/TODO.md).\n"
}