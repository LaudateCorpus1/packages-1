{
  "name": "electron-renderer-value",
  "version": "1.1.0",
  "description": "Get a value as a promise from an electron renderer process",
  "main": "index.js",
  "scripts": {
    "test": "standard && babel-tape-runner ./test/integration/*.js --tap | tap-spec",
    "coverage": "nyc --reporter=lcov npm test",
    "xvfb-test": "xvfb-run npm test",
    "xvfb-coverage": "xvfb-run npm run coverage",
    "coveralls": "npm run xvfb-coverage && cat ./coverage/lcov.info | coveralls"
  },
  "keywords": [
    "electron",
    "renderer",
    "promise",
    "ipc",
    "main"
  ],
  "author": {
    "name": "Aram Drevekenin",
    "email": "grimsniffer@gmail.com"
  },
  "license": "MIT",
  "devDependencies": {
    "babel-plugin-syntax-async-functions": "^6.13.0",
    "babel-plugin-transform-regenerator": "^6.16.1",
    "babel-preset-es2015": "^6.16.0",
    "babel-tape-runner": "^2.0.1",
    "coveralls": "^2.11.14",
    "electron": "^1.4.2",
    "electron-rebuild": "^1.2.1",
    "istanbul": "^0.4.5",
    "nyc": "^8.3.0",
    "proxyquire": "^1.7.10",
    "spectron": "^3.4.0",
    "standard": "^8.3.0",
    "tap-spec": "^4.1.1",
    "tape": "^4.6.2"
  },
  "babel": {
    "presets": [
      "es2015"
    ],
    "plugins": [
      "syntax-async-functions",
      "transform-regenerator"
    ]
  },
  "dependencies": {
    "uuid": "^2.0.3"
  },
  "repository": {
    "user": "imsnif",
    "repo": "electron-renderer-value",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/imsnif/electron-renderer-value/tarball/master",
    "clone_url": "https://github.com/imsnif/electron-renderer-value",
    "https_url": "https://github.com/imsnif/electron-renderer-value",
    "travis_url": "https://travis-ci.org/imsnif/electron-renderer-value",
    "zip_url": "https://github.com/imsnif/electron-renderer-value/archive/master.zip",
    "api_url": "https://api.github.com/repos/imsnif/electron-renderer-value"
  },
  "gitHead": "9d99868ccbef667e61ce4bd7c4be7fc14e0db2ed",
  "homepage": "https://github.com/imsnif/electron-renderer-value#readme",
  "_npmVersion": "3.10.3",
  "_nodeVersion": "6.6.0",
  "dist": {
    "shasum": "f8488686d19bf1d2d48957f028655b43cc11830a",
    "tarball": "http://registry.npmjs.org/electron-renderer-value/-/electron-renderer-value-1.1.0.tgz"
  },
  "versions": [
    {
      "number": "1.0.0",
      "date": "2016-10-02T19:01:02.295Z"
    },
    {
      "number": "1.0.1",
      "date": "2016-10-02T19:04:30.432Z"
    },
    {
      "number": "1.0.2",
      "date": "2016-10-02T19:43:36.545Z"
    },
    {
      "number": "1.1.0",
      "date": "2016-10-02T19:51:29.995Z"
    }
  ],
  "created": "2016-10-02T19:01:02.295Z",
  "modified": "2016-10-02T19:51:29.995Z",
  "lastPublisher": {
    "name": "imsnif",
    "email": "grimsniffer@gmail.com"
  },
  "owners": [
    {
      "name": "imsnif",
      "email": "grimsniffer@gmail.com"
    }
  ],
  "readme": "# electron-renderer-view\n[![Build Status](https://travis-ci.org/imsnif/electron-renderer-value.svg?branch=master)](https://travis-ci.org/imsnif/electron-renderer-value)\n[![Coverage Status](https://coveralls.io/repos/github/imsnif/electron-renderer-value/badge.svg?branch=master)](https://coveralls.io/github/imsnif/electron-renderer-value?branch=master)\n[![JavaScript Style Guide](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com/)\n\n\nEasily get a value from an electron renderer instance   \n(eg. some attribute on the window object)\n\n### Usage\n```javascript\nconst { BrowserWindow } = require('electron')\nconst rendererVal = require('electron-renderer-value')\n\n// ...\n\napp.on('ready', () => {\n  const ipcMain = electron.ipcMain\n  const win = new BrowserWindow()  \n  win.loadURL(`file://${__dirname}/someFile.html`)\n  rendererVal(win.webContents, 'window.foo')\n  .then(param => {\n    console.log(param) // value of foo from window object of renderer\n  })\n}\n```\n## Contributions / Issues\nPlease feel free to open an issue or a PR if something's broken, or if you'd like some specific features added.\n\n## License\nMIT\n\n"
}