{
  "name": "hadron-build",
  "description": "Tooling for Hadron apps.",
  "version": "0.9.6",
  "scripts": {
    "fmt": "mongodb-js-fmt",
    "check": "mongodb-js-precommit",
    "test": "mocha",
    "ci": "npm run check && npm test"
  },
  "bin": {
    "hadron-build": "./cli.js"
  },
  "homepage": "http://github.com/mongodb-js/hadron-build",
  "repository": {
    "user": "mongodb-js",
    "repo": "hadron-build",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/mongodb-js/hadron-build/tarball/master",
    "clone_url": "https://github.com/mongodb-js/hadron-build",
    "https_url": "https://github.com/mongodb-js/hadron-build",
    "travis_url": "https://travis-ci.org/mongodb-js/hadron-build",
    "zip_url": "https://github.com/mongodb-js/hadron-build/archive/master.zip",
    "api_url": "https://api.github.com/repos/mongodb-js/hadron-build"
  },
  "dependencies": {
    "asar": "^0.12.0",
    "async": "^2.0.0-rc.3",
    "aws-sdk": "^2.3.2",
    "bluebird": "^3.3.4",
    "check-python": "^1.0.0",
    "cli-table": "^0.3.1",
    "debug": "^2.2.0",
    "del": "^2.0.2",
    "electron-installer-codesign": "^0.2.1",
    "electron-installer-dmg": "^0.1.1",
    "electron-installer-run": "^0.1.2",
    "electron-installer-zip": "^0.1.2",
    "electron-license": "^0.2.0",
    "electron-mocha": "^2.3.1",
    "electron-packager": "^5.2.1",
    "electron-prebuilt": "^1.2.8",
    "electron-winstaller": "^2.3.3",
    "flatnest": "^1.0.0",
    "fs-extra": "^0.26.5",
    "github": "^0.2.4",
    "glob": "^5.0.15",
    "got": "^6.3.0",
    "hadron-compile-cache": "^0.3.0",
    "hadron-module-cache": "^0.0.3",
    "in-publish": "^2.0.0",
    "js-yaml": "^3.5.4",
    "less-cache": "^0.23.0",
    "lodash": "^4.8.2",
    "mocha-evergreen-reporter": "^0.0.7",
    "mongodb-js-cli": "^0.0.3",
    "normalize-package-data": "^2.3.5",
    "parse-github-repo-url": "^1.0.0",
    "semver": "^5.1.0",
    "templatizer": "^2.0.3",
    "which": "^1.2.0",
    "yargs": "^4.4.0"
  },
  "devDependencies": {
    "chai": "^3.5.0",
    "eslint-config-mongodb-js": "^2.2.0",
    "mocha": "^2.3.4",
    "mongodb-js-fmt": "^0.0.3",
    "mongodb-js-precommit": "^0.2.9",
    "sinon": "^1.17.3",
    "sinon-chai": "^2.8.0"
  },
  "license": "Apache-2.0",
  "gitHead": "f3111e80d594aeb1765f09d651efbf62f46c5716",
  "_npmVersion": "3.10.3",
  "_nodeVersion": "6.5.0",
  "dist": {
    "shasum": "65e45cbf8a259f60722f8d193e3b3b255014eeff",
    "tarball": "http://registry.npmjs.org/hadron-build/-/hadron-build-0.9.6.tgz"
  },
  "versions": [
    {
      "number": "0.0.1",
      "date": "2016-04-08T21:05:16.099Z"
    },
    {
      "number": "0.1.0",
      "date": "2016-04-08T21:25:20.770Z"
    },
    {
      "number": "0.1.1",
      "date": "2016-04-08T21:31:24.433Z"
    },
    {
      "number": "0.1.2",
      "date": "2016-04-09T00:38:32.334Z"
    },
    {
      "number": "0.1.3",
      "date": "2016-04-09T01:04:49.043Z"
    },
    {
      "number": "0.1.4",
      "date": "2016-04-09T01:56:13.051Z"
    },
    {
      "number": "0.1.5",
      "date": "2016-04-09T02:02:44.193Z"
    },
    {
      "number": "0.1.6",
      "date": "2016-04-11T16:01:47.038Z"
    },
    {
      "number": "0.1.7",
      "date": "2016-04-11T20:52:15.112Z"
    },
    {
      "number": "0.1.8",
      "date": "2016-04-11T22:41:04.432Z"
    },
    {
      "number": "0.1.9",
      "date": "2016-04-12T10:47:49.422Z"
    },
    {
      "number": "0.1.10",
      "date": "2016-04-15T16:32:17.659Z"
    },
    {
      "number": "0.1.11",
      "date": "2016-04-15T16:46:34.934Z"
    },
    {
      "number": "0.1.12",
      "date": "2016-04-15T16:53:28.291Z"
    },
    {
      "number": "0.1.13",
      "date": "2016-04-15T17:08:32.166Z"
    },
    {
      "number": "0.1.14",
      "date": "2016-04-15T17:10:36.725Z"
    },
    {
      "number": "0.1.15",
      "date": "2016-04-15T19:29:49.434Z"
    },
    {
      "number": "0.1.16",
      "date": "2016-04-15T20:10:21.997Z"
    },
    {
      "number": "0.1.18",
      "date": "2016-04-16T20:12:17.442Z"
    },
    {
      "number": "0.1.19",
      "date": "2016-04-16T20:59:00.973Z"
    },
    {
      "number": "0.1.20",
      "date": "2016-04-16T21:02:48.914Z"
    },
    {
      "number": "0.1.21",
      "date": "2016-04-16T21:50:26.581Z"
    },
    {
      "number": "0.1.22",
      "date": "2016-04-16T22:07:24.291Z"
    },
    {
      "number": "0.1.23",
      "date": "2016-04-16T22:20:25.254Z"
    },
    {
      "number": "0.1.24",
      "date": "2016-04-16T22:48:58.527Z"
    },
    {
      "number": "0.1.25",
      "date": "2016-04-16T23:51:17.713Z"
    },
    {
      "number": "0.1.26",
      "date": "2016-04-16T23:58:39.022Z"
    },
    {
      "number": "0.1.27",
      "date": "2016-04-17T00:12:28.929Z"
    },
    {
      "number": "0.1.28",
      "date": "2016-04-17T00:29:09.724Z"
    },
    {
      "number": "0.1.29",
      "date": "2016-04-17T00:59:26.772Z"
    },
    {
      "number": "0.1.30",
      "date": "2016-04-17T01:13:57.997Z"
    },
    {
      "number": "0.2.0",
      "date": "2016-04-17T01:59:23.399Z"
    },
    {
      "number": "0.3.0",
      "date": "2016-04-18T18:17:28.251Z"
    },
    {
      "number": "0.3.1",
      "date": "2016-04-18T21:39:43.092Z"
    },
    {
      "number": "0.3.2",
      "date": "2016-04-18T21:52:42.589Z"
    },
    {
      "number": "0.3.3",
      "date": "2016-04-21T21:46:49.986Z"
    },
    {
      "number": "0.3.4",
      "date": "2016-04-26T14:27:32.235Z"
    },
    {
      "number": "0.3.5",
      "date": "2016-04-26T14:45:37.980Z"
    },
    {
      "number": "0.3.6",
      "date": "2016-04-26T15:39:47.608Z"
    },
    {
      "number": "0.3.7",
      "date": "2016-04-26T17:06:34.165Z"
    },
    {
      "number": "0.4.0",
      "date": "2016-04-28T11:52:31.044Z"
    },
    {
      "number": "0.4.1",
      "date": "2016-05-02T17:48:53.545Z"
    },
    {
      "number": "0.4.2",
      "date": "2016-05-02T20:51:07.511Z"
    },
    {
      "number": "0.4.3",
      "date": "2016-05-03T18:00:01.817Z"
    },
    {
      "number": "0.4.4",
      "date": "2016-05-03T18:17:28.347Z"
    },
    {
      "number": "0.4.5",
      "date": "2016-05-03T21:54:15.822Z"
    },
    {
      "number": "0.4.6",
      "date": "2016-05-03T23:41:35.180Z"
    },
    {
      "number": "0.4.7",
      "date": "2016-05-04T15:23:34.470Z"
    },
    {
      "number": "0.4.8",
      "date": "2016-05-04T17:00:10.810Z"
    },
    {
      "number": "0.4.9",
      "date": "2016-05-04T17:21:20.577Z"
    },
    {
      "number": "0.4.10",
      "date": "2016-05-04T17:23:42.901Z"
    },
    {
      "number": "0.4.11",
      "date": "2016-05-04T20:25:45.617Z"
    },
    {
      "number": "0.4.12",
      "date": "2016-05-06T18:51:05.243Z"
    },
    {
      "number": "0.4.13",
      "date": "2016-05-06T20:14:19.738Z"
    },
    {
      "number": "0.4.14",
      "date": "2016-05-07T00:18:12.208Z"
    },
    {
      "number": "0.5.0",
      "date": "2016-05-07T04:53:25.274Z"
    },
    {
      "number": "0.5.1",
      "date": "2016-05-09T21:44:19.329Z"
    },
    {
      "number": "0.5.2",
      "date": "2016-05-10T16:59:07.470Z"
    },
    {
      "number": "0.6.0",
      "date": "2016-05-24T22:13:14.348Z"
    },
    {
      "number": "0.6.1",
      "date": "2016-06-17T18:42:40.285Z"
    },
    {
      "number": "0.6.2",
      "date": "2016-06-22T14:46:39.554Z"
    },
    {
      "number": "0.6.3",
      "date": "2016-06-22T19:37:02.550Z"
    },
    {
      "number": "0.6.4",
      "date": "2016-07-06T13:56:35.429Z"
    },
    {
      "number": "0.6.5",
      "date": "2016-07-06T13:58:01.961Z"
    },
    {
      "number": "0.7.0-beta.1",
      "date": "2016-07-22T08:57:15.260Z"
    },
    {
      "number": "0.7.1",
      "date": "2016-07-26T09:48:37.714Z"
    },
    {
      "number": "0.7.2",
      "date": "2016-08-09T16:06:02.987Z"
    },
    {
      "number": "0.7.3",
      "date": "2016-08-09T19:00:26.609Z"
    },
    {
      "number": "0.7.4",
      "date": "2016-08-21T20:49:07.329Z"
    },
    {
      "number": "0.8.0",
      "date": "2016-09-15T23:36:32.118Z"
    },
    {
      "number": "0.9.0",
      "date": "2016-09-21T15:23:27.598Z"
    },
    {
      "number": "0.9.1",
      "date": "2016-09-21T19:35:03.696Z"
    },
    {
      "number": "0.9.2",
      "date": "2016-09-22T00:59:10.534Z"
    },
    {
      "number": "0.9.3",
      "date": "2016-09-22T01:25:04.498Z"
    },
    {
      "number": "0.9.4",
      "date": "2016-09-22T02:13:18.596Z"
    },
    {
      "number": "0.9.5",
      "date": "2016-09-22T12:34:04.093Z"
    },
    {
      "number": "0.9.6",
      "date": "2016-09-22T12:49:07.284Z"
    }
  ],
  "created": "2016-04-08T21:05:16.099Z",
  "modified": "2016-09-22T12:49:07.284Z",
  "lastPublisher": {
    "name": "imlucas",
    "email": "hrabovsky.lucas@gmail.com"
  },
  "owners": [
    {
      "name": "brahmgardner",
      "email": "brahm.gardner@gmail.com"
    },
    {
      "name": "cilix",
      "email": "matthewlevenstein@gmail.com"
    },
    {
      "name": "dpercy",
      "email": "davetp425@gmail.com"
    },
    {
      "name": "durran",
      "email": "durran@gmail.com"
    },
    {
      "name": "glowe",
      "email": "graham.lowe@gmail.com"
    },
    {
      "name": "i80and",
      "email": "i80and@foxquill.com"
    },
    {
      "name": "imlucas",
      "email": "hrabovsky.lucas@gmail.com"
    },
    {
      "name": "kangas",
      "email": "kangas@gmail.com"
    },
    {
      "name": "kay-kim",
      "email": "kay@mongodb.com"
    },
    {
      "name": "machyne",
      "email": "mcotter222@gmail.com"
    },
    {
      "name": "micheal.parks",
      "email": "michealparks1989@gmail.com"
    },
    {
      "name": "mongodb-js-user",
      "email": "lucas.hrabovsky+mongodb-js@10gen.com"
    },
    {
      "name": "redondos",
      "email": "aolivera@gmail.com"
    },
    {
      "name": "rueckstiess",
      "email": "thomas@rueckstiess.net"
    },
    {
      "name": "schwartzrw",
      "email": "schwartzrw@gmail.com"
    },
    {
      "name": "shum",
      "email": "chris.shum@mongodb.com"
    }
  ],
  "readme": "# hadron-build\n\n> Complete tooling for large-scale [Electron](http://electron.atom.io/) apps.\n\n[![travis][travis_img]][travis_url] [![npm][npm_img]][npm_url]\n\n\n## Configuration\n\n```json\n{\n  \"config\": {\n    \"hadron\": {\n      \"build\": {\n        \"win32\": {\n          \"icon\": \"resources/win32/<your-project-id>.ico\",\n          \"favicon_url\": \"https://raw.githubusercontent.com/mongodb-js/favicon/master/favicon.ico\",\n          \"loading_gif\": \"resources/win32/loading.gif\"\n        },\n        \"darwin\": {\n          \"icon\": \"resources/darwin/<your-project-id>.icns\",\n          \"dmg_background\": \"resources/darwin/background.png\",\n          \"codesign_identity\": \"Developer ID Application: <your-name> (<your-apple-developer-id>)\",\n          \"codesign_sha1\": \"<your-certs-sha1>\",\n          \"app_bundle_id\": \"com.<your-company>.<your-project-id>\",\n          \"app_category_type\": \"public.app-category.productivity\"\n        }\n      },\n      \"endpoint\": \"<hadron-endpoint-server-url>\"\n    }\n  },\n  \"scripts\": {\n    \"check\": \"hadron-build check\",\n    \"ci\": \"npm run test\",\n    \"clean\": \"hadron-build clean\",\n    \"compile-ui\": \"hadron-build ui\",\n    \"fmt\": \"hadron-build fmt\",\n    \"postuninstall\": \"hadron-build clean\",\n    \"release\": \"hadron-build release\",\n    \"start\": \"hadron-build develop\",\n    \"test\": \"hadron-build test\",\n    \"test-functional\": \"npm test -- --functional\",\n    \"test-unit\": \"npm test -- --unit\",\n    \"test-release\": \"npm test -- --release\"\n  }\n}\n```\n\n## CLI Usage\n\n```bash\nhadron-build <command> [options]\n\nCommands:\n  release            :shipit:\n  clean              Remove generated directories.\n  config             Configuration.\n  develop [options]  Run the app in development mode.\n  test [options]     Run app tests.\n  upload [options]   Upload assets from `release`.\n  ui [options]       Compile the app UI.\n  verify [options]   Verify the current environment meets the app\\'s requirements.\n\nOptions:\n  --help  Show help                                                    [boolean]\n```\n\n## Important Paths\n\n```javascript\nvar version = '1.1.0'; // channel = stable\nvar productName = 'Hadron Build';\nvar appBundleId = 'com.mongodb.hadron';\n```\n\n### macOS\n\n- `~/Library/Application\\ Support/${productName}`: The `[userData][electron-app-getPath]` directory\n- `~/Library/Application\\ Support/${appBundleId}.ShipIt/ShipItState.plist`: Auto update state persistence\n- `~/Library/Application\\ Support/${appBundleId}.ShipIt/ShipIt_stderr.log`: Auto update log\n\n### Windows\n\n- `C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}`: App installation path.  Why in a temp dir? Allows installation and auto update without requiring Administrator.\n- `C:\\Users\\${username}\\AppData\\Roaming\\${productName}`: The `[userData][electron-app-getPath]` directory\n- `C:\\Users\\${username}\\AppData\\Local\\SquirrelTemp\\SquirrelSetup.log`: Squirrel.Windows installation log. Global for any app installation that's using Squirrel.Windows.\n- `C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\SquirrelSetup.log`: Application level Squirrel.Windows log\n\n#### The Squirrel.Windows Installation Log Explained\n\n> `C:\\Users\\${username}\\AppData\\Local\\SquirrelTemp\\SquirrelSetup.log`\n\nWhat you can expect from a successful installation:\n\n```\n2016-06-24 09:46:12> Program: Starting Squirrel Updater: --install .\n2016-06-24 09:46:12> Program: Starting install, writing to C:\\Users\\${username}\\AppData\\Local\\SquirrelTemp\n2016-06-24 09:46:12> Program: About to install to: C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\n```\n\nThe following exception might be scary, but it's purely informational and ok to ignore.\n```\n2016-06-24 09:46:12> CheckForUpdateImpl: Couldn't write out staging user ID, this user probably shouldn't get beta anything: System.IO.DirectoryNotFoundException: Could not find a part of the path 'C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\packages\\.betaId'.\n   at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)\n   at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)\n   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)\n   at System.IO.StreamWriter.CreateFile(String path, Boolean append, Boolean checkHost)\n   at System.IO.StreamWriter..ctor(String path, Boolean append, Encoding encoding, Int32 bufferSize, Boolean checkHost)\n   at System.IO.File.InternalWriteAllText(String path, String contents, Encoding encoding, Boolean checkHost)\n   at System.IO.File.WriteAllText(String path, String contents, Encoding encoding)\n   at Squirrel.UpdateManager.CheckForUpdateImpl.getOrCreateStagedUserId()\n2016-06-24 09:46:12> CheckForUpdateImpl: Failed to load local releases, starting from scratch: System.IO.DirectoryNotFoundException: Could not find a part of the path 'C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\packages\\RELEASES'.\n   at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)\n   at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)\n   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share)\n   at Squirrel.Utility.LoadLocalReleases(String localReleaseFile)\n   at Squirrel.UpdateManager.CheckForUpdateImpl.<CheckForUpdate>d__3f.MoveNext()\n```\n\nThe actual installation:\n\n```\n2016-06-24 09:46:12> CheckForUpdateImpl: Reading RELEASES file from C:\\Users\\${username}\\AppData\\Local\\SquirrelTemp\n2016-06-24 09:46:12> CheckForUpdateImpl: First run or local directory is corrupt, starting from scratch\n2016-06-24 09:46:12> ApplyReleasesImpl: Writing files to app directory: C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\n2016-06-24 09:46:16> ApplyReleasesImpl: Moving file C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\lib\\net45\\content_resources_200_percent.pak to C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\content_resources_200_percent.pak\n2016-06-24 09:46:16> ApplyReleasesImpl: Moving file C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\lib\\net45\\d3dcompiler_47.dll to C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\d3dcompiler_47.dll\n2016-06-24 09:46:16> ApplyReleasesImpl: Moving file C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\lib\\net45\\content_shell.pak to C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\content_shell.pak\n2016-06-24 09:46:16> ApplyReleasesImpl: Moving file C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\lib\\net45\\ffmpeg.dll to C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\ffmpeg.dll\n2016-06-24 09:46:16> ApplyReleasesImpl: Moving file C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\lib\\net45\\icudtl.dat to C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\icudtl.dat\n2016-06-24 09:46:16> ApplyReleasesImpl: Moving file C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\lib\\net45\\libEGL.dll to C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\libEGL.dll\n2016-06-24 09:46:16> ApplyReleasesImpl: Moving file C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\lib\\net45\\LICENSE to C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\LICENSE\n2016-06-24 09:46:16> ApplyReleasesImpl: Moving file C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\lib\\net45\\libGLESv2.dll to C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\libGLESv2.dll\n2016-06-24 09:46:16> ApplyReleasesImpl: Moving file C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\lib\\net45\\${_.titlecase(productName)}.exe to C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\${_.titlecase(productName)}.exe\n2016-06-24 09:46:16> ApplyReleasesImpl: Moving file C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\lib\\net45\\msvcp120.dll to C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\msvcp120.dll\n2016-06-24 09:46:16> ApplyReleasesImpl: Moving file C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\lib\\net45\\msvcr120.dll to C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\msvcr120.dll\n2016-06-24 09:46:16> ApplyReleasesImpl: Moving file C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\lib\\net45\\natives_blob.bin to C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\natives_blob.bin\n2016-06-24 09:46:16> ApplyReleasesImpl: Moving file C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\lib\\net45\\pdf.dll to C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\pdf.dll\n2016-06-24 09:46:16> ApplyReleasesImpl: Moving file C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\lib\\net45\\squirrel.exe to C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\squirrel.exe\n2016-06-24 09:46:16> ApplyReleasesImpl: Moving file C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\lib\\net45\\ui_resources_200_percent.pak to C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\ui_resources_200_percent.pak\n2016-06-24 09:46:16> ApplyReleasesImpl: Moving file C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\lib\\net45\\snapshot_blob.bin to C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\snapshot_blob.bin\n2016-06-24 09:46:16> ApplyReleasesImpl: Moving file C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\lib\\net45\\node.dll to C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\node.dll\n2016-06-24 09:46:16> ApplyReleasesImpl: Moving file C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\lib\\net45\\vccorlib120.dll to C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\vccorlib120.dll\n2016-06-24 09:46:16> ApplyReleasesImpl: Moving file C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\lib\\net45\\xinput1_3.dll to C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\xinput1_3.dll\n2016-06-24 09:46:17> ApplyReleasesImpl: Squirrel Enabled Apps: [C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\${_.titlecase(productName)}.exe]\n2016-06-24 09:46:18> ApplyReleasesImpl: Starting fixPinnedExecutables\n2016-06-24 09:46:18> ApplyReleasesImpl: Examining Pin: Command Prompt.lnk\n2016-06-24 09:46:18> ApplyReleasesImpl: Examining Pin: File Explorer.lnk\n2016-06-24 09:46:18> ApplyReleasesImpl: Examining Pin: Google Chrome.lnk\n2016-06-24 09:46:18> ApplyReleasesImpl: Examining Pin: Internet Explorer.lnk\n2016-06-24 09:46:18> ApplyReleasesImpl: Examining Pin: sublime_text - Shortcut.lnk\n2016-06-24 09:46:18> ApplyReleasesImpl: Examining Pin: Task Manager.lnk\n2016-06-24 09:46:18> ApplyReleasesImpl: Examining Pin: Windows PowerShell.lnk\n2016-06-24 09:46:18> ApplyReleasesImpl: Fixing up tray icons\n```\n\nAnother exception that might be scary, but it's purely informational and ok to ignore.\n```\n2016-06-24 09:46:18> ApplyReleasesImpl: Couldn't rewrite shim RegKey, most likely no apps are shimmed: System.NullReferenceException: Object reference not set to an instance of an object.\n   at Squirrel.UpdateManager.ApplyReleasesImpl.<unshimOurselves>b__ee(RegistryView view)\n2016-06-24 09:46:18> ApplyReleasesImpl: Couldn't rewrite shim RegKey, most likely no apps are shimmed: System.NullReferenceException: Object reference not set to an instance of an object.\n   at Squirrel.UpdateManager.ApplyReleasesImpl.<unshimOurselves>b__ee(RegistryView view)\n```\n\nAnd then finally\n```\n2016-06-24 09:46:18> ApplyReleasesImpl: cleanDeadVersions: for version ${version}\n2016-06-24 09:46:18> ApplyReleasesImpl: cleanDeadVersions: exclude folder app-${version}\n```\n\n#### The Windows Application Log Explained\n\n> `C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\SquirrelSetup.log`\n\n##### Windows Startup Log\n\n- User's launch application via a desktop shortcut `${productName}`\n- Installing into `C:\\\\Program Files\\` would require Administrator\n- Desktop shortcut managed for you automatically if you use https://github.com/mongodb-js/electron-squirrel-startup\n- Shortcut Target: `C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\Update.exe --processStart ${_.titlecase(productName)}.exe`\n- Shortcut Start In: `C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}`\n\n```\n2016-06-24 12:32:51> Program: Starting Squirrel Updater: --processStart ${_.titlecase(productName)}.exe\n2016-06-24 12:32:51> Program: Want to launch 'C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\${_.titlecase(productName)}.exe'\n2016-06-24 12:32:51> Program: About to launch: 'C:\\Users\\${username}\\AppData\\Local\\${_.titlecase(productName)}\\app-${version}\\${_.titlecase(productName)}.exe':\n```\n\n##### Windows Auto Update Log\n\n```javascript\nconst server = 'hadron.mongodb.com';\nconst dialog = require('electron').dialog;\nconst AutoUpdateManager = require('hadron-auto-update-manager');\n\nconst autoUpdater = new AutoUpdateManager({\n  endpoint: `https://${server}`\n});\n\nautoUpdater.on('update-available', (event, releaseNotes, releaseVersion) => {\n  dialog.showMessageBox({\n    type: 'question',\n    buttons: ['Not Right Now', 'Restart and Install Update'],\n    title: 'New Version Available',\n    message: `Would you like to install ${productName} v${releaseVersion}?`,\n    detail: releaseNotes,\n    callback: (res) => {\n      if (res === 1) {\n        autoUpdater.install();\n      }\n    }\n  });\n});\n\nautoUpdater.check();\n```\n\nWhen `hadron-auto-update-manager#check()` called:\n\n```\n2016-06-24 12:33:00> Program: Starting Squirrel Updater: --download https://${server}/update?version=${version}&platform=win32&arch=x64\n2016-06-24 12:33:00> Program: Fetching update information, downloading from https://${server}/update?version=${version}&platform=win32&arch=x64\n2016-06-24 12:33:00> CheckForUpdateImpl: Using existing staging user ID: 4b7f7d53-806c-5724-9079-695fe1657b09\n2016-06-24 12:33:00> CheckForUpdateImpl: Downloading RELEASES file from https://${server}/update?version=${version}&platform=win32&arch=x64\n2016-06-24 12:33:00> FileDownloader: Downloading url: https://${server}/update/RELEASES?version=${version}&platform=win32&arch=amd64&id=${_.titlecase(productName)}&localVersion=${version}\n```\n\nSee Squirrel.Windows docs https://github.com/Squirrel/Squirrel.Windows/blob/master/docs/getting-started/5-updating.md\n\n## Assets\n\nWhen `hadron-build release` is run, there are several assets which are created in the `./dist` directory.\nWhich assets are generated depends on the target platform.  \n\n### macOS\n\n- `.dmg`: Installer\n- `-darwin-${arch}.zip`: Auto update payload\n\n### Windows\n\n- `.exe`: Installer\n- `.full-nupkg`: Auto update payload\n- `.delta-nupkg`: Auto update payload w/ delta compression against previous release\n- `RELEASES`: Manifest for auto update checksumming and local delta calculation\n- `.msi`: Global Windows installer (requires Administrator)\n- `-win32-${arch}.zip`: Convenience for techops team's that can't use `.msi` or use a package manager such as Chocolatey.\n\n## Auto Update\n\n- `hadron-auto-update-manager`: https://github.com/hadron-auto-update-manager\n\n### Windows\n\n- `electron-squirrel-startup`: https://github.com/mongodb-js/electron-squirrel-startup\n- [Update process explained step by step](https://github.com/Squirrel/Squirrel.Windows/blob/master/docs/using/update-process.md#update-process)\n\n\n## Todo\n\n- Functional tests for `release` command\n- `railcars` command\n- `check` command ->  `mongodb-js-precommit`\n- `fmt` command ->  `mongodb-js-fmt`\n- Make `test` use `xvfb-maybe` by default\n- Support for [staged rollouts via auto update](https://github.com/Squirrel/Squirrel.Windows/blob/master/docs/using/staged-rollouts.md)\n\n\n## License\n\nApache 2.0\n\n[travis_img]: https://img.shields.io/travis/mongodb-js/hadron-build.svg\n[travis_url]: https://travis-ci.org/mongodb-js/hadron-build\n[npm_img]: https://img.shields.io/npm/v/hadron-build.svg\n[npm_url]: https://npmjs.org/package/hadron-build\n[npm-scripts]: https://docs.npmjs.com/misc/scripts\n[spectron]: https://github.com/kevinsawicki/spectron\n[electron-mocha]: https://github.com/jprichardson/electron-mocha\n[electron-app-getPath]: https://github.com/electron/electron/blob/78193a0608b5fa55161e95b7b3845b6bd85af377/docs/api/app.md#appgetpathname\n"
}