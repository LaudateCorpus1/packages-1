{
  "name": "vue-ace-palette",
  "version": "0.2.9",
  "author": {
    "name": "qinghai"
  },
  "homepage": "https://github.com/noteon/vue-ace-palette",
  "devDependencies": {},
  "typings": "vue-ace-palette.d.ts",
  "scripts": {
    "start": "electron ./demo/main.js"
  },
  "main": "vue-ace-palette.js",
  "dependencies": {
    "lodash": "^4.14.0",
    "vue": "^1.0.26",
    "vue-typescript": "^0.6.1"
  },
  "gitHead": "ef09897205b579d084bf62e8ea21fe939503ceb6",
  "description": "### What Is It?",
  "_npmVersion": "3.8.6",
  "_nodeVersion": "6.1.0",
  "dist": {
    "shasum": "884e97f46a1a4642faca6587bddaf3c12b856eda",
    "tarball": "http://registry.npmjs.org/vue-ace-palette/-/vue-ace-palette-0.2.9.tgz"
  },
  "versions": [
    {
      "number": "0.1.0",
      "date": "2016-07-25T12:36:23.131Z"
    },
    {
      "number": "0.1.1",
      "date": "2016-07-26T00:22:51.673Z"
    },
    {
      "number": "0.2.0",
      "date": "2016-07-26T01:25:33.725Z"
    },
    {
      "number": "0.2.1",
      "date": "2016-07-26T01:36:45.486Z"
    },
    {
      "number": "0.2.2",
      "date": "2016-07-26T01:40:12.390Z"
    },
    {
      "number": "0.2.3",
      "date": "2016-07-26T01:43:50.151Z"
    },
    {
      "number": "0.2.4",
      "date": "2016-07-26T01:57:46.091Z"
    },
    {
      "number": "0.2.5",
      "date": "2016-07-26T07:23:50.161Z"
    },
    {
      "number": "0.2.6",
      "date": "2016-07-26T07:30:41.448Z"
    },
    {
      "number": "0.2.7",
      "date": "2016-08-08T02:00:31.414Z"
    },
    {
      "number": "0.2.8",
      "date": "2016-10-23T01:07:58.512Z"
    },
    {
      "number": "0.2.9",
      "date": "2016-10-23T01:11:02.012Z"
    }
  ],
  "created": "2016-07-25T12:36:23.131Z",
  "modified": "2016-10-23T01:11:02.012Z",
  "lastPublisher": {
    "name": "noteon",
    "email": "noteon@gmail.com"
  },
  "owners": [
    {
      "name": "noteon",
      "email": "noteon@gmail.com"
    }
  ],
  "readme": "## vue-ace-palette\n\n### What Is It?\n   \n\nSo I heard you liked the Sublime Text command palette. Me too. So much so, that \nI thought it was missing from a lot of the web applications I build. \n\n**angular-palette** is an angular component that replicates the Sublime Text command\npalette for routes and global (or context sensitive) actions in your angular app.\n\n**angular-palette** automatically takes all of the routes in your angularjs\napplication and turns them into commands that can be executed from the command\npalette with the keyboard, suhweet! Sorry, I lied to you; It doesn't do it \n'automatically'. You also need to include a name property on all of your routes\nin your $routeProvider configuration. This name property will be displayed in the\npalette.\n\n\n### Demo\n[http://derekries.github.io/angular-palette](http://derekries.github.io/angular-palette)\nJust press 'ctrl+shift+l' to bring up the command palette.\n\n### Features\n - Sublime Text Like Command Palette for quick actions with the keyboard\n - Easily add all routes to the palette\n - Export context-sensitive actions to the palette\n - Looks Boss. Styled to look like the Dark Soda Theme\n\n### Installation\n\n1. Clone this repo or run `bower install angular-palette2`\n2. Include the `angular-palette.js`, `palette-darksoda.css`, `mousetrap.js`,\n`mousetrap-global-bind.js` files in your page. (There's also a build with mousetrap\nincluded. In this dist folder look for `angular-palette-deps.min.js`)\n3. Declare this module as a dependency of your application\n`angular.module('myApp', ['palette'])`\n4. Include `<palette></palette>` at the top of your main page (probably index.html)\n\n### Usage\n\nThere's a few things that come with angular-palette\n - **paletteService** (used for exporting commands)\n - **drBlur** - a directive for calling functions on blur events\n - **drFocusOn** - a directive for focus the element this is applied to when the expression\npassed is true\n - **drScrollToContain** - a directive for making the page scroll to contain this element\nwhen the expression passed is true\n - **drHighlight** - a directive to highlight a query in text (requires ng-bind-html-unsafe)\n - **palette** - The directive this whole module is about\n\nYou're welcome to use any of the other directives included but the important things\nare the palette directive and the paletteService.\n\n\nIf you want to export some commands to the palette you can do that with the paletteService\n\n**Warning:** angular-palette is super new so this feature is a little iffy at the moment. You\ncan only export commands from one view/controller at a time so if you've got any nested views\nand you try exporting from multiple that wont work.\n\n**Example:**\n\n    angular.module('myApp')\n      .controller('MainCtrl', ['paletteService', function(paletteService) {\n        $scope.makeMessage = function () {\n          alert('called from the palette!');\n        }\n\n        paletteService.addCommands([\n          {\n            name: \"Notify: Alert Message\",\n            winShortcuts:['CTRL+R'],\n            macShortcuts:['CMD+R'],\n            cmd: function () {\n              $scope.makeMessage();\n            },\n            data: 'something'\n          }\n        ]);\n\n      }]);\n\n***name** (string) is what you want to be displayed in the palette\n\n**cmd** (function|string) takes a function you wish to call when the command is selected from the palette\n\n**data** (optional) only used for the built in functions\n\n**cmd** can also take a couple built in functions\n - 'link' (string) - When this command is selected the $location.path will be set to the **data**\nthat is passed in.\n - 'extLink' (string) - When this command is selected the window.location will be set to the **data** that is passed in.\n\n\n### Why Should I Use It?\n\nPower users love to keep their hands on the keyboard at all times. Most web apps\nfall behind their desktop counterparts in this regard. (Note: angular-palette\ndoes not offer global keyboard shortcuts for commands. Maybe in the future)\n\nThe palette works well for global actions across the application, routes and \nlinks are the perfect candidate under this stance. You may also want to \nexpose various commands depending on the context of the app (current view). Or\nmaybe you want to list out a collection of items in the palette. Those are both\nsupported at the moment, but the API is pretty fragile and only supports exporting\nfrom one controller at a time (they replace each other) which is soon to be fixed.\n\n### Coming Soon\n\n - Customizeable Shortcut Key for opening the palette\n - Multiple Styles (Light Soda first)\n - Fuzzy Filtering just like sublime does. (Only normal filtering at the moment)\n - Export commands from more than one controller at a time.\n - Custom Scroll Area - Styled right in all browsers and better scrolling while following\nresults in the palette with up/down keys.\n - Handle MouseTrap shortcut key binding in one go, and display those key combos\nin the palette like Sublime Text does.\n - Docs\n\n### Dependencies\n\n - MouseTrap [https://github.com/ccampbell/mousetrap](https://github.com/ccampbell/mousetrap)\n - NgSanitize\n\n### Contributing\n\nComing soon\n"
}