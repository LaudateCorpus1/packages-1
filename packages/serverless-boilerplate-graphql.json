{
  "name": "serverless-boilerplate-graphql",
  "version": "0.0.3",
  "description": "The Serverless GraphQL Application Boilerplate",
  "author": {
    "name": "me"
  },
  "license": "MIT",
  "private": false,
  "repository": {
    "user": "serverless",
    "repo": "boilerplate-graphql",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/serverless/boilerplate-graphql/tarball/master",
    "clone_url": "https://github.com/serverless/boilerplate-graphql",
    "https_url": "https://github.com/serverless/boilerplate-graphql",
    "travis_url": "https://travis-ci.org/serverless/boilerplate-graphql",
    "zip_url": "https://github.com/serverless/boilerplate-graphql/archive/master.zip",
    "api_url": "https://api.github.com/repos/serverless/boilerplate-graphql"
  },
  "dependencies": {
    "aws-sdk": "^2.3.0",
    "jsonwebtoken": "^5.7.0",
    "lodash": "^4.6.1",
    "bluebird": "^3.3.4",
    "serverless-client-s3": "^2.0.0",
    "serverless-cors-plugin": "^0.4.1",
    "serverless-meta-sync": "^0.1.0",
    "serverless-offline": "^2.2.4"
  },
  "gitHead": "7f8b1ba0396fa0320925c3ae119a8519dd7b8df5",
  "homepage": "https://github.com/serverless/boilerplate-graphql#readme",
  "scripts": {},
  "_npmVersion": "3.7.3",
  "_nodeVersion": "4.2.6",
  "dist": {
    "shasum": "8fc68c588f4b281f17f8fc318a31b2acb987b273",
    "tarball": "http://registry.npmjs.org/serverless-boilerplate-graphql/-/serverless-boilerplate-graphql-0.0.3.tgz"
  },
  "versions": [
    {
      "number": "0.0.1",
      "date": "2016-04-08T02:29:14.474Z"
    },
    {
      "number": "0.0.2",
      "date": "2016-04-12T16:00:31.178Z"
    },
    {
      "number": "0.0.3",
      "date": "2016-04-12T16:09:05.495Z"
    }
  ],
  "created": "2016-04-08T02:29:14.474Z",
  "modified": "2016-04-12T16:09:05.495Z",
  "lastPublisher": {
    "name": "ac360",
    "email": "austen@servant.co"
  },
  "owners": [
    {
      "name": "ac360",
      "email": "austen@servant.co"
    }
  ],
  "readme": "![Serverless GraphQL Architecture Application Boilerplate](/readme_boilerplate_graphql.gif)\n\n# Serverless GraphQL Boilerplate\n[![serverless](http://public.serverless.com/badges/v3.svg)](http://www.serverless.com)\n\nThis boilerplate application features a serverless architecture that leverages new technologies (Lambda, GraphQL) to reach a very low *total cost of ownership* (i.e., least amount of code, administration, cost).\n\n- [Setup](#setup)\n- [Team](#team)\n\n---\n\n## Setup\n\nIf you haven't yet installed `serverless` on your machin, run:\n\n```\nnpm install -g serverless\n```\nthen install the GraphQL Boilerplate in the CWD by running:\n\n```\nsls project install serverless-boilerplate-graphql\ncd serverless-boilerplate-graphql\n```\n\n### Back\nAdd the `authTokenSecret` variable to `_meta/variables/s-variables-STAGE-REGION.json` and give it a strong value. This is the secret used to generate JSON web tokens. Then:\n\n```\ncd back/api\nnpm install\nsls function deploy --all\nsls endpoint deploy --all\n```\n\n### Client\nSet `API_URL` in `client/src/app/js/actions/index.js`. Then:\n\n```\ncd ../../client/src\nnpm install\nnpm start\n```\n\nThis will runs the client locally. You can then deploy the client to an S3 bucket with:\n\n```\nnpm run build\nsls client deploy\n```\n\n### Deploying to S3 bucket\nMake sure you're still in the `client/src` folder mentioned above, then run:\n\n```\nnpm run build\nsls client deploy\n```\n\n### Testing With A Local DynamoDB Instance\n- Install [Docker](https://www.docker.com/)\n- Run `docker-compose up` to install and run DynamoDB.\n- Add the `localDynamoDbEndpoint` variable with the value `http://<DOCKER-MACHINE-IP>:8000` to `_meta/variables/s-variables-common.json`. Example value:  `http://192.168.99.100:8000`.\n- Run `sls setup db -s <stage> -r <region>` to create tables in the local DynamoDB instance.\n- Run `sls offline start` to start [the offline server](https://github.com/dherault/serverless-offline).\n\n### Testing With GraphiQL\nIf you're running OSX, you can use the [GraphiQL Electron App](https://github.com/skevy/graphiql-app) to test the GraphQL backend without a client:\n\n- Install [brew cask](https://caskroom.github.io) for easy installation: `brew tap caskroom/cask`\n- Install GraphiQL App: `brew cask install graphiql`\n- Open GraphiQL application. Just search for `GraphiQL` using OSX Spotlight Search!\n- Add your `data` endpoint to the \"GraphQL Endpoint\" text field, and make sure the \"Method\" is set to `POST`.\n- Try this mutation to create the first user:\n\n\n```\nmutation createUserTest {\n  createUser (username: \"serverless\", name: \"Serverless Inc.\", email: \"hello@serverless.com\", password: \"secret\") {\n    id \n    username \n    name \n    email  \n  }\n}\n```\n\n- Now list all users using the following query:\n\n\n```\nquery getUsersTest { \n  users {\n    id\n    username\n    name\n    email\n  } \n}\n```\n\n- You should get the user you just created:\n\n\n```\n{\n  \"data\": {\n    \"users\": [\n      {\n        \"id\": \"aca42ee0-f509-11e5-bc11-0d8b1f79b4b9\",\n        \"username\": \"serverless\",\n        \"name\": \"Serverless Inc.\",\n        \"email\": \"hello@serverless.com\"\n      }\n    ]\n  }\n}\n```\n\n### Team Workflow with Meta Sync Plugin\nThis boilerplate includes the [Meta Sync Plugin](https://github.com/serverless/serverless-meta-sync). To start using it you need to add the following serverless variables to `_meta/variables/s-variables-common.json`:\n\n```js\n\"meta_bucket\" : \"SOME_BUCKET_NAME\",\n\"meta_bucket_region\" : \"us-east-1\" // or any other region\n```\n---\n\n## Team\n* [@kevinold](https://github.com/kevinold)\n* [@pmuens](https://github.com/pmuens)\n* [@breandr](https://github.com/breandr)\n* [@erikerikson](https://github.com/erikerikson)\n* [@ryansb](https://github.com/ryansb)\n* [@eahefnawy](https://github.com/eahefnawy)\n* [@minibikini](https://github.com/minibikini)\n* [@ac360](https://github.com/ac360)\n"
}