{
  "name": "horizon-remotedev",
  "version": "0.0.1",
  "description": "Remote debugging for Horizon.",
  "main": "lib/index.js",
  "files": [
    "src",
    "lib",
    "dist"
  ],
  "scripts": {
    "clean": "rimraf lib",
    "build:lib": "babel src --out-dir lib",
    "build:umd": "webpack src/index.js dist/horizon-remotedev.js --config webpack.config.development.js",
    "build:umd:min": "webpack src/index.js dist/horizon-remotedev.min.js --config webpack.config.production.js",
    "build": "npm run build:lib && npm run build:umd && npm run build:umd:min",
    "lint": "eslint src test",
    "prepublish": "npm run lint && npm run clean && npm run build"
  },
  "repository": {
    "user": "zalmoxisus",
    "repo": "horizon-remotedev",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/zalmoxisus/horizon-remotedev/tarball/master",
    "clone_url": "https://github.com/zalmoxisus/horizon-remotedev",
    "https_url": "https://github.com/zalmoxisus/horizon-remotedev",
    "travis_url": "https://travis-ci.org/zalmoxisus/horizon-remotedev",
    "zip_url": "https://github.com/zalmoxisus/horizon-remotedev/archive/master.zip",
    "api_url": "https://api.github.com/repos/zalmoxisus/horizon-remotedev"
  },
  "keywords": [
    "horizon",
    "devtools"
  ],
  "author": {
    "name": "Mihail Diordiev",
    "email": "zalmoxisus@gmail.com",
    "url": "https://github.com/zalmoxisus"
  },
  "license": "MIT",
  "homepage": "https://github.com/zalmoxisus/horizon-remotedev",
  "devDependencies": {
    "babel-cli": "^6.10.1",
    "babel-core": "^6.10.4",
    "babel-eslint": "^6.0.5",
    "babel-loader": "^6.2.4",
    "babel-plugin-transform-decorators-legacy": "^1.3.4",
    "babel-preset-es2015": "^6.9.0",
    "babel-preset-es2015-loose": "^7.0.0",
    "babel-preset-react": "^6.5.0",
    "babel-preset-stage-0": "^6.5.0",
    "eslint": "^2.13.1",
    "eslint-config-airbnb": "^9.0.1",
    "eslint-plugin-import": "^1.9.2",
    "eslint-plugin-jsx-a11y": "^1.5.3",
    "eslint-plugin-react": "^5.2.2",
    "expect": "^1.20.1",
    "mocha": "^2.5.3",
    "rimraf": "^2.5.2",
    "webpack": "^1.13.1"
  },
  "npmName": "horizon-remotedev",
  "npmFileMap": [
    {
      "basePath": "/dist/",
      "files": [
        "*.js"
      ]
    }
  ],
  "dependencies": {
    "remotedev": "^0.2.1"
  },
  "gitHead": "bc73f56f145c4143aa6ae80cebb8b82ff2e8c8aa",
  "_npmVersion": "3.7.3",
  "_nodeVersion": "5.8.0",
  "dist": {
    "shasum": "6c33d9403d45bf5a5cc9dd00b4843f644079c1d0",
    "tarball": "http://registry.npmjs.org/horizon-remotedev/-/horizon-remotedev-0.0.1.tgz"
  },
  "versions": [
    {
      "number": "0.0.1",
      "date": "2016-08-27T08:59:56.563Z"
    }
  ],
  "created": "2016-08-27T08:59:56.563Z",
  "modified": "2016-08-27T08:59:56.563Z",
  "lastPublisher": {
    "name": "zalmoxisus",
    "email": "zalmoxisus@gmail.com"
  },
  "owners": [
    {
      "name": "zalmoxisus",
      "email": "zalmoxisus@gmail.com"
    }
  ],
  "readme": "Remote debugging for Horizon with [Redux DevTools extension](https://github.com/zalmoxisus/redux-devtools-extension) and [remotedev](https://github.com/zalmoxisus/remotedev).\n\n## Installation\n\n#### 1. Get the extension\n##### 1.1 For Chrome\n - from [Chrome Web Store](https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd)\n - or build it with `npm i & npm run build:extension` and [load the extension's folder](https://developer.chrome.com/extensions/getstarted#unpacked) `./build/extension`\n - or run it in dev mode with `npm i & npm start` and [load the extension's folder](https://developer.chrome.com/extensions/getstarted#unpacked) `./dev`.\n\n##### 1.2 For Firefox\n - from [AMO](https://addons.mozilla.org/en-US/firefox/addon/remotedev/)\n - or build it with `npm i & npm run build:firefox` and [load the extension's folder](https://developer.mozilla.org/en-US/Add-ons/WebExtensions/Temporary_Installation_in_Firefox) `./build/firefox`.\n\n##### 1.3 For Electron\n  - just specify `REDUX_DEVTOOLS` in [`electron-devtools-installer`](https://github.com/GPMDP/electron-devtools-installer).\n\n##### 1.4 For other browsers, for React Native, hybrid, desktop and server side apps\n  - Use [remotedev.io](http://remotedev.io/local/) or if you have the extension select `Remote DevTools` from the context menu. Just specify `remote` parameter, and optionally `hostname` and `port`. [See the API](https://github.com/zalmoxisus/mobx-remotedev#remotedevstore-config) for details. \n\n#### 2. Install the library\n\n##### NPM\n\n```\nnpm install --save horizon-remotedev\n```\n\n##### CDN\n\n```\n<script src=\"https://npmcdn.com/horizon-remotedev/dist/hzRemotedev.js\"></script>\n```\n\n## Usage\n\n```js\n// import hzRemotedev from 'horizon-remotedev';\n// or import hzRemotedev from 'horizon-remotedev/lib/dev'\n// in case you want to use it in production or don't have process.env.NODE_ENV === 'development'\n\n//Setup Horizon connection\nconst horizon = Horizon();\n\n// ...\n\n// Specify the horizon instance to monitor \nhzRemotedev(horizon(\"react_messages\"))\n```\n\nSee [chat example](https://github.com/zalmoxisus/horizon-remotedev/blob/master/examples/chat-app/dist/app.jsx).\n\n## API\n#### `remotedev(store, [config])`\n  - arguments\n    - **store** *object* - horizon instance.  Example: `horizon(\"react_messages\")`.\n    - **config** *object* (optional as the parameters bellow)\n      - **name** *string* - the instance name to be showed on the monitor page. Default value is table title.\n      - **remote** *boolean* - set it to `true` to have remote monitoring via the local or `remotedev.io` server.\n      - **hostname** *string* - use to specify host for [`remotedev-server`](https://github.com/zalmoxisus/remotedev-server). If `port` is specified, default value is `localhost`.\n      - **port** *number* - use to specify host's port for [`remotedev-server`](https://github.com/zalmoxisus/remotedev-server).\n\nAlso see [the extension API](https://github.com/zalmoxisus/redux-devtools-extension#documentation) and [my presentation at React Europe](https://youtu.be/YU8jQ2HtqH4).\n\n## Exclude / include DevTools in production builds\n\nBy default use\n```js\nimport remotedev from 'horizon-remotedev';\n```\n\nIt will work only when `process.env.NODE_ENV === 'development'`, otherwise the code will be stripped.\n\nIn case you want to use it in production or cannot set `process.env.NODE_ENV`, use\n```js\nimport remotedev from 'horizon-remotedev/lib/dev';\n```\nSo, the code will not be stripped from production bundle and you can use the extension even in production. It wouldn't affect the performance for end-users who don't have the extension installed. \n\n## LICENSE\n\n[MIT](LICENSE)\n\n## Created By\n\nIf you like this, follow [@mdiordiev](https://twitter.com/mdiordiev) on twitter.\n"
}