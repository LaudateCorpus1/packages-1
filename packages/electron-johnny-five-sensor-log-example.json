{
  "name": "electron-johnny-five-sensor-log-example",
  "version": "0.1.0",
  "main": "main.js",
  "scripts": {
    "start": "electron ."
  },
  "devDependencies": {
    "electron-rebuild": "^1.1.3"
  },
  "dependencies": {
    "electron-prebuilt": "^0.36.7",
    "johnny-five": "^0.9.23",
    "lightning-line": "0.0.13",
    "performance-now": "^0.2.0"
  },
  "description": "An electron app using johnny-five to out put a strobe pulse, read a sensor, plot the results, and log the results",
  "repository": {
    "user": "sofroniewn",
    "repo": "electron-johnny-five-examples",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/sofroniewn/electron-johnny-five-examples/tarball/master",
    "clone_url": "https://github.com/sofroniewn/electron-johnny-five-examples",
    "https_url": "https://github.com/sofroniewn/electron-johnny-five-examples",
    "travis_url": "https://travis-ci.org/sofroniewn/electron-johnny-five-examples",
    "zip_url": "https://github.com/sofroniewn/electron-johnny-five-examples/archive/master.zip",
    "api_url": "https://api.github.com/repos/sofroniewn/electron-johnny-five-examples"
  },
  "keywords": [
    "electron",
    "app",
    "johnny-five",
    "arduino"
  ],
  "author": {
    "name": "Nicholas Sofroniew"
  },
  "license": "MIT",
  "homepage": "https://github.com/sofroniewn/electron-johnny-five-examples#readme",
  "_npmVersion": "2.11.3",
  "_nodeVersion": "0.12.7",
  "dist": {
    "shasum": "92bf42ef8ae3a4da6b9f4adc3a367ad1bd0e16d2",
    "tarball": "http://registry.npmjs.org/electron-johnny-five-sensor-log-example/-/electron-johnny-five-sensor-log-example-0.1.0.tgz"
  },
  "versions": [
    {
      "number": "0.1.0",
      "date": "2016-02-19T07:04:22.252Z"
    }
  ],
  "created": "2016-02-19T07:04:22.252Z",
  "modified": "2016-02-19T07:04:22.252Z",
  "lastPublisher": {
    "name": "sofroniewn",
    "email": "sofroniewn@gmail.com"
  },
  "owners": [
    {
      "name": "sofroniewn",
      "email": "sofroniewn@gmail.com"
    }
  ],
  "readme": "#9-sensor-log\n**This app allows you to output a strobe at different frequencies, plots the values of analog sensor, and logs timestamped information as JSON**\n\n##Setting up the hardware\n\nI used an [arduino mega](https://www.arduino.cc/en/Main/ArduinoBoardMega2560) for this example, but any of the [boards](http://johnny-five.io/platform-support/) supported by johnny-five should work.\n\nConnect a loopback wire from pin 11 to A1\n\n<img src=\"./assets/board.png\" width=\"500\">\n\n##Setting up the code\n\n\nTo run, first clone the repo and npm install the example directory\n\n```\ngit clone https://github.com/sofroniewn/electron-johnny-five-examples\ncd electron-johnny-five-examples/9-sensor-log\nnpm install\n```\n\nUnfortunately the serial port may not work right away and might need to be rebuilt\n\n```\n./node_modules/.bin/electron-rebuild\n```\n\nAt this point if you try to starting the app with\n\n```\nnpm start\n```\nYou may get an error if the path to <code>serialport.node</code> is wrong\n\n```\nUncaught Error: Cannot find module '/Users/sofroniewn/github/electron-johnny-five-examples/1-led/node_modules/johnny-five/node_modules/serialport/build/Release/node-v47-darwin-x64/serialport.node'\n```\n\nThis can easily be fixed by\n\n```\nmv ./node_modules/johnny-five/node_modules/serialport/build/Release/electron-v0.36-darwin-x64/ ./node_modules/johnny-five/node_modules/serialport/build/Release/node-v47-darwin-x64/\n```\n\nYou're now ready to run the app!\n\nFor more information about that error and using electron with johnny-five and node-serialport in general, check out this super helpful [blog post](http://meow.noopkat.com/using-node-serialport-in-an-electron-app/) by [@noopkat](https://github.com/noopkat)\n\n##Running the app\nAfter setting up the [hardware](https://github.com/sofroniewn/electron-johnny-five-examples/tree/master/9-sensor-log#setting-up-the-hardware) and the [code](https://github.com/sofroniewn/electron-johnny-five-examples/tree/master/9-sensor-log#setting-up-the-code) you are now ready to run the app with \n\n```\nnpm start\n```\n\nOnce the board has been found and the green status light in the top right has turned on, you should be able to click the **start** button in the top left corner. Pin 11 will then start to output a strobe at a frequency defined by the input box. Change the value of this input to change the frequency of the pulses. The sensor values will also be acquired and plotted to the screen using a [lightning](http://lightning-viz.org/) vizualization. As long as Pin 11 is connected to A1 the orange sensor values should follow the red pulses. The values of the sensor, the strobe and high precision timestamps are also logged to JSON file, <code>'./sensor.log'</code>.\n\n<img src=\"./assets/screenshot.png\" width=\"500\">\n\n**Congrats!** You've gone through all the examples - go and build something amazing!"
}