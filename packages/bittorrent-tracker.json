{
  "name": "bittorrent-tracker",
  "description": "Simple, robust, BitTorrent tracker (client & server) implementation",
  "version": "8.0.7",
  "author": {
    "name": "Feross Aboukhadijeh",
    "email": "feross@feross.org",
    "url": "http://feross.org/"
  },
  "bin": {
    "bittorrent-tracker": "./bin/cmd.js"
  },
  "browser": {
    "./lib/common-node.js": false,
    "./lib/client/http-tracker.js": false,
    "./lib/client/udp-tracker.js": false,
    "./server.js": false
  },
  "dependencies": {
    "bencode": "^0.10.0",
    "bn.js": "^4.4.0",
    "compact2string": "^1.2.0",
    "debug": "^2.0.0",
    "hat": "0.0.3",
    "inherits": "^2.0.1",
    "ip": "^1.0.1",
    "minimist": "^1.1.1",
    "once": "^1.3.0",
    "random-iterate": "^1.0.1",
    "run-parallel": "^1.1.2",
    "run-series": "^1.0.2",
    "safe-buffer": "^5.0.0",
    "simple-get": "^2.0.0",
    "simple-peer": "^6.0.0",
    "simple-websocket": "^4.0.0",
    "string2compact": "^1.1.1",
    "uniq": "^1.0.1",
    "ws": "^1.0.0",
    "xtend": "^4.0.0"
  },
  "devDependencies": {
    "electron-webrtc": "^0.2.0",
    "magnet-uri": "^5.1.3",
    "standard": "^7.0.0",
    "tape": "^4.0.0",
    "webtorrent-fixtures": "^1.3.0"
  },
  "keywords": [
    "bittorrent",
    "p2p",
    "peer",
    "peer-to-peer",
    "stream",
    "torrent",
    "tracker",
    "wire"
  ],
  "license": "MIT",
  "main": "index.js",
  "repository": {
    "user": "feross",
    "repo": "bittorrent-tracker",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/feross/bittorrent-tracker/tarball/master",
    "clone_url": "https://github.com/feross/bittorrent-tracker",
    "https_url": "https://github.com/feross/bittorrent-tracker",
    "travis_url": "https://travis-ci.org/feross/bittorrent-tracker",
    "zip_url": "https://github.com/feross/bittorrent-tracker/archive/master.zip",
    "api_url": "https://api.github.com/repos/feross/bittorrent-tracker"
  },
  "scripts": {
    "update-authors": "./bin/update-authors.sh",
    "test": "standard && tape test/*.js",
    "start": "node server.js"
  },
  "gitHead": "d35d3d9ac9302bda0525f52a7807df1d5139a413",
  "homepage": "https://github.com/feross/bittorrent-tracker#readme",
  "_npmVersion": "2.15.5",
  "_nodeVersion": "4.4.5",
  "dist": {
    "shasum": "0aa6cb1c77cc3da2d1e136af93ff39b03aea1184",
    "tarball": "http://registry.npmjs.org/bittorrent-tracker/-/bittorrent-tracker-8.0.7.tgz"
  },
  "stars": 3,
  "versions": [
    {
      "number": "0.1.0",
      "date": "2014-03-26T08:37:44.141Z"
    },
    {
      "number": "0.1.1",
      "date": "2014-03-26T09:12:50.473Z"
    },
    {
      "number": "0.2.0",
      "date": "2014-03-27T07:36:56.056Z"
    },
    {
      "number": "0.2.1",
      "date": "2014-03-27T07:39:21.508Z"
    },
    {
      "number": "0.2.2",
      "date": "2014-03-27T08:25:01.822Z"
    },
    {
      "number": "0.3.0",
      "date": "2014-03-28T04:04:36.709Z"
    },
    {
      "number": "0.3.1",
      "date": "2014-03-28T04:56:14.890Z"
    },
    {
      "number": "0.3.2",
      "date": "2014-03-29T00:47:49.996Z"
    },
    {
      "number": "0.3.3",
      "date": "2014-04-05T06:27:49.144Z"
    },
    {
      "number": "0.3.4",
      "date": "2014-04-12T08:55:35.724Z"
    },
    {
      "number": "0.3.5",
      "date": "2014-04-12T08:57:41.388Z"
    },
    {
      "number": "0.3.6",
      "date": "2014-04-12T09:00:19.612Z"
    },
    {
      "number": "0.4.0",
      "date": "2014-04-19T06:28:59.978Z"
    },
    {
      "number": "0.4.1",
      "date": "2014-04-19T08:33:19.766Z"
    },
    {
      "number": "0.5.0",
      "date": "2014-05-01T14:31:30.276Z"
    },
    {
      "number": "0.5.1",
      "date": "2014-05-07T19:38:13.876Z"
    },
    {
      "number": "0.6.0",
      "date": "2014-05-12T00:33:05.148Z"
    },
    {
      "number": "0.6.1",
      "date": "2014-05-12T06:58:23.756Z"
    },
    {
      "number": "0.7.0",
      "date": "2014-05-14T19:49:59.964Z"
    },
    {
      "number": "0.7.1",
      "date": "2014-05-17T19:51:52.928Z"
    },
    {
      "number": "0.7.2",
      "date": "2014-05-19T01:36:30.327Z"
    },
    {
      "number": "0.7.3",
      "date": "2014-05-22T18:26:57.413Z"
    },
    {
      "number": "1.0.0",
      "date": "2014-05-24T04:26:32.022Z"
    },
    {
      "number": "1.0.1",
      "date": "2014-05-24T04:30:58.502Z"
    },
    {
      "number": "1.0.2",
      "date": "2014-06-05T07:17:27.114Z"
    },
    {
      "number": "1.1.0",
      "date": "2014-06-06T06:41:05.168Z"
    },
    {
      "number": "1.1.1",
      "date": "2014-06-06T07:26:06.666Z"
    },
    {
      "number": "1.2.0",
      "date": "2014-06-06T08:16:02.043Z"
    },
    {
      "number": "1.3.0",
      "date": "2014-06-07T22:11:39.946Z"
    },
    {
      "number": "1.4.0",
      "date": "2014-06-07T22:15:31.589Z"
    },
    {
      "number": "1.5.0",
      "date": "2014-06-12T00:57:31.921Z"
    },
    {
      "number": "1.6.0",
      "date": "2014-07-04T03:04:52.449Z"
    },
    {
      "number": "1.7.0",
      "date": "2014-07-05T21:42:28.833Z"
    },
    {
      "number": "1.8.0",
      "date": "2014-07-08T09:05:02.186Z"
    },
    {
      "number": "1.9.0",
      "date": "2014-07-11T04:31:17.212Z"
    },
    {
      "number": "1.10.0",
      "date": "2014-07-11T05:05:38.873Z"
    },
    {
      "number": "1.11.0",
      "date": "2014-07-11T10:51:42.543Z"
    },
    {
      "number": "2.0.0",
      "date": "2014-07-13T01:57:40.040Z"
    },
    {
      "number": "2.1.0",
      "date": "2014-07-22T05:58:36.477Z"
    },
    {
      "number": "2.1.1",
      "date": "2014-08-02T20:44:55.403Z"
    },
    {
      "number": "2.2.0",
      "date": "2014-08-02T21:09:07.362Z"
    },
    {
      "number": "2.2.1",
      "date": "2014-08-02T21:40:24.636Z"
    },
    {
      "number": "2.2.2",
      "date": "2014-08-03T05:33:53.464Z"
    },
    {
      "number": "2.2.3",
      "date": "2014-08-03T08:51:10.997Z"
    },
    {
      "number": "2.2.4",
      "date": "2014-08-03T09:28:14.359Z"
    },
    {
      "number": "2.4.0",
      "date": "2014-08-07T05:38:53.868Z"
    },
    {
      "number": "2.5.0",
      "date": "2014-08-17T02:05:24.266Z"
    },
    {
      "number": "2.5.1",
      "date": "2014-08-18T03:55:31.902Z"
    },
    {
      "number": "2.6.0",
      "date": "2014-08-18T08:39:31.495Z"
    },
    {
      "number": "2.6.1",
      "date": "2014-09-17T02:56:28.681Z"
    },
    {
      "number": "2.7.0",
      "date": "2014-10-07T06:15:06.356Z"
    },
    {
      "number": "2.8.0",
      "date": "2014-11-26T07:28:28.296Z"
    },
    {
      "number": "2.8.1",
      "date": "2014-11-26T08:23:08.893Z"
    },
    {
      "number": "2.8.2",
      "date": "2014-11-26T09:41:56.324Z"
    },
    {
      "number": "2.9.0",
      "date": "2014-11-26T12:22:47.662Z"
    },
    {
      "number": "2.9.1",
      "date": "2014-11-27T09:34:09.271Z"
    },
    {
      "number": "2.10.0",
      "date": "2014-12-13T23:21:57.111Z"
    },
    {
      "number": "2.10.1",
      "date": "2014-12-22T09:28:48.748Z"
    },
    {
      "number": "2.10.2",
      "date": "2014-12-22T10:19:00.380Z"
    },
    {
      "number": "2.10.3",
      "date": "2015-01-06T04:15:03.958Z"
    },
    {
      "number": "2.11.0",
      "date": "2015-01-22T22:17:47.991Z"
    },
    {
      "number": "2.12.0",
      "date": "2015-01-22T22:27:12.776Z"
    },
    {
      "number": "2.12.1",
      "date": "2015-01-24T06:45:24.507Z"
    },
    {
      "number": "3.0.0",
      "date": "2015-01-29T23:02:45.826Z"
    },
    {
      "number": "3.0.1",
      "date": "2015-01-31T23:07:57.588Z"
    },
    {
      "number": "3.0.2",
      "date": "2015-01-31T23:29:21.868Z"
    },
    {
      "number": "3.0.3",
      "date": "2015-02-02T23:24:01.085Z"
    },
    {
      "number": "3.1.0",
      "date": "2015-02-06T02:31:04.798Z"
    },
    {
      "number": "3.1.1",
      "date": "2015-02-07T00:00:32.781Z"
    },
    {
      "number": "3.1.2",
      "date": "2015-02-19T21:01:11.532Z"
    },
    {
      "number": "3.1.3",
      "date": "2015-02-28T22:54:11.743Z"
    },
    {
      "number": "3.1.4",
      "date": "2015-03-10T03:19:56.463Z"
    },
    {
      "number": "3.2.0",
      "date": "2015-03-20T04:51:06.006Z"
    },
    {
      "number": "3.2.1",
      "date": "2015-03-20T04:53:23.786Z"
    },
    {
      "number": "3.3.0",
      "date": "2015-03-27T03:19:41.475Z"
    },
    {
      "number": "3.3.1",
      "date": "2015-04-01T04:36:58.286Z"
    },
    {
      "number": "3.4.0",
      "date": "2015-04-01T22:42:42.602Z"
    },
    {
      "number": "3.4.1",
      "date": "2015-04-09T15:40:24.623Z"
    },
    {
      "number": "3.4.2",
      "date": "2015-04-11T00:03:41.810Z"
    },
    {
      "number": "3.4.3",
      "date": "2015-04-20T23:39:54.621Z"
    },
    {
      "number": "3.4.4",
      "date": "2015-04-21T03:02:44.462Z"
    },
    {
      "number": "3.4.5",
      "date": "2015-04-24T04:16:25.143Z"
    },
    {
      "number": "3.4.6",
      "date": "2015-04-24T05:49:28.571Z"
    },
    {
      "number": "3.4.7",
      "date": "2015-04-24T06:27:55.988Z"
    },
    {
      "number": "3.4.8",
      "date": "2015-05-01T04:01:04.624Z"
    },
    {
      "number": "3.4.9",
      "date": "2015-05-01T21:21:54.630Z"
    },
    {
      "number": "3.5.0",
      "date": "2015-05-02T00:36:54.437Z"
    },
    {
      "number": "3.5.1",
      "date": "2015-05-02T04:33:44.323Z"
    },
    {
      "number": "3.6.0",
      "date": "2015-05-02T19:16:03.152Z"
    },
    {
      "number": "3.6.1",
      "date": "2015-05-03T21:21:01.804Z"
    },
    {
      "number": "3.6.3",
      "date": "2015-05-03T23:49:38.910Z"
    },
    {
      "number": "4.0.0",
      "date": "2015-05-04T00:21:53.560Z"
    },
    {
      "number": "4.1.0",
      "date": "2015-05-04T03:30:53.280Z"
    },
    {
      "number": "4.1.1",
      "date": "2015-05-04T03:39:01.354Z"
    },
    {
      "number": "4.1.2",
      "date": "2015-05-04T04:01:22.318Z"
    },
    {
      "number": "4.1.3",
      "date": "2015-05-06T06:31:47.477Z"
    },
    {
      "number": "4.2.0",
      "date": "2015-05-17T06:26:21.902Z"
    },
    {
      "number": "4.3.0",
      "date": "2015-05-17T07:08:07.654Z"
    },
    {
      "number": "4.3.1",
      "date": "2015-05-17T08:54:36.607Z"
    },
    {
      "number": "4.3.2",
      "date": "2015-05-17T20:54:25.087Z"
    },
    {
      "number": "4.3.3",
      "date": "2015-05-19T11:33:14.193Z"
    },
    {
      "number": "4.3.4",
      "date": "2015-05-20T13:46:45.699Z"
    },
    {
      "number": "4.3.5",
      "date": "2015-05-22T14:22:43.752Z"
    },
    {
      "number": "4.3.6",
      "date": "2015-05-22T14:30:57.439Z"
    },
    {
      "number": "4.3.7",
      "date": "2015-05-24T14:44:18.346Z"
    },
    {
      "number": "4.4.0",
      "date": "2015-05-28T00:50:40.826Z"
    },
    {
      "number": "4.4.1",
      "date": "2015-05-29T21:24:52.974Z"
    },
    {
      "number": "4.4.2",
      "date": "2015-05-30T04:06:27.628Z"
    },
    {
      "number": "4.4.3",
      "date": "2015-05-30T21:27:53.982Z"
    },
    {
      "number": "4.4.4",
      "date": "2015-06-06T20:11:09.401Z"
    },
    {
      "number": "4.4.5",
      "date": "2015-06-10T05:32:54.669Z"
    },
    {
      "number": "4.5.0",
      "date": "2015-06-24T08:49:51.161Z"
    },
    {
      "number": "4.5.1",
      "date": "2015-07-02T23:33:58.797Z"
    },
    {
      "number": "5.0.0",
      "date": "2015-07-05T00:16:02.409Z"
    },
    {
      "number": "5.0.1",
      "date": "2015-07-07T00:49:31.211Z"
    },
    {
      "number": "5.1.0",
      "date": "2015-07-08T17:15:07.626Z"
    },
    {
      "number": "5.2.0",
      "date": "2015-07-17T01:35:00.044Z"
    },
    {
      "number": "5.2.1",
      "date": "2015-07-22T23:31:46.734Z"
    },
    {
      "number": "5.3.0",
      "date": "2015-07-27T22:20:21.376Z"
    },
    {
      "number": "5.3.1",
      "date": "2015-07-27T22:29:23.974Z"
    },
    {
      "number": "5.3.2",
      "date": "2015-07-27T22:47:48.299Z"
    },
    {
      "number": "6.0.0",
      "date": "2015-07-29T09:13:20.949Z"
    },
    {
      "number": "6.0.1",
      "date": "2015-07-29T10:22:52.009Z"
    },
    {
      "number": "6.0.2",
      "date": "2015-07-29T10:57:35.970Z"
    },
    {
      "number": "6.0.3",
      "date": "2015-08-06T12:52:54.518Z"
    },
    {
      "number": "6.0.4",
      "date": "2015-08-23T22:12:23.131Z"
    },
    {
      "number": "6.0.5",
      "date": "2015-09-18T22:59:46.849Z"
    },
    {
      "number": "6.0.6",
      "date": "2015-10-24T00:32:13.136Z"
    },
    {
      "number": "6.0.7",
      "date": "2015-11-22T02:23:24.750Z"
    },
    {
      "number": "6.0.8",
      "date": "2015-12-01T06:59:38.966Z"
    },
    {
      "number": "6.1.0",
      "date": "2015-12-02T23:47:18.043Z"
    },
    {
      "number": "6.2.0",
      "date": "2015-12-03T06:33:41.094Z"
    },
    {
      "number": "6.3.0",
      "date": "2015-12-05T08:07:58.877Z"
    },
    {
      "number": "6.3.1",
      "date": "2015-12-05T09:37:49.725Z"
    },
    {
      "number": "6.3.2",
      "date": "2015-12-05T11:08:22.057Z"
    },
    {
      "number": "6.3.3",
      "date": "2015-12-15T23:40:09.711Z"
    },
    {
      "number": "6.3.4",
      "date": "2015-12-16T11:42:37.504Z"
    },
    {
      "number": "6.3.5",
      "date": "2015-12-28T20:26:50.530Z"
    },
    {
      "number": "6.3.6",
      "date": "2016-01-02T22:39:53.192Z"
    },
    {
      "number": "7.0.0",
      "date": "2016-01-03T18:51:26.372Z"
    },
    {
      "number": "7.0.1",
      "date": "2016-01-13T22:37:06.376Z"
    },
    {
      "number": "7.0.2",
      "date": "2016-02-08T01:35:57.931Z"
    },
    {
      "number": "7.0.3",
      "date": "2016-02-14T08:41:24.257Z"
    },
    {
      "number": "7.1.0",
      "date": "2016-02-16T03:39:52.435Z"
    },
    {
      "number": "7.2.0",
      "date": "2016-02-23T20:52:41.320Z"
    },
    {
      "number": "7.3.0",
      "date": "2016-03-01T02:16:36.378Z"
    },
    {
      "number": "7.3.1",
      "date": "2016-03-02T00:22:43.611Z"
    },
    {
      "number": "7.3.2",
      "date": "2016-03-02T09:13:40.993Z"
    },
    {
      "number": "7.3.3",
      "date": "2016-03-11T02:44:57.427Z"
    },
    {
      "number": "7.3.4",
      "date": "2016-03-11T05:27:46.988Z"
    },
    {
      "number": "7.4.0",
      "date": "2016-03-12T01:23:06.123Z"
    },
    {
      "number": "7.4.1",
      "date": "2016-03-15T02:27:03.191Z"
    },
    {
      "number": "7.5.0",
      "date": "2016-03-16T03:08:36.240Z"
    },
    {
      "number": "7.5.1",
      "date": "2016-03-16T04:00:22.562Z"
    },
    {
      "number": "7.5.2",
      "date": "2016-03-16T04:42:07.015Z"
    },
    {
      "number": "7.5.3",
      "date": "2016-03-16T19:23:25.742Z"
    },
    {
      "number": "7.5.4",
      "date": "2016-03-17T01:13:12.189Z"
    },
    {
      "number": "7.5.5",
      "date": "2016-03-18T22:09:53.413Z"
    },
    {
      "number": "7.5.6",
      "date": "2016-03-18T22:57:45.742Z"
    },
    {
      "number": "7.5.7",
      "date": "2016-03-19T05:49:43.594Z"
    },
    {
      "number": "7.5.8",
      "date": "2016-03-19T06:15:37.247Z"
    },
    {
      "number": "7.5.9",
      "date": "2016-03-24T01:32:34.051Z"
    },
    {
      "number": "7.6.0",
      "date": "2016-03-24T05:04:43.665Z"
    },
    {
      "number": "7.6.1",
      "date": "2016-03-24T12:13:34.087Z"
    },
    {
      "number": "7.6.2",
      "date": "2016-03-29T06:39:35.210Z"
    },
    {
      "number": "7.7.0",
      "date": "2016-03-30T07:32:25.000Z"
    },
    {
      "number": "8.0.0",
      "date": "2016-04-01T04:58:31.922Z"
    },
    {
      "number": "8.0.1",
      "date": "2016-04-04T11:10:26.159Z"
    },
    {
      "number": "8.0.2",
      "date": "2016-04-21T10:17:20.957Z"
    },
    {
      "number": "8.0.3",
      "date": "2016-04-22T23:43:51.993Z"
    },
    {
      "number": "8.0.4",
      "date": "2016-04-24T06:03:19.740Z"
    },
    {
      "number": "8.0.5",
      "date": "2016-05-13T23:53:32.512Z"
    },
    {
      "number": "8.0.6",
      "date": "2016-05-25T20:49:51.460Z"
    },
    {
      "number": "8.0.7",
      "date": "2016-05-30T08:32:33.142Z"
    }
  ],
  "created": "2014-03-26T08:37:44.141Z",
  "modified": "2016-05-30T08:32:33.142Z",
  "lastPublisher": {
    "name": "feross",
    "email": "feross@feross.org"
  },
  "owners": [
    {
      "name": "feross",
      "email": "feross@feross.org"
    }
  ],
  "readme": "# bittorrent-tracker [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][downloads-url]\n\n[travis-image]: https://img.shields.io/travis/feross/bittorrent-tracker/master.svg\n[travis-url]: https://travis-ci.org/feross/bittorrent-tracker\n[npm-image]: https://img.shields.io/npm/v/bittorrent-tracker.svg\n[npm-url]: https://npmjs.org/package/bittorrent-tracker\n[downloads-image]: https://img.shields.io/npm/dm/bittorrent-tracker.svg\n[downloads-url]: https://npmjs.org/package/bittorrent-tracker\n\n#### Simple, robust, BitTorrent tracker (client & server) implementation\n\n![tracker](https://raw.githubusercontent.com/feross/bittorrent-tracker/master/img.png)\n\nNode.js implementation of a [BitTorrent tracker](https://wiki.theory.org/BitTorrentSpecification#Tracker_HTTP.2FHTTPS_Protocol), client and server.\n\nA **BitTorrent tracker** is an web service which responds to requests from BitTorrent\nclients. The requests include metrics from clients that help the tracker keep overall\nstatistics about the torrent. The response includes a peer list that helps the client\nparticipate in the torrent swarm.\n\nThis module is used by [WebTorrent](http://webtorrent.io).\n\n## features\n\n- Includes client & server implementations\n- Supports all mainstream tracker types:\n  - HTTP trackers\n  - UDP trackers ([BEP 15](http://www.bittorrent.org/beps/bep_0015.html))\n  - WebTorrent trackers ([BEP forthcoming](http://webtorrent.io))\n- Supports ipv4 & ipv6\n- Supports tracker \"scrape\" extension\n- Robust and well-tested\n  - Comprehensive test suite (runs entirely offline, so it's reliable)\n  - Used by popular clients: [WebTorrent](http://webtorrent.io), [peerflix](https://github.com/mafintosh/peerflix), and [playback](https://mafintosh.github.io/playback/)\n- Tracker statistics available via web interface at `/stats`\n\nAlso see [bittorrent-dht](https://github.com/feross/bittorrent-dht).\n\n## install\n\n```\nnpm install bittorrent-tracker\n```\n\n## usage\n\n### client\n\nTo connect to a tracker, just do this:\n\n```js\nvar Client = require('bittorrent-tracker')\n\nvar requiredOpts = {\n  infoHash: new Buffer('012345678901234567890'), // hex string or Buffer\n  peerId: new Buffer('01234567890123456789'), // hex string or Buffer\n  announce: [], // list of tracker server urls\n  port: 6881 // torrent client port, (in browser, optional)\n}\n\nvar optionalOpts = {\n  // RTCPeerConnection config object (only used in browser)\n  rtcConfig: {},\n  // custom webrtc impl, useful in node to specify [wrtc](https://npmjs.com/package/wrtc)\n  wrtc: {},\n  getAnnounceOpts: function () {\n    // provide a callback that will be called whenever announce() is called\n    // internally (on timer), or by the user\n    return {\n      uploaded: 0,\n      downloaded: 0,\n      left: 0,\n      customParam: 'blah' // custom parameters supported\n    }\n  }\n}\n\nvar client = new Client(requiredOpts)\n\nclient.on('error', function (err) {\n  // fatal client error!\n  console.log(err.message)\n})\n\nclient.on('warning', function (err) {\n  // a tracker was unavailable or sent bad data to the client. you can probably ignore it\n  console.log(err.message)\n})\n\n// start getting peers from the tracker\nclient.start()\n\nclient.on('update', function (data) {\n  console.log('got an announce response from tracker: ' + data.announce)\n  console.log('number of seeders in the swarm: ' + data.complete)\n  console.log('number of leechers in the swarm: ' + data.incomplete)\n})\n\nclient.once('peer', function (addr) {\n  console.log('found a peer: ' + addr) // 85.10.239.191:48623\n})\n\n// announce that download has completed (and you are now a seeder)\nclient.complete()\n\n// force a tracker announce. will trigger more 'update' events and maybe more 'peer' events\nclient.update()\n\n// provide parameters to the tracker\nclient.update({\n  uploaded: 0,\n  downloaded: 0,\n  left: 0,\n  customParam: 'blah' // custom parameters supported\n})\n\n// stop getting peers from the tracker, gracefully leave the swarm\nclient.stop()\n\n// ungracefully leave the swarm (without sending final 'stop' message)\nclient.destroy()\n\n// scrape\nclient.scrape()\n\nclient.on('scrape', function (data) {\n  console.log('got a scrape response from tracker: ' + data.announce)\n  console.log('number of seeders in the swarm: ' + data.complete)\n  console.log('number of leechers in the swarm: ' + data.incomplete)\n  console.log('number of total downloads of this torrent: ' + data.downloaded)\n})\n```\n\n### server\n\nTo start a BitTorrent tracker server to track swarms of peers:\n\n```js\nvar Server = require('bittorrent-tracker').Server\n\nvar server = new Server({\n  udp: true, // enable udp server? [default=true]\n  http: true, // enable http server? [default=true]\n  ws: true, // enable websocket server? [default=true]\n  stats: true, // enable web-based statistics? [default=true]\n  filter: function (infoHash, params, cb) {\n    // Blacklist/whitelist function for allowing/disallowing torrents. If this option is\n    // omitted, all torrents are allowed. It is possible to interface with a database or\n    // external system before deciding to allow/deny, because this function is async.\n\n    // It is possible to block by peer id (whitelisting torrent clients) or by secret\n    // key (private trackers). Full access to the original HTTP/UDP request parameters\n    // are available in `params`.\n\n    // This example only allows one torrent.\n\n    var allowed = (infoHash === 'aaa67059ed6bd08362da625b3ae77f6f4a075aaa')\n    cb(allowed)\n\n    // In addition to returning a boolean (`true` for allowed, `false` for disallowed),\n    // you can return an `Error` object to disallow and provide a custom reason.\n  }\n})\n\n// Internal http, udp, and websocket servers exposed as public properties.\nserver.http\nserver.udp\nserver.ws\n\nserver.on('error', function (err) {\n  // fatal server error!\n  console.log(err.message)\n})\n\nserver.on('warning', function (err) {\n  // client sent bad data. probably not a problem, just a buggy client.\n  console.log(err.message)\n})\n\nserver.on('listening', function () {\n  // fired when all requested servers are listening\n  console.log('listening on http port:' + server.http.address().port)\n  console.log('listening on udp port:' + server.udp.address().port)\n})\n\n// start tracker server listening! Use 0 to listen on a random free port.\nserver.listen(port, hostname, onlistening)\n\n// listen for individual tracker messages from peers:\n\nserver.on('start', function (addr) {\n  console.log('got start message from ' + addr)\n})\n\nserver.on('complete', function (addr) {})\nserver.on('update', function (addr) {})\nserver.on('stop', function (addr) {})\n\n// get info hashes for all torrents in the tracker server\nObject.keys(server.torrents)\n\n// get the number of seeders for a particular torrent\nserver.torrents[infoHash].complete\n\n// get the number of leechers for a particular torrent\nserver.torrents[infoHash].incomplete\n\n// get the peers who are in a particular torrent swarm\nserver.torrents[infoHash].peers\n```\n\nThe http server will handle requests for the following paths: `/announce`, `/scrape`. Requests for other paths will not be handled.\n\n## multi scrape\n\nScraping multiple torrent info is possible with a static `Client.scrape` method:\n\n```js\nvar Client = require('bittorrent-tracker')\nClient.scrape(announceUrl, [ infoHash1, infoHash2 ], function (err, results) {\n  results[infoHash1].announce\n  results[infoHash1].infoHash\n  results[infoHash1].complete\n  results[infoHash1].incomplete\n  results[infoHash1].downloaded\n\n  // ...\n})\n````\n\n## command line\n\nEasily start a tracker server:\n\n```sh\n$ bittorrent-tracker\nhttp server listening on 8000\nudp server listening on 8000\nws server listening on 8000\n```\n\nLots of options:\n\n```sh\n$ bittorrent-tracker --help\n  bittorrent-tracker - Start a bittorrent tracker server\n\n  Usage:\n    bittorrent-tracker [OPTIONS]\n\n  If no --http, --udp, or --ws option is supplied, all tracker types will be started.\n\n  Options:\n    -p, --port [number]  change the port [default: 8000]\n        --trust-proxy    trust 'x-forwarded-for' header from reverse proxy\n        --interval       client announce interval (ms) [default: 600000]\n        --http           enable http server\n        --udp            enable udp server\n        --ws             enable websocket server\n    -q, --quiet          only show error output\n    -s, --silent         show no output\n    -v, --version        print the current version\n\n  Please report bugs!  https://github.com/feross/bittorrent-tracker/issues\n```\n\n## license\n\nMIT. Copyright (c) [Feross Aboukhadijeh](http://feross.org).\n"
}