{
  "name": "stylish-commit",
  "version": "0.0.8",
  "description": "Check staged changes with style scripts before commiting with git.",
  "repository": {
    "user": "electronifie",
    "repo": "stylish-commit",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/electronifie/stylish-commit/tarball/master",
    "clone_url": "https://github.com/electronifie/stylish-commit",
    "https_url": "https://github.com/electronifie/stylish-commit",
    "travis_url": "https://travis-ci.org/electronifie/stylish-commit",
    "zip_url": "https://github.com/electronifie/stylish-commit/archive/master.zip",
    "api_url": "https://api.github.com/repos/electronifie/stylish-commit"
  },
  "license": "ISC",
  "main": "index.js",
  "bin": {
    "stylish-commit": "bin/stylish-commit"
  },
  "scripts": {
    "test": "mocha test"
  },
  "keywords": [
    "git",
    "pre-commit",
    "styleguide",
    "stylecheck",
    "lint",
    "hint",
    "jslint",
    "jshint"
  ],
  "devDependencies": {
    "chai": "^3.0.0",
    "fs-extra": "^0.20.1",
    "mocha": "^2.2.5",
    "stylish-commit-auto-hook-install": "latest"
  },
  "dependencies": {
    "argparse": "^1.0.2",
    "colors": "^1.1.2",
    "colors.js": "^1.2.4",
    "debug": "^2.2.0",
    "diff": "^1.4.0",
    "figures": "^1.3.5",
    "handlebars": "^3.0.3",
    "inquirer": "^0.8.5",
    "lodash": "^3.9.3",
    "minimatch": "^2.0.8",
    "parse-diff": "0.0.15",
    "require-all": "^1.1.0",
    "sync-exec": "^0.5.0"
  },
  "gitHead": "be3c31e1640fbcbde61875627eeb2ae9e4f92ac6",
  "homepage": "https://github.com/electronifie/stylish-commit",
  "_npmVersion": "1.4.28",
  "dist": {
    "shasum": "a0b3d8d887992bf64c7e014f108d185a6f53bcae",
    "tarball": "http://registry.npmjs.org/stylish-commit/-/stylish-commit-0.0.8.tgz"
  },
  "stars": 1,
  "versions": [
    {
      "number": "0.0.1",
      "date": "2015-07-02T01:42:38.014Z"
    },
    {
      "number": "0.0.2",
      "date": "2015-07-08T03:14:57.176Z"
    },
    {
      "number": "0.0.3",
      "date": "2015-07-09T03:10:41.767Z"
    },
    {
      "number": "0.0.4",
      "date": "2015-07-09T03:33:38.034Z"
    },
    {
      "number": "0.0.5",
      "date": "2015-07-09T03:41:47.688Z"
    },
    {
      "number": "0.0.6",
      "date": "2015-07-09T03:53:25.772Z"
    },
    {
      "number": "0.0.7",
      "date": "2015-07-13T02:24:27.302Z"
    },
    {
      "number": "0.0.8",
      "date": "2015-09-22T14:37:36.813Z"
    }
  ],
  "created": "2015-07-02T01:42:38.014Z",
  "modified": "2016-06-06T14:48:03.268Z",
  "lastPublisher": {
    "name": "andrewpmckenzie",
    "email": "andrew.mckenzie@electronifie.com"
  },
  "owners": [
    {
      "name": "andrewpmckenzie",
      "email": "andrew@mckenzie.name"
    }
  ],
  "readme": "# stylish-commit\n[![Build Status](https://travis-ci.org/electronifie/stylish-commit.svg)](https://travis-ci.org/electronifie/stylish-commit)\n[![npm](https://img.shields.io/npm/v/stylish-commit.svg)](https://www.npmjs.com/package/stylish-commit)\n\nstylish-commit is a command-line tool and git pre-commit hook that checks your changes using simple lint scripts\nwritten in javascript.\n\nUse it for simple tasks like:\n - converting tabs to spaces\n - [removing trailing whitespace](https://github.com/electronifie/style-guide/blob/master/no-trailing-spaces.js)\n - [detecting usage of `debugger` and `console.log`](https://github.com/electronifie/style-guide/blob/master/no-debugger.js)\n\n## Operation\n\nWhen you commit some code, the style scripts will be run against all staged changes. If a script has modified\nlines you will be prompted to change them, like:\n![prompt with changes](http://f.cl.ly/items/1V2d08083x2G3P0n2n2Z/stylish-commit_lg.gif)\n\nHere, you have the option to:\n - **continue (ignores suggestions)** - proceeds with the commit without making any changes.\n - **apply the suggestions** - updates files with the suggested changes. This option takes you to\n   another menu with the options to *apply suggestions and commit*, *apply suggestions and cancel commit*, \n   *ignore suggestions and cancel*, or *cancel (abort) the commit*. This option will only be available if \n   the changes can be applied cleanly (i.e. there are no unstaged changes to the file).\n - **select suggestions to apply** - lets you pick which suggestions are applied when you select the\n   option above.\n - **cancel (abort) the commit** - so you can manually make changes.\n\n## Installation\n\nFor node/iojs projects, The hook can be installed automatically by running `npm install stylish-commit-auto-hook-install --save-dev`\nin your project's root folder. This will add `stylish-commit-auto-hook-install` to your project's dev-dependencies and\nautomatically install the hook whenever someone installs dependencies with `npm install`.\n\nYou can also install the hook manually by running `npm install stylish-commit -g` then `stylish-commit --install-hook`. If\nyou take this route, you'll need to manually install the hook for each clone of the project.\n\n## Creating style scripts\n\nStyle scripts sit in your project's `.style` directory<sup>[1](#alternative-dir)</sup>, and look like:\n\n```javascript\nmodule.exports = {\n  name: 'no-trailing-spaces',\n  appliesTo: '**/*.+(js|txt)',\n  validate: function (lines) {\n    return lines.map(function (line) { return line.replace(/\\s+$/, ''); });\n  }\n};\n```\n\nEach style script must have a `name` field and a `validate` function. It can also provide an `appliesTo`\n[minimatch glob](https://github.com/isaacs/minimatch) that restricts which modified files it checks.\n\nThe `validate` function receives an array of strings, each representing a changed line and is expected to\nreturn an array of the same length with either the unaltered line or a line containing modifications.\ne.g. the above script takes  <code>['twas brillig and', 'the slithy &nbsp;&nbsp;&nbsp;', 'toves']</code>\nand returns <code>['twas brillig and', 'the slithy', 'toves']`</code>.\n\nThere are some scripts to get you started at https://github.com/electronifie/style-guide.\n\n### Testing style scripts\n\nYou can test your scripts with the contents of a test file:\n 1. create a test file e.g. ~/foo.txt\n 2. ensure stylish-commit is globally installed with `npm install -g stylish-commit`\n 3. run `stylish-commit -t ~/foo.txt` from within the repo configured to use your style scripts\n\n### Alternative script formats\n\n#### Regex search + replace\nRuns a regex replace on each line. The `with` property can use dollar-notation (e.g. `$1`) to reference\nmatching groups. The example below is functionally equivalent to the one above, just a bit easier to read.\n\n```javascript\nmodule.exports = {\n  name: 'no-trailing-spaces',\n  appliesTo: '**/*.+(js|txt)',\n  validate: { replace: /\\s+$/, with: '' }\n};\n```\n\n## Known issues\n - only works when committing from a terminal. The scripts will not run when committing from non-tty\n   interfaces like IDEs or git GUIs.\n - does not smartly handle multiple changes to the same line of the same file. In this case, only the\n   last script to run's changes will be applied.\n\n<hr>\n<sup id=\"alternative-dir\">**1**</sup> *you can use a custom directory for your style scripts by adding a `styleScripts` property to your project's `package.json` with a path relative to the project's root.*\n"
}