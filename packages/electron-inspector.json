{
  "name": "electron-inspector",
  "version": "0.1.3",
  "engines": {
    "node": ">=4.5.0"
  },
  "description": "Debugger UI for the main Electron process",
  "main": "lib/index.js",
  "bin": {
    "electron-inspector": "bin/electron-inspector.js"
  },
  "scripts": {
    "prepublish": "npm run build",
    "build": "tsc -p src/tsconfig.json"
  },
  "repository": {
    "user": "enlight",
    "repo": "electron-inspector",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/enlight/electron-inspector/tarball/master",
    "clone_url": "https://github.com/enlight/electron-inspector",
    "https_url": "https://github.com/enlight/electron-inspector",
    "travis_url": "https://travis-ci.org/enlight/electron-inspector",
    "zip_url": "https://github.com/enlight/electron-inspector/archive/master.zip",
    "api_url": "https://api.github.com/repos/enlight/electron-inspector"
  },
  "keywords": [
    "electron",
    "node-inspector",
    "inspector",
    "debug",
    "debugger"
  ],
  "author": {
    "name": "Vadim Macagon",
    "email": "vadim.macagon@gmail.com"
  },
  "license": "MIT",
  "homepage": "https://github.com/enlight/electron-inspector#readme",
  "dependencies": {
    "node-inspector": "^0.12.8",
    "v8-debug": "^0.7.7",
    "v8-profiler": "github:enlight/v8-profiler#v5.6.5-electron-v1.3",
    "yargs": "^5.0.0"
  },
  "devDependencies": {
    "@types/node": "^6.0.38",
    "@types/yargs": "0.0.30",
    "electron": "^1.3.5",
    "electron-rebuild": "^1.2.1",
    "tslint": "^3.15.0-dev.0",
    "typescript": "^2.1.0-dev.20160912"
  },
  "gitHead": "4550667e82c8bf0c2b64a466a76e5c3bfd83345c",
  "_npmVersion": "3.10.7",
  "_nodeVersion": "6.1.0",
  "dist": {
    "shasum": "49aa48368464ee7aa30d121321258124b7bedacc",
    "tarball": "http://registry.npmjs.org/electron-inspector/-/electron-inspector-0.1.3.tgz"
  },
  "stars": 1,
  "versions": [
    {
      "number": "0.1.0",
      "date": "2016-09-15T10:07:51.441Z"
    },
    {
      "number": "0.1.1",
      "date": "2016-09-15T12:55:56.345Z"
    },
    {
      "number": "0.1.2",
      "date": "2016-09-15T17:39:59.483Z"
    },
    {
      "number": "0.1.3",
      "date": "2016-09-22T09:10:14.147Z"
    }
  ],
  "created": "2016-09-15T10:07:51.441Z",
  "modified": "2016-09-22T09:10:14.147Z",
  "lastPublisher": {
    "name": "enlight",
    "email": "vadim.macagon@gmail.com"
  },
  "owners": [
    {
      "name": "enlight",
      "email": "vadim.macagon@gmail.com"
    }
  ],
  "readme": "# electron-inspector\r\nDebugger UI for the main Electron process\r\n\r\n## Overview\r\n\r\nThis package wraps [`node-inspector`][node-inspector-npm], which can be used to debug JavaScript\r\ncode running in the main Electron process. Getting `node-inspector` running can require somewhere\r\nbetween a little and [a lot of effort][node-inspector-electron-v13x] depending on the Electron\r\nversion you wish to debug. The goal of `electron-inspector` is to get `node-inspector` running\r\nwith minimum effort on your part.\r\n\r\n[node-inspector-npm]: https://www.npmjs.com/package/node-inspector\r\n[node-inspector-electron-v13x]: http://vadim.macagon.com/blog/2016/09/11/rebuilding-node-inspector-for-electron-v13x/\r\n\r\n## Prerequisites\r\n\r\n- NPM v3\r\n- NodeJS v4.5 (or later)\r\n- [`electron`][electron-npm], or [`electron-prebuilt`][electron-prebuilt-npm], or [`electron-prebuilt-compile`][electron-prebuilt-compile-npm]\r\n- [`electron-rebuild`][electron-rebuild-npm] (optional)\r\n\r\n[electron-npm]: https://www.npmjs.com/package/electron\r\n[electron-prebuilt-npm]: https://www.npmjs.com/package/electron-prebuilt\r\n[electron-prebuilt-compile-npm]: https://www.npmjs.com/package/electron-prebuilt-compile\r\n[electron-rebuild-npm]: https://www.npmjs.com/package/electron-rebuild\r\n\r\n## Quick Start\r\n\r\n`electron-inspector` should be installed as a local dev dependency of your Electron app: \r\n\r\n```shell\r\nnpm install electron-inspector --save-dev\r\n```\r\n\r\nThe easiest way to run the inspector in a cross-platform manner is to add an NPM script to your\r\n`package.json`, for example:\r\n\r\n```json\r\n\"scripts\": {\r\n  \"inspect-main\": \"electron-inspector\"\r\n}\r\n```\r\n\r\nThen run the `inspect-main` script on the command line with:\r\n\r\n```shell\r\nnpm run inspect-main\r\n```\r\n\r\nAlternatively, if you don't want to mess with your `package.json` you can directly execute\r\n`electron-inspector` (macOS / Linux), or `.\\\\node_modules\\\\.bin\\\\electron-inspector` (Windows).\r\n\r\nOn startup `electron-inspector` will check for compatibility of the native modules in\r\n`node-inspector` with the Electron version you wish to debug, if the compatibility check\r\nfails and `electron-rebuild` is installed then the native modules will be automatically\r\nrebuilt. You can disable auto-rebuild using the `--no-auto-rebuild` command line option.\r\n\r\nWhen `electron-inspector` finally gets `node-inspector` running you will see a URL printed to the\r\nconsole window. For example:\r\n\r\n```shell\r\nVisit http://127.0.0.1:8080/?port=5858 to start debugging.\r\n```\r\n\r\nYou can then [start Electron in debug mode][electron-debug] and open the given URL in your browser.\r\n\r\n[electron-debug]: http://electron.atom.io/docs/tutorial/debugging-main-process/#enable-debug-mode-for-electron \r\n\r\n## Configuration\r\n\r\n`node-inspector` can be configured in [multiple ways][node-inspector-config], `electron-inspector`\r\nwill pass through most of the supported command line options.\r\n\r\n[node-inspector-config]: https://www.npmjs.com/package/node-inspector#configuration\r\n\r\n### Command Line Options\r\n\r\n`electron-inspector` accepts most of the commandline options `node-inspector` does:\r\n\r\n<table>\r\n  <thead>\r\n    <tr>\r\n      <th align=\"left\" width=\"25%\">Option</th>\r\n      <th align=\"left\">Alias</th>\r\n      <th align=\"left\">Default</th>\r\n      <th align=\"left\">Description</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td><code>--help</code></td>\r\n      <td/>\r\n      <td/>\r\n      <td>\r\n        Display information about the available options.\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td><code>--auto-rebuild</code></td>\r\n      <td/>\r\n      <td>true</td>\r\n      <td>\r\n        Toggle automatic rebuild of native node-inspector modules, this only works if\r\n        <code>electron-rebuild</code> is installed.\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td><code>--electron</code></td>\r\n      <td/>\r\n      <td/>\r\n      <td>\r\n        Path to the Electron executable that should be used to run <code>node-inspector</code>.\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td><b>node-inspector</b></td>\r\n      <td/>\r\n      <td/>\r\n      <td/>\r\n    </tr>\r\n    <tr>\r\n      <td><code>--config</code></td>\r\n      <td/>\r\n      <td/>\r\n      <td>\r\n        Path to file with <code>node-inspector</code> config information.\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td><code>--debug-port</code></td>\r\n      <td>\r\n        <code>-d</code>\r\n      </td>\r\n      <td>5858</td>\r\n      <td>\r\n        Debug port of the Electron process you wish to debug.\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td><code>--web-host</code></td>\r\n      <td/>\r\n      <td>0.0.0.0</td>\r\n      <td>\r\n        Host to listen on for <code>node-inspector</code> web interface, <code>127.0.0.1</code> by\r\n        default.\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td><code>--web-port</code></td>\r\n      <td>\r\n        <code>-p</code>\r\n      </td>\r\n      <td>8080</td>\r\n      <td>\r\n        Port to listen on for <code>node-inspector</code> web interface.\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td><code>--save-live-edit</code></td>\r\n      <td/>\r\n      <td>false</td>\r\n      <td>\r\n        Save live edit changes to disk (update the edited files).\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td><code>--preload</code></td>\r\n      <td/>\r\n      <td>true</td>\r\n      <td>\r\n        Preload <code>*.js</code> files. You can disable this option to speed up the startup.\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td><code>--inject</code></td>\r\n      <td/>\r\n      <td>true</td>\r\n      <td>\r\n        Enable injection of debugger extensions into the debugged process. It's possible disable only\r\n        part of injections using subkeys, e.g. <code>--no-inject.network</code>.\r\n        Allowed keys: <code>network</code>, <code>profiles</code>, <code>console</code>.\r\n    </tr>\r\n    <tr>\r\n      <td><code>--hidden</code></td>\r\n      <td/>\r\n      <td/>\r\n      <td>\r\n        Array of files to hide from the UI, breakpoints in these files will be ignored. All paths are\r\n        interpreted as regular expressions.\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td><code>--stack-trace-limit</code></td>\r\n      <td/>\r\n      <td>\r\n        50\r\n      </td>\r\n      <td>\r\n        Number of stack frames to show on a breakpoint.\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td><code>--ssl-key</code></td>\r\n      <td/>\r\n      <td/>\r\n      <td>\r\n        Path to file containing a valid SSL key.\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td><code>--ssl-cert</code></td>\r\n      <td/>\r\n      <td/>\r\n      <td>\r\n        Path to file containing a valid SSL certificate.\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n# License\r\n\r\nMIT\r\n"
}