{
  "name": "micro-app-mqtt-x10-bridge",
  "version": "1.0.0",
  "description": "mqtt to x10 bridge",
  "main": "lib/server.js",
  "scripts": {
    "start": "node lib/server.js",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "dependencies": {
    "micro-app-framework": "^0.1.1",
    "socket.io": "~1.3.7",
    "mqtt": "~1.6.3",
    "node-x10-comm": "~1.0.7",
    "serialport": "~2.0.6"
  },
  "repository": {
    "user": "mhdawson",
    "repo": "micro-app-mqtt-x10-bridge",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/mhdawson/micro-app-mqtt-x10-bridge/tarball/master",
    "clone_url": "https://github.com/mhdawson/micro-app-mqtt-x10-bridge",
    "https_url": "https://github.com/mhdawson/micro-app-mqtt-x10-bridge",
    "travis_url": "https://travis-ci.org/mhdawson/micro-app-mqtt-x10-bridge",
    "zip_url": "https://github.com/mhdawson/micro-app-mqtt-x10-bridge/archive/master.zip",
    "api_url": "https://api.github.com/repos/mhdawson/micro-app-mqtt-x10-bridge"
  },
  "keywords": [
    "iot",
    "mqtt",
    "dashboard",
    "micro-app",
    "sensor",
    "x10"
  ],
  "author": {
    "name": "Michael Dawson"
  },
  "license": "MIT",
  "homepage": "https://github.com/mhdawson/micro-app-mqtt-x10-bridge#readme",
  "contributors": [
    {
      "name": "Michael Dawson",
      "email": "mdawson@devrus.com"
    }
  ],
  "gitHead": "0daa879b00a0a4b623f27d69ad9c46f71fc2b28c",
  "_npmVersion": "2.14.12",
  "_nodeVersion": "4.3.0",
  "dist": {
    "shasum": "86f3e864155231d4db429d7e00d5ef840300dbd1",
    "tarball": "http://registry.npmjs.org/micro-app-mqtt-x10-bridge/-/micro-app-mqtt-x10-bridge-1.0.0.tgz"
  },
  "versions": [
    {
      "number": "1.0.0",
      "date": "2016-02-27T03:45:55.768Z"
    }
  ],
  "created": "2016-02-27T03:45:55.768Z",
  "modified": "2016-02-27T03:45:55.768Z",
  "lastPublisher": {
    "name": "mhdawson1",
    "email": "mdawson@devrus.com"
  },
  "owners": [
    {
      "name": "mhdawson1",
      "email": "mdawson@devrus.com"
    }
  ],
  "readme": "# micro-app-mqtt-x10-bridge - mqtt to x10 bridge\n\nMicro app that allows x10 commands to triggered through\nmqtt. It allows you to publish an x10 command in the form of:\n\n<PRE>\nhouse,module,command\n</PRE>\n\nto the configured mqtt topic and the brige will send out the\nx10 command over a serial port to a connected X10 CM17A\ntransmitter module (http://www.x10.com/cm17a.html). \n\nI plan to use this along with other 433Mhz connected devices to \ncontrol light and appliances in my house.  In particular its\nhard to find 433Mhz light switches some this will allow use of\nx10 based ones I already have. Although I do have\n433Mhz appliance modules this will also allow me to continue\nto use the x10 ones that I have.  The controllers will connect\nthrough mqtt and turn on/off devices based on time, temperature,\nhumidity etc.\n\nThe bridge depends on the node-x10-comm module to send the commands\nto the serial port and the serialport module to interface with the\nserial port itself.\n\nThe command publish to mqtt has the following elements:\n\n* **house** is a capital letter from  A through O\n* **module** is an integer between 1 and 16\n* **command** is either 0 to turn on or 1 to turn off\n\nI use this with one of my Raspberry Pis (hooray for ARM Node.js !)\nover a [usb-to-serial cable]\n(http://www.ebay.ca/itm/301723477663?_trksid=p2060353.m2749.l2649&ssPageName=STRK%3AMEBIDX%3AIT)\nalthough it should work on a regular computer as well.\n\nThe bridge also provides a GUI that displays the commands as they are sent\nand also allows command to be sent directly from the display.  This is an\nexample of the display:\n\n![picture of bridge display](https://raw.githubusercontent.com/mhdawson/micro-app-mqtt-x10-bridge/master/pictures/mqttx10bridge.jpg)\n\n\n# Usage\n\nAfter installation modify ../lib/config.json to match your configuration\n\nThe configuration entries that must be updated include:\n\n* mqttServerUrl - url of the mqtt server to connect to.  This can either start\n  with tcp:// or mqtts://. If it starts with mqtts://  there must be a subdirectory\n  in the lib directory called mqttclient which contains ca.cert, client.cert,\n  client.key which contain the key and associated certificates for a client\n  which is authorized to connect to the mqtt server.\n* topic - mqtt topic on which to listent for commands\n* serialPort - the serial port that should be used to send out the commands\n* MaxRecentActivity - the number of commands that will be maintained in the history\n  and displayed in the GUI\n* serverPort - port on which to connect to get access to the GUI\n* title - title for the dashbaord paged (optional)\n\nWhen the micro-app is started it will list the avialable serial ports to \nthe console which can help in identifying the port to configure.\n\nAs a micro-app the bridge also supports other options like authentication and\ntls for the GUI connection.  See the documentation for the micro-app-framework\nfor additional details.\n\nThe following is an example configuration file:\n\n<PRE>\n{\n  \"serverPort\": 3000,\n  \"serialPort\": \"/dev/ttyUSB0\",\n  \"MaxRecentActivity\": 100,\n  \"topic\": \"house/x10\",\n  \"mqttServerUrl\": \"tcp://X.X.X.X:1883\"\n}\n</PRE>\n\n# Installation\n\nEither run npm install micro-app-mqtt-x10-bridge or clone this repository and then run npm install.  \nMake sure you have installed both gcc-4.8 and g++-4.8 and they are the default compilers\nas native compiles are required for the serialport module. \n\n# Running\n\nTo run the mqtt-x10-bridge app, add node.js to your path (currently requires 4.x or better) and\nthen run:\n\n<PRE>\nnpm start\n</PRE>\n\nfrom the directory in which the micro-app-mqtt-x10-bridge was installed.\n\nIf you want to view the GUI. Point your browser at the host/port for the server\n(or now use the micro-app-electron-launcher). \nIf you have configured your browser to allow javascript to close the current page\nthe original window will be closed and one with the correct size of the\nbridge GUI will be created.\n\nNote that you don't need to connect or view the GUI, the bridge can simply run\nin the background.\n\n\n# Example\n\nThe following is the GUI for the bridge:\n\n![picture of bridge display](https://raw.githubusercontent.com/mhdawson/micro-app-mqtt-x10-bridge/master/pictures/mqttx10bridge.jpg)\n\n# Key Depdencies\n\n## micro-app-framework\nAs a micro-app the onetime password app depends on the micro-app-framework:\n\n* [micro-app-framework npm](https://www.npmjs.com/package/micro-app-framework)\n* [micro-app-framework github](https://github.com/mhdawson/micro-app-framework)\n\nSee the documentation on the micro-app-framework for more information on general\nconfigurtion options that are availble (ex using tls, authentication, serverPort, etc)\n\n## other modules\n\n[serialport](https://www.npmjs.com/package/serialport)\n[node-x10-comm](https://www.npmjs.com/package/node-x10-comm)\n\n# TODO\nAdd validation to GUI entry boxes to only allow the valid range for each entry box\n"
}