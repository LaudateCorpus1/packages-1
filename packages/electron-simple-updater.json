{
  "name": "electron-simple-updater",
  "version": "1.1.3",
  "description": "Simple way to enable update for the electron application",
  "main": "index.js",
  "scripts": {
    "test": "npm run lint && npm run mocha",
    "mocha": "mocha ./spec/**/*.mock.js ./spec/**/*.spec.js",
    "lint": "eslint ./index.js ./lib/**/*.js ./example/app/*.js ./spec/**/*.js"
  },
  "repository": {
    "user": "megahertz",
    "repo": "electron-simple-updater",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/megahertz/electron-simple-updater/tarball/master",
    "clone_url": "https://github.com/megahertz/electron-simple-updater",
    "https_url": "https://github.com/megahertz/electron-simple-updater",
    "travis_url": "https://travis-ci.org/megahertz/electron-simple-updater",
    "zip_url": "https://github.com/megahertz/electron-simple-updater/archive/master.zip",
    "api_url": "https://api.github.com/repos/megahertz/electron-simple-updater"
  },
  "files": [
    "index.js",
    "README.md",
    "lib/*"
  ],
  "keywords": [
    "electron",
    "atom",
    "updater",
    "update",
    "publish",
    "release",
    "windows",
    "mac",
    "osx",
    "linux",
    "desktop"
  ],
  "author": {
    "name": "Alexey Prokhorov"
  },
  "license": "MIT",
  "homepage": "https://github.com/megahertz/electron-simple-updater#readme",
  "engines": {
    "node": ">=6.0"
  },
  "devDependencies": {
    "chai": "*",
    "electron": "^1.4.3",
    "eslint": "^3.8.0",
    "eslint-config-standard": "^6.2.0",
    "eslint-plugin-promise": "^3.0.0",
    "eslint-plugin-standard": "^2.0.1",
    "mocha": "*",
    "mock-require": "^1.3.0",
    "rewire": "*",
    "sinon": "^1.17.6",
    "sinon-chai": "^2.8.0"
  },
  "dependencies": {
    "httpreq": "^0.4.22",
    "semver": "*"
  },
  "gitHead": "cb40d48721983584649bd75eacc69a7a2a850215",
  "_npmVersion": "3.10.8",
  "_nodeVersion": "6.8.1",
  "dist": {
    "shasum": "d53f833a1ab85b0c9ff20b91ce45d84ea71f0276",
    "tarball": "http://registry.npmjs.org/electron-simple-updater/-/electron-simple-updater-1.1.3.tgz"
  },
  "versions": [
    {
      "number": "0.0.1",
      "date": "2016-10-13T11:49:00.139Z"
    },
    {
      "number": "0.0.2",
      "date": "2016-10-13T13:08:23.439Z"
    },
    {
      "number": "0.0.3",
      "date": "2016-10-14T07:29:53.242Z"
    },
    {
      "number": "0.0.4",
      "date": "2016-10-14T07:48:28.556Z"
    },
    {
      "number": "0.0.5",
      "date": "2016-10-14T09:47:54.244Z"
    },
    {
      "number": "0.0.6",
      "date": "2016-10-14T12:30:30.278Z"
    },
    {
      "number": "0.0.7",
      "date": "2016-10-14T12:38:16.714Z"
    },
    {
      "number": "0.0.8",
      "date": "2016-10-14T13:51:03.921Z"
    },
    {
      "number": "0.0.9",
      "date": "2016-10-14T13:53:37.724Z"
    },
    {
      "number": "0.0.10",
      "date": "2016-10-14T14:05:00.824Z"
    },
    {
      "number": "0.0.11",
      "date": "2016-10-14T14:07:00.612Z"
    },
    {
      "number": "0.0.12",
      "date": "2016-10-14T14:25:56.519Z"
    },
    {
      "number": "0.0.13",
      "date": "2016-10-14T14:29:46.532Z"
    },
    {
      "number": "0.0.14",
      "date": "2016-10-14T14:31:53.252Z"
    },
    {
      "number": "0.0.15",
      "date": "2016-10-14T14:35:35.327Z"
    },
    {
      "number": "0.0.16",
      "date": "2016-10-14T14:50:13.876Z"
    },
    {
      "number": "0.0.17",
      "date": "2016-10-14T14:52:58.963Z"
    },
    {
      "number": "0.0.18",
      "date": "2016-10-14T14:55:50.132Z"
    },
    {
      "number": "0.0.19",
      "date": "2016-10-14T15:09:21.581Z"
    },
    {
      "number": "0.0.20",
      "date": "2016-10-15T08:24:49.341Z"
    },
    {
      "number": "0.0.21",
      "date": "2016-10-15T08:30:36.907Z"
    },
    {
      "number": "0.0.22",
      "date": "2016-10-15T08:35:52.756Z"
    },
    {
      "number": "1.0.0",
      "date": "2016-10-15T09:53:34.526Z"
    },
    {
      "number": "1.0.1",
      "date": "2016-10-15T10:08:28.244Z"
    },
    {
      "number": "1.0.2",
      "date": "2016-10-15T13:10:58.309Z"
    },
    {
      "number": "1.0.3",
      "date": "2016-10-20T12:46:32.358Z"
    },
    {
      "number": "1.1.0",
      "date": "2016-10-20T13:25:05.961Z"
    },
    {
      "number": "1.1.1",
      "date": "2016-10-20T13:28:02.068Z"
    },
    {
      "number": "1.1.2",
      "date": "2016-10-20T13:31:03.741Z"
    },
    {
      "number": "1.1.3",
      "date": "2016-10-20T15:36:48.398Z"
    }
  ],
  "created": "2016-10-13T11:49:00.139Z",
  "modified": "2016-10-20T15:36:48.398Z",
  "lastPublisher": {
    "name": "megahertz",
    "email": "alexey.p@l96.ru"
  },
  "owners": [
    {
      "name": "megahertz",
      "email": "alexey.p@l96.ru"
    }
  ],
  "readme": "# electron-simple-updater\n[![Build Status](https://travis-ci.org/megahertz/electron-simple-updater.svg?branch=master)](https://travis-ci.org/megahertz/electron-simple-updater)\n[![npm version](https://badge.fury.io/js/electron-simple-updater.svg)](https://badge.fury.io/js/electron-simple-updater)\n\n## Description\n\nThis module allows to automatically update your application. Your only\nneed to install this module and write two lines of code! To publish\nyour updates you just need a simple file hosting, it does not require\na dedicated server.\n\nSupport OS: \n - Mac, ([Squirrel.Mac](https://github.com/Squirrel/Squirrel.Mac))\n - Windows ([Squirrel.Windows](https://github.com/Squirrel/Squirrel.Windows))\n - Linux (for [AppImage](http://appimage.org/) format)\n\n## Installation\n\nInstall with [npm](https://npmjs.org/package/electron-simple-updater):\n\n    npm install --save electron-simple-updater\n\n## Usage\n\n### Publish a new release\n1. Build your release using electron-builder or another tool and upload it\nto a file hosting.\n2. Create a file updates.js which contains link to your new release and\nupload it to a file hosting:\n```json\n{\n  \"linux-x64-prod\": {\n    \"update\": \"https://github.com/megahertz/electron-simple-updater/releases/download/example-linux-x64-prod-v0.0.2/simple-updater-example-0.0.2-x86_64.AppImage\",\n    \"version\": \"0.0.2\",\n    \"platform\": \"linux\",\n    \"readme\": \"Second version\"\n  },\n  \"win32-x64-prod\": {\n    \"update\": \"https://github.com/megahertz/electron-simple-updater/releases/download/example-win32-x64-prod-v0.0.2\",\n    \"version\": \"0.0.2\",\n    \"platform\": \"win32\",\n    \"readme\": \"Second version\"\n  },\n  \"darwin-x64-prod\": {\n    \"update\": \"https://github.com/megahertz/electron-simple-updater/releases/download/example-darwin-x64-prod-v0.0.2/release.json\",\n    \"version\": \"0.0.2\",\n    \"platform\": \"darwin\",\n    \"readme\": \"Second version\"\n  }\n}\n```\n\n### Insert a link to updates.json to your code\n```js\n// Just place this code at the entry point of your application:\nconst updater = require('electron-simple-updater');\nupdater.init('https://raw.githubusercontent.com/megahertz/electron-simple-updater/master/example/updates.json');\n```\nYou can set this link in package.json:updater.url instead.\n\n### That's it!\nNow your application will check for updates on start and download it \nautomatically if an update is available. After app is restarted a new\nversion will be loaded. But you can customize it to ask a user if he\nwould like to install updates. See [the example](example) for details.\n    \n## API\n\n### Options\nYou can set options when calling init() method or in package.json:updater\nsection.\n\nName                | Default                 | Description\n--------------------|-------------------------|------------\nautoDownload        | true                    | Automatically download an update when it is found in updates.json\nbuild               | {platform}-{arch}       | Build type, like 'linux-x64' or 'win32-ia32'\nchannel             | 'prod'                  | An application which is built for channel like 'beta' will receive updates only from this channel\ncheckUpdateOnStart  | true                    | Check for updates immediately when init() is called\ndisabled            | false                   | Disable update feature. This option is set to true automatically for applications built for Mac App Store or Windows Store\nlogger              | console                 | You can pass [electron-log](https://github.com/megahertz/electron-log), [winston](https://github.com/winstonjs/winston) or another logger with the following interface: { info(), warn() }. Set it to false if you would like to disable a logging feature \nversion             | app.getVersion()        | Current app version. In most cases, you should not pass this options manually, it is read by electron from version at package.json\nurl*                | undefined               | The only required parameter. This is a URL to [updates.json](https://github.com/megahertz/electron-simple-updater/blob/master/example/updates.json) file\n    \n### Method\n    \n#### init(options)\nInitialize a package. By default it finish the process if is run by\nSquirrel.Windows installer.\n\n#### setFeedURL(url) *deprecated*\nSets the url and initialize the electron-simple-updater. Instead of\nbuilt-in auto-updater init(), this method receives a URL to updates.json.   \n    \n#### getFeedURL() *deprecated*\nReturn the current updates.json URL.\n\n#### checkForUpdates() \nAsks the server whether there is an update. url must be set before this\ncall. Instead of built-in auto-updater, this method does not start\ndownloading if autoDownload options is set to false.\n    \n#### downloadUpdate()\nStart downloading update manually. You can use this method if\nautoDownload option is set to false\n    \n#### quitAndInstall()\nRestarts the app and installs the update after it has been downloaded.\nIt should only be called after update-downloaded has been emitted.\n\n#### setOptions(name, value)\nSet one or a few options. Pass an object as the name for multiple set.\n   \n### Properties (read only)\nThese properties are mapped to options \n\n * **build** \n * **channel**\n * **version**\n * **buildId** - this string contains a build, a channel and version\n    \n### Events\n**meta** object of some events is a data from updates.json\n   \n#### error(err)\nEmitted when there is an error while updating.\n\n#### checking-for-update \nEmitted when start downloading update.json file.\n\n#### update-available(meta)\nEmitted when there is an available update.\n\n#### update-not-available\nEmitted when there is no available update.\n\n#### update-downloading(meta)\nEmitted when star downloading an update.\n\n#### update-downloaded(meta)\nEmitted when an update has been downloaded.\n\n#### squirrel-win-installer(event)\nEmitted when the app is run by Squirrel.Windows when installing. The\nSimpleUpdater creates/removes shortcuts and finishes the process by\ndefault.\n\n * **event.preventDefault** - set to true if you would like to\n customize this action\n * **event.squirrelAction** - squirrel-install, squirrel-updated,\n squirrel-uninstall, squirrel-obsolete\n    \n## Related\n - [electron-builder](https://github.com/electron-userland/electron-builder) -\n A complete solution to package and build an Electron app\n    \n    \n## License\n\nLicensed under MIT."
}