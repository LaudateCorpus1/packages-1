{
  "name": "nightmare-window-manager",
  "version": "0.2.2",
  "description": "add window management to your Nightmare scripts",
  "license": "MIT",
  "main": "./nightmare-window-manager.js",
  "scripts": {
    "test": "mocha test"
  },
  "repository": {
    "user": "rosshinkley",
    "repo": "nightmare-window-manager",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/rosshinkley/nightmare-window-manager/tarball/master",
    "clone_url": "https://github.com/rosshinkley/nightmare-window-manager",
    "https_url": "https://github.com/rosshinkley/nightmare-window-manager",
    "travis_url": "https://travis-ci.org/rosshinkley/nightmare-window-manager",
    "zip_url": "https://github.com/rosshinkley/nightmare-window-manager/archive/master.zip",
    "api_url": "https://api.github.com/repos/rosshinkley/nightmare-window-manager"
  },
  "author": {
    "name": "Ross Hinkley"
  },
  "keywords": [
    "nightmare",
    "phantomjs",
    "prerequest",
    "pre-request",
    "filter",
    "content"
  ],
  "peerDependencies": {
    "nightmare": ">= 2.3.0"
  },
  "dependencies": {
    "debug": "^2.2.0",
    "sliced": "^1.0.1"
  },
  "devDependencies": {
    "chai": "^3.4.1",
    "electron-rebuild": "^1.1.3",
    "express": "^4.13.3",
    "mkdirp": "^0.5.1",
    "mocha": "^2.3.0",
    "mocha-generators": "^1.2.0",
    "rimraf": "^2.4.3",
    "serve-static": "^1.10.0"
  },
  "gitHead": "28a0d7eb0fca1a72fa85ecb14d1a60b5701f2c8d",
  "homepage": "https://github.com/rosshinkley/nightmare-window-manager#readme",
  "_npmVersion": "3.3.6",
  "_nodeVersion": "4.4.0",
  "dist": {
    "shasum": "8ee9052f8a2351a8bddb6db492785d4e23db0ee8",
    "tarball": "http://registry.npmjs.org/nightmare-window-manager/-/nightmare-window-manager-0.2.2.tgz"
  },
  "versions": [
    {
      "number": "0.2.0",
      "date": "2016-05-22T16:51:15.144Z"
    },
    {
      "number": "0.2.1",
      "date": "2016-05-23T16:05:34.928Z"
    },
    {
      "number": "0.2.2",
      "date": "2016-05-23T16:10:19.053Z"
    }
  ],
  "created": "2016-05-22T16:51:15.144Z",
  "modified": "2016-05-23T16:10:19.053Z",
  "lastPublisher": {
    "name": "rosshinkley",
    "email": "rosshinkley@gmail.com"
  },
  "owners": [
    {
      "name": "rosshinkley",
      "email": "rosshinkley@gmail.com"
    }
  ],
  "readme": "nightmare-window-manager\n======================\nAdd window management to your [Nightmare](http://github.com/segmentio/nightmare) scripts.\n\n## Usage\nSimply require the library:\n\n```js\nvar Nightmare = require('nightmare')\nrequire('nightmare-window-manager')(Nightmare)\n```\n... and then enable the window manager with `.windowManager()`.  It should be the first call in your Nightmare chain.\n\n### .windowManager()\nSets up window management.\n\n### .windows()\nGets a listing of the windows currently open under the Nightmare instance.\n\n### .waitWindowLoad()\nWaits for all of the windows to no longer be in a loading state.\n\n### .currentWindow()\nGets the current window.\n\n### .closeWindow(windowId)\nCloses the window specified by the window ID.  If the current window is the one being closed, the first non-closed window is set as focused.  __WARNING__: do not close the ID 1 as that will dispose the Nightmare plumbing.\n\n### focusWindow(windowId)\nSets the given window ID as focused.\n\n### evaluateWindow(fn[, arg1, arg2, ...])\nInvokes `fn` on the currently selected window with the arguments supplied.  All of the arguments are optional.  On completion, it returns the return value of `fn`, same as Nightmare's `.evaluate()`.\n\n## Example\n```js\nvar Nightmare = require('nightmare');\nrequire('nightmare-window-manager')(Nightmare);\nvar nightmare = Nightmare();\nnightmare\n    .windowManager()\n    .goto(url)\n    .click('#something_opens_a_window')\n    .waitWindowLoad()\n    .currentWindow()\n    .then(function(window){\n          //window contains useful information about the newly-opened window,\n          //including the window ID\n          console.dir(window)\n    });\n```\n"
}