{
  "name": "brightwheel",
  "version": "0.1.4",
  "description": "Build beautiful Electron user interfaces with Photon and Etch",
  "repository": {
    "user": "loranallensmith",
    "repo": "brightwheel",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/loranallensmith/brightwheel/tarball/master",
    "clone_url": "https://github.com/loranallensmith/brightwheel",
    "https_url": "https://github.com/loranallensmith/brightwheel",
    "travis_url": "https://travis-ci.org/loranallensmith/brightwheel",
    "zip_url": "https://github.com/loranallensmith/brightwheel/archive/master.zip",
    "api_url": "https://api.github.com/repos/loranallensmith/brightwheel"
  },
  "author": {
    "name": "Allen Smith &lt;loranallensmith@github.com&gt;"
  },
  "license": "MIT",
  "keywords": [
    "electron",
    "etch",
    "user interface",
    "UI",
    "react"
  ],
  "main": "index.js",
  "jsnext:main": "index.es6.js",
  "dependencies": {
    "babel-runtime": "^6.6.1",
    "classnames": "^2.2.5",
    "etch": "^0.7.1"
  },
  "homepage": "https://github.com/loranallensmith/brightwheel#readme",
  "scripts": {},
  "_npmVersion": "3.5.3",
  "_nodeVersion": "5.5.0",
  "dist": {
    "shasum": "8de3e7c93649f0924b78a88c210c517b0eca5192",
    "tarball": "http://registry.npmjs.org/brightwheel/-/brightwheel-0.1.4.tgz"
  },
  "versions": [
    {
      "number": "0.1.0",
      "date": "2016-09-23T02:15:34.162Z"
    },
    {
      "number": "0.1.1",
      "date": "2016-09-23T04:37:59.965Z"
    },
    {
      "number": "0.1.2",
      "date": "2016-09-23T04:41:37.847Z"
    },
    {
      "number": "0.1.3",
      "date": "2016-09-23T05:01:39.278Z"
    },
    {
      "number": "0.1.4",
      "date": "2016-09-29T05:18:22.239Z"
    }
  ],
  "created": "2016-09-23T02:15:34.162Z",
  "modified": "2016-09-29T05:18:22.239Z",
  "lastPublisher": {
    "name": "loranallensmith",
    "email": "loranallensmith@github.com"
  },
  "owners": [
    {
      "name": "loranallensmith",
      "email": "loranallensmith@github.com"
    }
  ],
  "readme": "# [brightwheel](https://github.com/loranallensmith/brightwheel)\n\n[![NPM version](http://img.shields.io/npm/v/brightwheel.svg?style=flat-square)](https://www.npmjs.com/package/brightwheel)\n[![NPM downloads](http://img.shields.io/npm/dm/brightwheel.svg?style=flat-square)](https://www.npmjs.com/package/brightwheel)\n[![Build Status](http://img.shields.io/travis/loranallensmith/brightwheel/master.svg?style=flat-square)](https://travis-ci.org/loranallensmith/brightwheel)\n[![Coverage Status](https://img.shields.io/coveralls/loranallensmith/brightwheel.svg?style=flat-square)](https://coveralls.io/loranallensmith/brightwheel)\n[![Dependency Status](http://img.shields.io/david/loranallensmith/brightwheel.svg?style=flat-square)](https://david-dm.org/loranallensmith/brightwheel)\n\n> Build beautiful Electron user interfaces with Photon and Etch\n\n### About\n\nBrightwheel is a JavaScript library that lets you use [Etch](https://github.com/atom/etch) and [Photon](http://photonkit.com/) to construct and manage the state of user interfaces for [Electron](https://electron.atom.io) applications.\n\n![Electron app using Brightwheel](https://cloud.githubusercontent.com/assets/3477155/18810114/c9912f0a-825b-11e6-822f-39e4d238571e.png)\n\n\n\n### Getting Started\n\n#### Installation\n\nAdd Brightwheel to your project's dependencies.\n```sh\n$ npm install --save brightwheel\n```\n\n#### Usage\n\nInclude Photon styles in your HTML file's `<head>`.\n```html\n<script src=\"path/to/photon.css\" charset=\"utf-8\"></script>\n```\n\nImport Brightwheel components into your project.\n```javascript\n// Import and namespace all components\nimport * as UI from 'brightwheel'\n\n// Import individual components\nimport { Button } from 'brightwheel'\n\n```\n\nGenerate components and add them to your document.\n```javascript\nlet mySubmitButton = new Button({\n  type: 'positive',\n  size: 'mini',\n  text: 'Submit'\n  // specify other properties as needed\n}, []);\n\nlet myCancelButton = new Button({\n  type: 'default',\n  size: 'mini',\n  text: 'Cancel'\n  // specify other properties as needed\n}, []);\n\n\n// Nest components within parent components\nlet myActions = new FormActions({\n  // specify properties as needed\n}, [\n  mySubmitButton,\n  myCancelButton\n]);\n\n// Nest the elements within the DOM\ndocument.querySelector('#form-1').appendChild(myActions.element);\n\n```\n\n## Contributing\n\nPull Request are welcome!\n\nFor an outline of the overall development priorities, have a look at the current [`ROADMAP.md`](https://github.com/loranallensmith/brightwheel/blob/master/ROADMAP.md) file.\n\nPlease follow the steps below to contribute to this project:\n- Look for an open issue (or open one if it doesn't already exist)\n- Fork this repository\n- Be sure to write tests for the changes you're proposing\n- Open a Pull Request and mention @loranallensmith\n- To help with discoverability down the road, it helps to reference the original Issue your changes address in the body of your Pull Request\n\n\n### How to Test\n\nRun one, or a combination of the following commands to lint and test your code:\n\n```sh\n$ npm run lint          # Lint the source code with ESLint\n$ npm test              # Run unit tests with Mocha\n$ npm run test:watch    # Run unit tests with Mocha, and watch files for changes\n$ npm run test:cover    # Run unit tests with code coverage by Istanbul\n```\n\n\n### License\n\nMIT Â© 2016 Allen Smith &lt;loranallensmith@github.com&gt;\n"
}