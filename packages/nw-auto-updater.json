{
  "name": "nw-auto-updater",
  "version": "1.0.5",
  "description": "A high level API to make node-webkit apps auto updating easy",
  "main": "updater.js",
  "repository": {
    "user": "constrom",
    "repo": "nw-auto-updater",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/constrom/nw-auto-updater/tarball/master",
    "clone_url": "https://github.com/constrom/nw-auto-updater",
    "https_url": "https://github.com/constrom/nw-auto-updater",
    "travis_url": "https://travis-ci.org/constrom/nw-auto-updater",
    "zip_url": "https://github.com/constrom/nw-auto-updater/archive/master.zip",
    "api_url": "https://api.github.com/repos/constrom/nw-auto-updater"
  },
  "keywords": [
    "node-webkit",
    "update",
    "auto",
    "api"
  ],
  "author": {
    "name": "Thibault Walle",
    "email": "thibault.walle@outlook.fr"
  },
  "license": "MIT",
  "homepage": "https://github.com/constrom/nw-auto-updater#readme",
  "dependencies": {
    "request": "^2.65.0",
    "request-progress": "^0.3.1",
    "unzip": "^0.1.11"
  },
  "devDependencies": {
    "nodemon": "^1.7.1"
  },
  "gitHead": "eefbfb439d142aea6af5361f4f8e785ca5d102db",
  "scripts": {},
  "_npmVersion": "2.14.3",
  "_nodeVersion": "4.1.0",
  "dist": {
    "shasum": "32e3d0e4b2413cdae65c066c6d474765aa117613",
    "tarball": "http://registry.npmjs.org/nw-auto-updater/-/nw-auto-updater-1.0.5.tgz"
  },
  "versions": [
    {
      "number": "1.0.0",
      "date": "2015-10-18T14:20:27.810Z"
    },
    {
      "number": "1.0.1",
      "date": "2015-10-18T14:27:19.899Z"
    },
    {
      "number": "1.0.2",
      "date": "2015-10-18T14:31:30.209Z"
    },
    {
      "number": "1.0.3",
      "date": "2015-10-18T14:45:13.157Z"
    },
    {
      "number": "1.0.4",
      "date": "2015-10-18T14:58:15.515Z"
    },
    {
      "number": "1.0.5",
      "date": "2015-10-18T17:07:18.123Z"
    }
  ],
  "created": "2015-10-18T14:20:27.810Z",
  "modified": "2015-10-18T17:07:18.123Z",
  "lastPublisher": {
    "name": "earhater",
    "email": "thibault.walle@outlook.fr"
  },
  "owners": [
    {
      "name": "earhater",
      "email": "thibault.walle@outlook.fr"
    }
  ],
  "readme": "nw-auto-updater (NWAU)\r\n======================\r\n\r\nThis is [nw](https://github.com/rogerwang/node-webkit)-auto-updater, inspired by [electron-autoUpdater API](http://electron.atom.io/docs/v0.33.0/api/auto-updater/)\r\n\r\n```\r\nnpm install nw-auto-updater\r\n```\r\n\r\nit gives high level API to :\r\n\r\n1. Check if an update is available or not\r\n2. Download an update\r\n3. Install an update\r\n4. Restart your node-webkit app\r\n\r\n## API\r\n\r\n### configure\r\n\r\nConfigure NWAU. \r\n\r\n**Params**\r\n\r\n* **options** `Object`\r\n\t* **encoding** `String` the remote manifest file encoding. Default to 'utf-8'\r\n\t* **nw-gui** `nw-gui` the nw-gui instance, like `var gui = require('nw.gui')`\r\n\t* **remoteManifest** `String` the remote manifest file url, like `http://www.exemple.com?version={{version}}`. NWAU will replace `{{version}}` with the package.json version\r\n\t* **tmpManifest** `String` the path where manifest will be stored, like `path.resolve('./tmp/update_manifest.json')`. `tmp` directory must exists\r\n\t* **tmpArchive** `String` the path where zip archive will be stored, like `path.resolve('./tmp/update_archive.zip')`. `tmp` directory must exists\r\n\t* **update-not-available** `Function` callback called if updates are not available (server unreachable or client up to date)\r\n\t* **update-available** `Function` callback called if updates are available (server return a status 200 code)\r\n\t* **update-downloaded** `Function` callback called when zip archive is downloaded \r\n\t* **update-downloading** `Function` callback called when download is progressing\r\n\t* **error** `Function` callback called if ay errors are encountered\r\n\r\n### launch\r\n\r\nLaunch auto update. Must be called after `updater.configure()`\r\n\r\n### Update JSON Format\r\n\r\nWhen an update is available, NWAU expects the following schema in response to the update request provided:\r\n\r\n```json\r\n{\r\n  \"url\": \"http://mycompany.com/myapp/releases/myrelease\",\r\n  \"name\": \"My Release Name\",\r\n  \"notes\": \"Theses are some release notes innit\",\r\n  \"pub_date\": \"2013-09-18T12:29:53+01:00\"\r\n}\r\n```\r\n\r\nThe only required key is \"url\" the others are optional. NWAU only supports installing ZIP updates for now, and your server must return an `'application/json'` response. Your zip archive must replace the package.json with a correct app version, or updates will be downloaded in an infinite loop.\r\n\r\n### Exemple \r\n\r\n```javascript\r\nvar updater = require('nw-auto-updater');\r\nvar path = require('path');\r\n\r\nupdater.configure({\r\n\t'remoteManifest' : 'http://yourserver.com/?version={{version}}',\r\n\t'tmpManifest'    : path.resolve('tmp/update_manifest.json'),\r\n\t'tmpArchive'     : path.resolve('tmp/update_archive.zip'),\r\n\t'extractPath'    : path.resolve('.'),\r\n\t'nwGui'          : require('nw.gui'),\r\n\r\n\t'update-available' : function() {\r\n\t\tconsole.log('available');\r\n\t},\r\n\t'update-not-available' : function() {\r\n\t\tconsole.log('not available');\r\n\t},\r\n\t'update-downloading' : function(state) {\r\n\t\tconsole.log('downloading, ' + state.percent + \" %\");\r\n\t},\r\n\t'update-downloaded' : function() {\r\n\t\tconsole.log('zip downloaded');\r\n\t},\r\n\t'update-installed' : function() {\r\n\t\tconsole.log('archive installed');\r\n\t},\r\n\t'error' : function(e) {\r\n\t\tconsole.error(e);\r\n\t}\r\n});\r\n\r\nupdater.launch();\r\n```"
}