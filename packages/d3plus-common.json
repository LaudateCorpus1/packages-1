{
  "name": "d3plus-common",
  "version": "0.5.21",
  "description": "Common functions and methods used across D3plus modules.",
  "main": "build/d3plus-common.js",
  "jsnext:main": "index",
  "license": "MIT",
  "homepage": "https://d3plus.org",
  "repository": {
    "user": "d3plus",
    "repo": "d3plus-common",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/d3plus/d3plus-common/tarball/master",
    "clone_url": "https://github.com/d3plus/d3plus-common",
    "https_url": "https://github.com/d3plus/d3plus-common",
    "travis_url": "https://travis-ci.org/d3plus/d3plus-common",
    "zip_url": "https://github.com/d3plus/d3plus-common/archive/master.zip",
    "api_url": "https://api.github.com/repos/d3plus/d3plus-common"
  },
  "keywords": [
    "d3",
    "d3plus",
    "data",
    "visualization"
  ],
  "author": {
    "name": "Dave Landry",
    "email": "landry.dave@gmail.com",
    "url": "http://www.dave-landry.com"
  },
  "bin": {
    "d3plus-build": "bin/build.js",
    "d3plus-dev": "bin/dev.js",
    "d3plus-docs": "bin/docs.js",
    "d3plus-env": "bin/env.js",
    "d3plus-examples": "bin/examples.js",
    "d3plus-locale": "bin/locale.js",
    "d3plus-release": "bin/release.js",
    "d3plus-test": "bin/test.js"
  },
  "scripts": {
    "build": "d3plus-build",
    "dev": "d3plus-dev",
    "docs": "d3plus-docs",
    "env": "d3plus-env",
    "examples": "d3plus-examples",
    "locale": "d3plus-locale",
    "release": "d3plus-release",
    "test": "d3plus-test"
  },
  "dependencies": {
    "babel-preset-es2015": "^6.6.0",
    "babelify": "^7.2.0",
    "browserify": "^13.0.0",
    "d3-array": "^1.0.0",
    "d3-collection": "^1.0.0",
    "d3-selection": "^1.0.0",
    "d3-transition": "^1.0.1",
    "electron-screenshot-service": "^4.0.1",
    "eslint": "^3.0.0",
    "faucet": "0.0.1",
    "github-issues-label-sync": "^2.1.0",
    "grizzly": "^2.0.0",
    "i18next": "^3.4.3",
    "i18next-parser": "^0.10.1",
    "jimp": "^0.2.24",
    "jsdoc-to-markdown": "^1.3.4",
    "live-server": "^1.0.0",
    "putasset": "^1.0.1",
    "rollup": "^0.34.0",
    "rollup-plugin-buble": "^0.13.0",
    "rollup-plugin-json": "^2.0.2",
    "rollup-plugin-node-resolve": "^2.0.0",
    "rollup-watch": "^2.4.0",
    "shelljs": "^0.7.0",
    "tape": "^4.5.1",
    "tape-run": "^2.1.3",
    "uglify-js": "^2.6.2"
  },
  "devDependencies": {
    "d3-selection": "^1.0.0"
  },
  "gitHead": "54719aee90bda8d51412f9771b60894c9790e27b",
  "_npmVersion": "3.10.7",
  "_nodeVersion": "6.7.0",
  "dist": {
    "shasum": "d081b457d34e6d143437e7c5859125cef9c57628",
    "tarball": "http://registry.npmjs.org/d3plus-common/-/d3plus-common-0.5.21.tgz"
  },
  "versions": [
    {
      "number": "0.1.0",
      "date": "2016-05-04T17:31:38.653Z"
    },
    {
      "number": "0.2.0",
      "date": "2016-05-10T19:48:21.975Z"
    },
    {
      "number": "0.3.0",
      "date": "2016-06-20T02:06:19.574Z"
    },
    {
      "number": "0.3.1",
      "date": "2016-06-20T02:53:25.984Z"
    },
    {
      "number": "0.3.2",
      "date": "2016-06-20T14:02:43.066Z"
    },
    {
      "number": "0.3.3",
      "date": "2016-06-20T14:16:48.392Z"
    },
    {
      "number": "0.3.4",
      "date": "2016-06-23T18:20:38.141Z"
    },
    {
      "number": "0.3.5",
      "date": "2016-06-23T18:26:13.345Z"
    },
    {
      "number": "0.3.6",
      "date": "2016-06-24T20:58:11.638Z"
    },
    {
      "number": "0.3.7",
      "date": "2016-06-24T21:04:00.225Z"
    },
    {
      "number": "0.4.0",
      "date": "2016-07-01T15:42:57.384Z"
    },
    {
      "number": "0.4.1",
      "date": "2016-07-01T16:03:08.949Z"
    },
    {
      "number": "0.4.2",
      "date": "2016-07-01T16:09:28.723Z"
    },
    {
      "number": "0.5.0",
      "date": "2016-07-19T17:12:06.415Z"
    },
    {
      "number": "0.5.1",
      "date": "2016-07-19T17:18:04.093Z"
    },
    {
      "number": "0.5.2",
      "date": "2016-07-20T16:31:19.692Z"
    },
    {
      "number": "0.5.3",
      "date": "2016-07-22T16:21:00.543Z"
    },
    {
      "number": "0.5.4",
      "date": "2016-07-31T16:40:07.366Z"
    },
    {
      "number": "0.5.5",
      "date": "2016-08-04T21:32:39.578Z"
    },
    {
      "number": "0.5.6",
      "date": "2016-08-17T22:46:07.609Z"
    },
    {
      "number": "0.5.7",
      "date": "2016-08-17T23:06:25.304Z"
    },
    {
      "number": "0.5.8",
      "date": "2016-09-09T17:15:31.415Z"
    },
    {
      "number": "0.5.9",
      "date": "2016-09-09T17:43:04.916Z"
    },
    {
      "number": "0.5.10",
      "date": "2016-09-09T22:25:39.918Z"
    },
    {
      "number": "0.5.11",
      "date": "2016-09-19T22:08:09.295Z"
    },
    {
      "number": "0.5.12",
      "date": "2016-09-21T22:33:22.026Z"
    },
    {
      "number": "0.5.13",
      "date": "2016-09-29T21:53:41.709Z"
    },
    {
      "number": "0.5.14",
      "date": "2016-09-29T22:21:13.964Z"
    },
    {
      "number": "0.5.15",
      "date": "2016-09-30T13:45:13.493Z"
    },
    {
      "number": "0.5.16",
      "date": "2016-09-30T14:47:47.436Z"
    },
    {
      "number": "0.5.17",
      "date": "2016-09-30T14:55:32.004Z"
    },
    {
      "number": "0.5.18",
      "date": "2016-09-30T15:48:15.680Z"
    },
    {
      "number": "0.5.19",
      "date": "2016-10-03T17:33:44.475Z"
    },
    {
      "number": "0.5.20",
      "date": "2016-10-03T18:10:46.092Z"
    },
    {
      "number": "0.5.21",
      "date": "2016-10-03T22:00:07.762Z"
    }
  ],
  "created": "2016-05-04T17:31:38.653Z",
  "modified": "2016-10-03T22:00:07.762Z",
  "lastPublisher": {
    "name": "davelandry",
    "email": "landry.dave@gmail.com"
  },
  "owners": [
    {
      "name": "davelandry",
      "email": "landry.dave@gmail.com"
    }
  ],
  "readme": "# d3plus-common\n\n[![NPM Release](http://img.shields.io/npm/v/d3plus-common.svg?style=flat)](https://www.npmjs.org/package/d3plus-common)\n[![Build Status](https://travis-ci.org/d3plus/d3plus-common.svg?branch=master)](https://travis-ci.org/d3plus/d3plus-common)\n[![Dependency Status](http://img.shields.io/david/d3plus/d3plus-common.svg?style=flat)](https://david-dm.org/d3plus/d3plus-common)\n[![Slack](https://img.shields.io/badge/Slack-Click%20to%20Join!-green.svg?style=social)](https://goo.gl/forms/ynrKdvusekAwRMPf2)\n\nCommon functions and methods used across D3plus modules.\n\n## Installing\n\nIf you use NPM, `npm install d3plus-common`. Otherwise, download the [latest release](https://github.com/d3plus/d3plus-common/releases/latest). The released bundle supports AMD, CommonJS, and vanilla environments. Create a [custom bundle using Rollup](https://github.com/rollup/rollup) or your preferred bundler. You can also load directly from [d3plus.org](https://d3plus.org):\n\n```html\n<script src=\"https://d3plus.org/js/d3plus-common.v0.5.full.min.js\"></script>\n```\n\n\n## API Reference\n### Classes\n\n<dl>\n<dt><a href=\"#BaseClass\">BaseClass</a></dt>\n<dd></dd>\n</dl>\n\n### Functions\n\n<dl>\n<dt><a href=\"#accessor\">accessor(key, [def])</a></dt>\n<dd><p>Wraps an object key in a simple accessor function.</p>\n</dd>\n<dt><a href=\"#attrize\">attrize(elem, attrs)</a></dt>\n<dd><p>Applies each key/value in an object as an attr.</p>\n</dd>\n<dt><a href=\"#closest\">closest(n, arr)</a></dt>\n<dd><p>Finds the closest numeric value in an array.</p>\n</dd>\n<dt><a href=\"#constant\">constant(value)</a></dt>\n<dd><p>Wraps non-function variables in a simple return function.</p>\n</dd>\n<dt><a href=\"#elem\">elem(selector, params)</a></dt>\n<dd><p>Manages the enter/update/exit pattern for a single DOM element.</p>\n</dd>\n<dt><a href=\"#merge\">merge(objects, aggs)</a></dt>\n<dd><p>Combines an Array of Objects together and returns a new Object.</p>\n</dd>\n<dt><a href=\"#prefix\">prefix()</a></dt>\n<dd><p>Returns the appropriate CSS vendor prefix, given the current browser.</p>\n</dd>\n<dt><a href=\"#stylize\">stylize(elem, styles)</a></dt>\n<dd><p>Applies each key/value in an object as a style.</p>\n</dd>\n</dl>\n\n<a name=\"BaseClass\"></a>\n\n### BaseClass\n**Kind**: global class  \n\n* [BaseClass](#BaseClass)\n    * [new BaseClass()](#new_BaseClass_new)\n    * [.config([*value*])](#BaseClass.config)\n\n<a name=\"new_BaseClass_new\"></a>\n\n#### new BaseClass()\nAn abstract class that contains some global methods and functionality.\n\n<a name=\"BaseClass.config\"></a>\n\n#### BaseClass.config([*value*])\nIf *value* is specified, sets the methods that correspond to the key/value pairs and returns this class. If *value* is not specified, returns the current configuration.\n\n**Kind**: static method of <code>[BaseClass](#BaseClass)</code>  \n\n| Param | Type |\n| --- | --- |\n| [*value*] | <code>Object</code> | \n\n<a name=\"accessor\"></a>\n\n### accessor(key, [def])\nWraps an object key in a simple accessor function.\n\n**Kind**: global function  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| key | <code>String</code> | The key to be returned from each Object passed to the function. |\n| [def] | <code>\\*</code> | A default value to be returned if the key is not present. |\n\n**Example** *(this)*  \n```js\naccessor(\"id\");\n    \n```\n**Example** *(returns this)*  \n```js\nfunction(d) {\n  return d[\"id\"];\n}\n```\n<a name=\"attrize\"></a>\n\n### attrize(elem, attrs)\nApplies each key/value in an object as an attr.\n\n**Kind**: global function  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| elem | <code>D3selection</code> | The D3 element to apply the styles to. |\n| attrs | <code>Object</code> | An object of key/value attr pairs. |\n\n<a name=\"closest\"></a>\n\n### closest(n, arr)\nFinds the closest numeric value in an array.\n\n**Kind**: global function  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| n | <code>Number</code> | The number value to use when searching the array. |\n| arr | <code>Array</code> | The array of values to test against. |\n\n<a name=\"constant\"></a>\n\n### constant(value)\nWraps non-function variables in a simple return function.\n\n**Kind**: global function  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| value | <code>Array</code> &#124; <code>Number</code> &#124; <code>Object</code> &#124; <code>String</code> | The value to be returned from the function. |\n\n**Example** *(this)*  \n```js\nconstant(42);\n    \n```\n**Example** *(returns this)*  \n```js\nfunction() {\n  return 42;\n}\n```\n<a name=\"elem\"></a>\n\n### elem(selector, params)\nManages the enter/update/exit pattern for a single DOM element.\n\n**Kind**: global function  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| selector | <code>String</code> |  | A D3 selector, which must include the tagname and a class and/or ID. |\n| params | <code>Object</code> |  | Additional parameters. |\n| [params.condition] | <code>Boolean</code> | <code>true</code> | Whether or not the element should be rendered (or removed). |\n| [params.enter] | <code>Object</code> | <code>{}</code> | A collection of key/value pairs that map to attributes to be given on enter. |\n| [params.exit] | <code>Object</code> | <code>{}</code> | A collection of key/value pairs that map to attributes to be given on exit. |\n| [params.parent] | <code>D3Selection</code> | <code>d3.select(&quot;body&quot;)</code> | The parent element for this new element to be appended to. |\n| [params.transition] | <code>D3Transition</code> | <code>d3.transition().duration(0)</code> | The transition to use when animated the different life cycle stages. |\n| [params.update] | <code>Object</code> | <code>{}</code> | A collection of key/value pairs that map to attributes to be given on update. |\n\n<a name=\"merge\"></a>\n\n### merge(objects, aggs)\nCombines an Array of Objects together and returns a new Object.\n\n**Kind**: global function  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| objects | <code>Array</code> | The Array of objects to be merged together. |\n| aggs | <code>Object</code> | An object containing specific aggregation methods (functions) for each key type. By default, numbers are summed and strings are returned as an array of unique values. |\n\n**Example** *(this)*  \n```js\nmerge([\n  {id: \"foo\", group: \"A\", value: 10, links: [1, 2]},\n  {id: \"bar\", group: \"A\", value: 20, links: [1, 3]}\n]);\n    \n```\n**Example** *(returns this)*  \n```js\n{id: [\"bar\", \"foo\"], group: \"A\", value: 30, links: [1, 2, 3]}\n```\n<a name=\"prefix\"></a>\n\n### prefix()\nReturns the appropriate CSS vendor prefix, given the current browser.\n\n**Kind**: global function  \n<a name=\"stylize\"></a>\n\n### stylize(elem, styles)\nApplies each key/value in an object as a style.\n\n**Kind**: global function  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| elem | <code>D3selection</code> | The D3 element to apply the styles to. |\n| styles | <code>Object</code> | An object of key/value style pairs. |\n\n\n\n###### <sub>Documentation generated on Mon, 03 Oct 2016 22:00:02 GMT</sub>\n"
}