{
  "name": "hyperlog-webtorrent-seed",
  "version": "2.0.1",
  "description": "seed webtorrent magnet links from a hyperlog",
  "main": "index.js",
  "dependencies": {
    "levelup-defaults": "^1.0.2",
    "mkdirp": "^0.5.1",
    "parse-torrent": "^5.7.1"
  },
  "keywords": [
    "hyperlog",
    "webtorrent",
    "seed",
    "magnet",
    "mirror"
  ],
  "author": {
    "name": "substack"
  },
  "license": "BSD",
  "devDependencies": {},
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "user": "substack",
    "repo": "hyperlog-webtorrent-seed",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/substack/hyperlog-webtorrent-seed/tarball/master",
    "clone_url": "https://github.com/substack/hyperlog-webtorrent-seed",
    "https_url": "https://github.com/substack/hyperlog-webtorrent-seed",
    "travis_url": "https://travis-ci.org/substack/hyperlog-webtorrent-seed",
    "zip_url": "https://github.com/substack/hyperlog-webtorrent-seed/archive/master.zip",
    "api_url": "https://api.github.com/repos/substack/hyperlog-webtorrent-seed"
  },
  "homepage": "https://github.com/substack/hyperlog-webtorrent-seed#readme",
  "gitHead": "9aeb431ed110aff43a85d809c4613837fdc7abc7",
  "_npmVersion": "3.7.1",
  "_nodeVersion": "5.5.0",
  "dist": {
    "shasum": "084e4b33566196dfca7b0899e03eb5c719de8ae5",
    "tarball": "http://registry.npmjs.org/hyperlog-webtorrent-seed/-/hyperlog-webtorrent-seed-2.0.1.tgz"
  },
  "versions": [
    {
      "number": "1.0.0",
      "date": "2016-02-21T11:20:44.271Z"
    },
    {
      "number": "1.0.1",
      "date": "2016-02-22T00:10:06.890Z"
    },
    {
      "number": "1.0.2",
      "date": "2016-02-23T01:37:17.078Z"
    },
    {
      "number": "1.0.3",
      "date": "2016-02-25T11:52:45.606Z"
    },
    {
      "number": "1.0.4",
      "date": "2016-02-26T06:17:19.129Z"
    },
    {
      "number": "1.0.5",
      "date": "2016-02-27T11:22:11.407Z"
    },
    {
      "number": "2.0.0",
      "date": "2016-03-24T07:51:48.963Z"
    },
    {
      "number": "2.0.1",
      "date": "2016-03-24T09:25:44.647Z"
    }
  ],
  "created": "2016-02-21T11:20:44.271Z",
  "modified": "2016-03-24T09:25:44.647Z",
  "lastPublisher": {
    "name": "substack",
    "email": "substack@gmail.com"
  },
  "owners": [
    {
      "name": "substack",
      "email": "substack@gmail.com"
    }
  ],
  "readme": "# hyperlog-webtorrent-seed\n\nseed webtorrent magnet links from a hyperlog\n\n# example\n\nMirror content from a swarmlog:\n\n``` js\nvar webtorrent = require('webtorrent')\nvar level = require('level')\nvar swarmlog = require('swarmlog')\nvar fstore = require('fs-chunk-store')\n\nvar log = swarmlog({\n  id: process.argv[2],\n  db: level('/tmp/webtorrent-mirror.log'),\n  sodium: require('chloride'),\n  valueEncoding: 'json',\n  hubs: [ 'https://signalhub.mafintosh.com' ]\n})\n\nvar hseed = require('hyperlog-seed')\nvar seeder = hseed({\n  db: level('/tmp/webtorrent-mirror.seed'),\n  log: log,\n  map: function (row) {\n    if (row.link) return { type: 'put', link: row.link }\n    if (row.unlink) return { type: 'del', link: row.unlink }\n  }\n})\n\nvar wseed = require('hyperlog-webtorrent-seed')\nwseed({\n  db: level('/tmp/webtorrent-mirror.wseed'),\n  store: function (n, opts) {\n    return fstore(n, {\n      path: '/tmp/webtorrent-mirror.store',\n      length: opts.length\n    })\n  },\n  seeder: seeder,\n  client: webtorrent()\n})\n```\n\nSeed content from stdin and publish the magnet links to a swarmlog:\n\n``` js\nvar webtorrent = require('webtorrent')\nvar parseTorrent = require('parse-torrent')\nvar level = require('level')\nvar swarmlog = require('swarmlog')\n\nvar log = swarmlog({\n  keys: require('./keys.json'),\n  db: level('/tmp/webtorrent-publish.db'),\n  sodium: require('chloride'),\n  valueEncoding: 'json',\n  hubs: [ 'https://signalhub.mafintosh.com' ]\n})\n\nvar client = webtorrent()\nclient.seed([process.stdin], { name: 'test.txt' }, function (torrent) {\n  log.append({ link: torrent.magnetURI })\n  console.log(torrent.magnetURI)\n})\n```\n\n---\n\nGenerate a keypair for the swarmlog and set up a mirror to follow the public\nkey:\n\n```\n$ node -pe \"JSON.stringify(require('ssb-keys').generate())\" > keys.json\n$ json public < keys.json\nT+EccaMYIIsfqNu0Mz549yNhmRC3HCrWr8oghnWHoRw=.ed25519\n$ electron-spawn mirror.js T+EccaMYIIsfqNu0Mz549yNhmRC3HCrWr8oghnWHoRw=.ed25519\n```\n\nPublish content and download the content from the mirror with webtorrent:\n\n```\n$ echo WOW | electron-spawn publish.js\nmagnet:?xt=urn:btih:8409223bb06b008d0ef7efe7edd28b2f47a0a9db&dn=test.txt&tr=udp%3A%2F%2Fexodus.desync.com%3A6969&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.internetwarriors.net%3A1337&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com&tr=wss%3A%2F%2Ftracker.webtorrent.io\n^C\n$ electron-spawn `which webtorrent` 'magnet:?xt=urn:btih:8409223bb06b008d0ef7efe7edd28b2f47a0a9db&dn=test.txt&tr=udp%3A%2F%2Fexodus.desync.com%3A6969&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.internetwarriors.net%3A1337&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com&tr=wss%3A%2F%2Ftracker.webtorrent.io'\n```\n\n# api\n\n``` js\nvar wseed = require('hyperlog-webtorrent-seed')\n```\n\n## var w = wseed(opts)\n\nSeed to webtorrent given:\n\n* `opts.client` - a [webtorrent][1] instance\n* `opts.seeder` - a [hyperlog-seed][2] instance\n* `opts.db` - a [levelup][3] instance\n* `opts.store(chunkLength, opts)` - function that returns an\n[abstract-chunk-store][4] instance given a `chunkLength` and an `opts.length` of\nthe entire file\n\nIn the browser, use [idb-chunk-store][5] as `opts.store` and\n[level-browserify][6] for the `opts.db`.\n\n[1]: https://npmjs.com/package/webtorrent\n[2]: https://npmjs.com/package/hyperlog-seed\n[3]: https://npmjs.com/package/level\n[4]: https://npmjs.com/package/abstract-chunk-store\n[5]: https://npmjs.com/package/idb-chunk-store\n[6]: https://npmjs.com/package/level-browserify\n\n## w.on('error', function (err) {})\n\nInternal errors are available in the `'error'` event.\n\n# license\n\nBSD\n"
}