{
  "name": "multi-image-mergetool",
  "description": "Resolve multiple image conflicts at the same time",
  "version": "1.7.0",
  "homepage": "https://github.com/twolfson/multi-image-mergetool",
  "author": {
    "name": "Todd Wolfson",
    "email": "todd@twolfson.com",
    "url": "http://twolfson.com/"
  },
  "repository": {
    "user": "twolfson",
    "repo": "multi-image-mergetool",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/twolfson/multi-image-mergetool/tarball/master",
    "clone_url": "https://github.com/twolfson/multi-image-mergetool",
    "https_url": "https://github.com/twolfson/multi-image-mergetool",
    "travis_url": "https://travis-ci.org/twolfson/multi-image-mergetool",
    "zip_url": "https://github.com/twolfson/multi-image-mergetool/archive/master.zip",
    "api_url": "https://api.github.com/repos/twolfson/multi-image-mergetool"
  },
  "bin": {
    "multi-image-mergetool": "bin/multi-image-mergetool"
  },
  "main": "server/index.js",
  "engines": {
    "node": ">= 4.0.0"
  },
  "license": "Unlicense",
  "scripts": {
    "build": "gulp build",
    "develop": "gulp develop",
    "lint": "twolfson-style lint browser/ server/ test/",
    "start-gemini": "node bin/multi-image-mergetool --loader gemini",
    "test": "npm run test-karma-single && npm run lint && npm run build",
    "test-karma-continuous": "karma start --no-single-run",
    "test-karma-single": "karma start"
  },
  "dependencies": {
    "async": "~2.1.2",
    "body-parser": "~1.15.2",
    "chalk": "~1.1.3",
    "data-uri-to-buffer": "0.0.4",
    "express": "~4.14.0",
    "glob": "~7.1.1",
    "http-errors": "~1.5.0",
    "jade": "~1.11.0",
    "looks-same": "~3.0.0",
    "mkdirp": "~0.5.1",
    "opener": "~1.4.2",
    "tmp": "0.0.29",
    "underscore": "~1.8.3",
    "yargs": "~6.3.0"
  },
  "devDependencies": {
    "bootstrap": "~3.3.7",
    "brfs": "~1.4.3",
    "browserify": "~13.1.1",
    "chai": "~3.5.0",
    "domo": "~0.5.9",
    "foundry": "~4.0.3",
    "foundry-release-git": "~2.0.2",
    "foundry-release-npm": "~2.0.2",
    "gulp": "~3.9.1",
    "gulp-buffer": "0.0.2",
    "gulp-livereload": "~3.8.1",
    "gulp-notify": "~2.2.0",
    "gulp-sourcemaps": "~2.2.0",
    "jquery": "~3.1.1",
    "jscs": "~3.0.7",
    "jshint": "~2.9.4",
    "karma": "~1.3.0",
    "karma-browserify": "~5.1.0",
    "karma-mocha": "~1.2.0",
    "karma-phantomjs-launcher": "~1.0.2",
    "mocha": "~3.1.2",
    "rimraf": "~2.5.4",
    "twolfson-style": "~1.6.0",
    "unidragger": "~2.1.0",
    "vinyl-source-stream": "~1.1.0",
    "watchify": "~3.7.0"
  },
  "keywords": [
    "image",
    "merge",
    "mergetool",
    "diff",
    "visual",
    "testing"
  ],
  "foundry": {
    "releaseCommands": [
      {
        "type": "customCommand",
        "updateFiles": "npm run build"
      },
      {
        "type": "customCommand",
        "updateFiles": "cat .gitignore | grep --invert-match browser-dist > .npmignore"
      },
      "foundry-release-git",
      "foundry-release-npm"
    ]
  },
  "gitHead": "b22ad63a4b8c50198024f27f59aaf6fa5f51c9e9",
  "_npmVersion": "2.15.11",
  "_nodeVersion": "4.6.1",
  "dist": {
    "shasum": "c766dd08ad3aad7ca42cc30c45718b92f6745004",
    "tarball": "http://registry.npmjs.org/multi-image-mergetool/-/multi-image-mergetool-1.7.0.tgz"
  },
  "versions": [
    {
      "number": "1.0.0",
      "date": "2016-11-07T12:19:56.762Z"
    },
    {
      "number": "1.1.0",
      "date": "2016-11-07T21:11:41.268Z"
    },
    {
      "number": "1.2.0",
      "date": "2016-11-08T09:27:16.428Z"
    },
    {
      "number": "1.2.1",
      "date": "2016-11-08T09:29:33.739Z"
    },
    {
      "number": "1.2.2",
      "date": "2016-11-08T09:31:03.667Z"
    },
    {
      "number": "1.3.0",
      "date": "2016-11-08T09:37:31.113Z"
    },
    {
      "number": "1.4.0",
      "date": "2016-11-10T11:20:09.782Z"
    },
    {
      "number": "1.4.1",
      "date": "2016-11-10T11:23:01.225Z"
    },
    {
      "number": "1.5.0",
      "date": "2016-11-10T12:35:20.278Z"
    },
    {
      "number": "1.6.0",
      "date": "2016-11-11T09:31:30.421Z"
    },
    {
      "number": "1.7.0",
      "date": "2016-11-11T11:58:30.044Z"
    }
  ],
  "created": "2016-11-07T12:19:56.762Z",
  "modified": "2016-11-11T11:58:30.044Z",
  "lastPublisher": {
    "name": "twolfson",
    "email": "todd@twolfson.com"
  },
  "owners": [
    {
      "name": "twolfson",
      "email": "todd@twolfson.com"
    }
  ],
  "readme": "# multi-image-mergetool [![Build status](https://travis-ci.org/twolfson/multi-image-mergetool.svg?branch=master)](https://travis-ci.org/twolfson/multi-image-mergetool)\n\nResolve multiple image conflicts at the same time\n\nThis was built to resolve conflicts in full page test screenshots where auxilary content may have changed (e.g. navigation). We prefer full page screenshots over ignored content/component based screenshots as it is less brittle and catches unexpected issues.\n\n**Features:**\n\n- Find/resolve common image changes via overlay selection\n\n## Getting Started\nInstall the module via:\n\n```bash\n# Install multi-image-mergetool globally\nnpm install -g multi-image-mergetool\n\n# Run multi-image-mergetool against a Gemini test suite\nmulti-image-mergetool --loader gemini\n# Comparing images...\n# ✘ gemini/screens/root/default-small/Chrome.png\n# ✘ gemini/screens/root/default-medium/Chrome.png\n# ✓ gemini/screens/root/default-large/Chrome.png\n# ✓ gemini/screens/root/z-default-large2/Chrome.png\n# ✓ gemini/screens/root/z-default-large3/Chrome.png\n# Images matched: 3 of 5\n# Server is listening on http://localhost:2020/\n\n# Browser window will automatically be opened\n\n# Alternatively compare one-off images by their paths\nmulti-image-mergetool \\\n    --current-images path/to/current1.png path/to/current2.png \\\n    --ref-images path/to/ref1.png path/to/ref2.png\n\n# Optionally define custom diff paths\nmulti-image-mergetool \\\n    --current-images path/to/current1.png path/to/current2.png \\\n    --ref-images path/to/ref1.png path/to/ref2.png \\\n    --diff-images path/to/diff1.png path/to/diff2.png\n```\n\n## Donations\nSupport this project and [others by twolfson][projects] via [donations][support-me]\n\n[projects]: http://twolfson.com/projects\n[support-me]: http://twolfson.com/support-me\n\n## Documentation\n### CLI\nOur CLI supports the following options:\n\n```\n$ multi-image-mergetool --help\nmulti-image-mergetool [options] --current-images <current-images...> --ref-images <ref-images...>\n\nOptions:\n  --current-images   Current images for comparison (required if no --loader)  [array]\n  --ref-images       Locations to load/save reference images (required if no --loader)  [array]\n  --diff-images      Locations to save diff images  [array]\n  --loader           Loading mechanism to find images  [string] [choices: \"gemini\"]\n  --port, -p         Port for server to listen on  [number] [default: 2020]\n  --hostname, -h     Hostname for server to listen on  [string] [default: \"localhost\"]\n  --verbose          Enable verbose logging  [boolean]\n  --no-browser-open  Prevent browser window from opening automatically  [boolean]\n  --version          Show version number  [boolean]\n  --help             Show help  [boolean]\n\nExamples:\n  Load from paths:\n    multi-image-mergetool --current-images current1.png current2.png --ref-images ref1.png ref2.png\n    multi-image-mergetool --current-images current1.png current2.png --ref-images ref1.png ref2.png --diff-images diff1.png diff2.png\n  Load from `gemini` and `gemini-report` folders:\n    multi-image-mergetool --loader gemini```\n\n**Notes:**\n\n- The `--current-images`, `--ref-images`, and `--diff-images` must be the same length and order\n    - It's okay if the ref images and diff images don't exist yet, we will show prompts in the UI to handle new images\n\n### Architecture choices\nWe chose to use a server/browser implementation over a desktop application (e.g. Electron) for more flexibility with little development cost. It allows us to support virtualized environments (e.g. Vagrant, Docker) without asking our users to bend over backwards.\n\n## Development\n### Setup\nTo get a local copy of `multi-image-mergetool` set up, run the following steps:\n\n```bash\n# Clone the repository\ngit clone https://github.com/twolfson/multi-image-mergetool\ncd multi-image-mergetool\n\n# Install our dependencies\nnpm install\n\n# Compile our latest assets\nnpm run build\n\n# Start our local multi-image-mergetool\nnpm run start-gemini\n# or bin/multi-image-mergetool\n```\n\n### Building files\nWe use [gulp][] and [browserify][] to compile assets. These can be run once via:\n\n```bash\nnpm run build\n```\n\nor continuously via:\n\n```bash\nnpm run develop\n```\n\n`npm run develop` will additionally start a [LiveReload][] server\n\n[gulp]: https://github.com/gulpjs/gulp\n[browserify]: https://github.com/substack/node-browserify\n[LiveReload]: http://livereload.com/extensions/\n\n### Releasing\nOur release process has a bunch of steps so we use [foundry][] to make them reproducable. To perform a new release, run the following:\n\n- Update `CHANGELOG.md` with new release version\n- Run `foundry release <version>`\n    - This will take care of compiling `browser-dist`, updating `.npmignore` to match `.gitignore`, tagging repository, updating `package.json`, pushing commit/tag to GitHub, and publishing to `npm`\n\n[foundry]: https://github.com/twolfson/foundry\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint via `npm run lint` and test via `npm test`.\n\n## Prior art\n`multi-image-mergetool` was inspired by:\n\n- https://github.com/gemini-testing/gemini-gui\n- https://applitools.com/\n- [@twolfson's previous work on visual testing](http://twolfson.com/2014-02-25-visual-regression-testing-in-travis-ci)\n- Initial proof of concept: <https://gist.github.com/twolfson/2745867438113ed97ad5a39b7a2a410e>\n- Initial mockups: <https://gist.github.com/twolfson/c4236abadeada82e2686c940fb23341d>\n\n## Unlicense\nAs of Oct 22 2016, Todd Wolfson has released this repository and its contents to the public domain.\n\nIt has been released under the [UNLICENSE][].\n\n[UNLICENSE]: UNLICENSE\n"
}