{
  "name": "whs",
  "version": "1.1.6",
  "description": "Framework for developing 3D web apps with physics.",
  "main": "lib/index.js",
  "scripts": {
    "postversion": "gulp build --prod",
    "test": "snyk test && karma start ./test/karma.unit.conf.js",
    "start": "npm run dev",
    "build": "gulp build",
    "deploy": "surge --project ./ --domain whs-dev.surge.sh",
    "dev": "gulp dev",
    "lint": "gulp src:lint"
  },
  "repository": {
    "user": "whitestormjs",
    "repo": "whitestorm.js",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/whitestormjs/whitestorm.js/tarball/master",
    "clone_url": "https://github.com/whitestormjs/whitestorm.js",
    "https_url": "https://github.com/whitestormjs/whitestorm.js",
    "travis_url": "https://travis-ci.org/whitestormjs/whitestorm.js",
    "zip_url": "https://github.com/whitestormjs/whitestorm.js/archive/master.zip",
    "api_url": "https://api.github.com/repos/whitestormjs/whitestorm.js"
  },
  "keywords": [
    "whitestorm.js",
    "three.js",
    "webgl",
    "ammo.js",
    "api",
    "3d",
    "web",
    "javascript",
    "webpack",
    "gulpjs"
  ],
  "author": {
    "name": "Alexander Buzin"
  },
  "license": "MIT",
  "homepage": "https://github.com/WhitestormJS/whitestorm.js#readme",
  "dependencies": {
    "inline-worker": "^1.1.0",
    "minivents": "^2.0.2",
    "stats.js": "^0.16.0",
    "three": "^0.82.1",
    "three-orbit-controls": "^72.0.0",
    "webworkify-webpack": "^1.1.0",
    "ammonext": "^0.0.3"
  },
  "devDependencies": {
    "assert": "^1.4.1",
    "babel": "^6.5.2",
    "babel-loader": "^6.2.4",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-plugin-transform-class-properties": "^6.11.5",
    "babel-plugin-transform-decorators-legacy": "^1.3.4",
    "babel-plugin-transform-es2015-modules-commonjs": "^6.11.5",
    "babel-plugin-transform-object-rest-spread": "^6.8.0",
    "babel-plugin-transform-runtime": "^6.9.0",
    "babel-polyfill": "^6.13.0",
    "babel-preset-es2015": "^6.6.0",
    "babel-preset-stage-1": "^6.5.0",
    "babel-register": "^6.8.0",
    "babelify": "^7.3.0",
    "benchmark": "^2.1.0",
    "browserify": "^13.0.1",
    "browserify-shim": "^3.8.12",
    "codecov.io": "^0.1.6",
    "del": "^2.2.0",
    "gulp": "^3.9.1",
    "gulp-babel": "^6.1.2",
    "gulp-benchmark": "^1.1.1",
    "gulp-browser-basedir": "^1.0.1",
    "gulp-browserify": "^0.5.1",
    "gulp-cached": "^1.1.0",
    "gulp-cli": "^1.2.2",
    "gulp-load-plugins": "^1.2.2",
    "gulp-plumber": "^1.1.0",
    "gulp-swig": "^0.8.0",
    "gulp-util": "^3.0.7",
    "gulp-xo": "^0.11.0",
    "happypack": "^2.1.1",
    "jsdom": "^9.4.5",
    "karma": "^1.0.0",
    "karma-benchmark": "^0.6.0",
    "karma-benchmark-reporter": "^0.1.1",
    "karma-chrome-launcher": "^1.0.1",
    "karma-coverage": "^1.1.1",
    "karma-mocha": "^1.1.1",
    "karma-mocha-reporter": "^2.1.0",
    "karma-requirejs": "^1.0.0",
    "mocha": "^3.0.2",
    "path": "^0.12.7",
    "requirejs": "^2.2.0",
    "snyk": "^1.19.1",
    "stats.js": "^0.16.0",
    "surge": "^0.18.0",
    "swig": "^1.4.2",
    "uglify-loader": "^1.3.0",
    "webpack": "^1.13.1",
    "webpack-dev-server": "^1.14.1",
    "webpack-optimizejs-plugin": "0.0.2",
    "webworkify-webpack": "1.1.2",
    "whs-component-terrain": "0.0.2",
    "xo": "^0.15.1",
    "yargs": "^6.3.0"
  },
  "xo": {
    "space": 2,
    "esnext": true,
    "envs": [
      "node",
      "browser",
      "es6"
    ],
    "syntax_map": {
      "JavaScript (Babel)": "javascript"
    },
    "rules": {
      "operator-linebreak": [
        2,
        "before"
      ],
      "curly": [
        2,
        "multi-or-nest"
      ],
      "one-var": 0,
      "no-else-return": 1,
      "no-undef": 0,
      "no-new": 0,
      "camelcase": 0,
      "linebreak-style": 0,
      "new-cap": [
        1,
        {
          "newIsCap": true,
          "capIsNew": true,
          "properties": false
        }
      ],
      "babel/arrow-parens": 0,
      "xo/filename-case": 0
    }
  },
  "gitHead": "6ccd9349bef86f8f63bcfdddc33ae3c1a9ce0dc2",
  "_npmVersion": "3.10.6",
  "_nodeVersion": "6.3.1",
  "dist": {
    "shasum": "de94bc1849016fd21c01c0b3d77a47f142bc431c",
    "tarball": "http://registry.npmjs.org/whs/-/whs-1.1.6.tgz"
  },
  "stars": 2,
  "versions": [
    {
      "number": "0.12.0-dev.3",
      "date": "2016-11-05T21:32:58.821Z"
    },
    {
      "number": "1.0.0",
      "date": "2016-11-08T16:36:04.406Z"
    },
    {
      "number": "1.0.2",
      "date": "2016-11-08T16:42:53.441Z"
    },
    {
      "number": "1.1.1",
      "date": "2016-11-08T16:57:15.591Z"
    },
    {
      "number": "1.1.2",
      "date": "2016-11-08T17:06:03.158Z"
    },
    {
      "number": "1.1.4",
      "date": "2016-11-10T14:47:33.861Z"
    },
    {
      "number": "1.1.5",
      "date": "2016-11-10T14:55:37.541Z"
    },
    {
      "number": "1.1.6",
      "date": "2016-11-13T20:09:52.838Z"
    }
  ],
  "created": "2016-11-05T21:32:58.821Z",
  "modified": "2016-11-13T20:09:52.838Z",
  "lastPublisher": {
    "name": "alex2401",
    "email": "alexbuzin88@gmail.com"
  },
  "owners": [
    {
      "name": "alex2401",
      "email": "alexbuzin88@gmail.com"
    }
  ],
  "readme": "# [![logo](https://raw.githubusercontent.com/WhitestormJS/whitestorm.js/dev/media/art/logo/big.png)](https://whsjs.io/)\r\n\r\n[![XO code style](https://img.shields.io/badge/code_style-XO-5ed9c7.svg?style=flat-square)](https://github.com/sindresorhus/xo)\r\n[![NPM Version](https://img.shields.io/npm/v/whs.svg?style=flat-square)](https://www.npmjs.com/package/whs)\r\n[![Build Status](https://img.shields.io/travis/WhitestormJS/whitestorm.js.svg?style=flat-square)](https://travis-ci.org/WhitestormJS/whitestorm.js)\r\n[![Known Vulnerabilities](https://snyk.io/test/npm/whs/badge.svg?style=flat-square)](https://snyk.io/test/npm/whs)\r\n[![Discord](https://discordapp.com/api/guilds/238405369859145729/widget.png)](https://discord.gg/frNetGE)\r\n\r\n> **Framework for developing 3D web apps**\r\n\r\n## [Showcases](https://whs-dev.surge.sh/examples/)\r\n\r\nYou can find lots of examples at [showcases](https://whs-dev.surge.sh/examples/).\r\n\r\n<a href=\"https://whs-dev.surge.sh/examples/#basic/helloworld\">\r\n  <img alt=\"basic/helloworld\" target=\"_blank\" src=\"http://i.imgur.com/IRq5Hp4.gif\" width=\"33%\" />\r\n</a>\r\n<a href=\"https://whs-dev.surge.sh/examples/#basic/model\">\r\n  <img alt=\"basic/model\" target=\"_blank\" src=\"http://i.imgur.com/RmTjjiA.gif\" width=\"33%\" />\r\n</a>\r\n<a href=\"https://whs-dev.surge.sh/examples/#softbody/cloth3\">\r\n  <img alt=\"softbody/cloth3\" target=\"_blank\" src=\"http://i.imgur.com/BgHdX56.gif\" width=\"33%\" />\r\n</a>\r\n<a href=\"https://whs-dev.surge.sh/examples/#post-processing/basic-glitch\">\r\n  <img alt=\"postprocessing/basic-glitch\" target=\"_blank\" src=\"http://i.imgur.com/ASUN7tR.gif\" width=\"33%\" />\r\n</a>\r\n<a href=\"https://whs-dev.surge.sh/examples/#softbody/ropes\">\r\n  <img alt=\"softbody/ropes\" target=\"_blank\" src=\"http://i.imgur.com/wRFKfTM.gif\" width=\"33%\" />\r\n</a>\r\n<a href=\"https://whs-dev.surge.sh/examples/#design/saturn\">\r\n  <img alt=\"design/saturn\" target=\"_blank\" src=\"http://i.imgur.com/JZ5HryS.gif\" width=\"33%\" />\r\n</a>\r\n\r\n### Why?\r\n* ü§î Because making of even **a basic Three.js application requires at least ~20 lines of code** (see [this tutorial](https://threejs.org/docs/index.html#Manual/Introduction/Creating_a_scene))\r\n  - **Native three.js:** you will need to setup: _scene, renderer, camera_, make an `animate()` function before making the actual app.\r\n  - **Whitestorm.js:** all those values are filled with defaults, you just need to define your own values **only if they differs from defauts**.\r\n  \r\n* üí£ **Adding physics is hard.**\r\n  - **Other frameworks:** To make your app run with physics you need to make a second world with same 3d objects and apply their transform (position & rotation) to your rendered scene objects (`THREE.Scene` for example) in every frame.\r\n  - **Whitestorm.js:** All this can be done **automatically**.\r\n  \r\n* üîå **Components & plugins**\r\n  - **Other:** `Unknown yet`.\r\n  - **Whitestorm.js:** It provides ability to create your own components using framework's tools. (**You can add a component** like `WHS.Box` or `WHS.PointLight` but for creating a _terrain (`WHS.Terrain`) / aquarium (`WHS.Aquarium`) / car (`WHS.Car`) / any other_ with specific merhods and scripts. \r\n  - See [Component system in interactive 3D of web](https://medium.com/@_alex_buzin/component-system-in-interactive-3d-of-web-18348eecf270#.lynivy4ut) article for more info.\r\n  \r\n-----\r\n\r\n\r\n## Features\r\n\r\n* üíé **Simple in usage**\r\n* Minimize 3D scene prototyping\r\n* üîå  **Component based scene graph**\r\n* üí£ Integrated **high performance physics** with `Worker` (Multithreading)\r\n* Automatization of rendering\r\n* Enhanced **softbodies**\r\n* üÜï **ES2015+ based**\r\n* Extension system (plugins)\r\n* Dynamic geometry update\r\n* [asm.js](http://asmjs.org/) acceleration\r\n* [Webpack](https://whsjs.io/#/api/webpack) friendly\r\n* ‚úîÔ∏è **Integrated [Three.js](https://threejs.org/) rendering engine**\r\n* Work with Whitestorm.js and Three.js at the same time\r\n\r\n## Installation\r\n### NODE\r\n\r\n```bash\r\n$ npm install --save whs\r\n```\r\n\r\n### WEBPACK\r\n\r\nSee [WhitestormJS/test-whitestorm-webpack](https://github.com/WhitestormJS/test-whitestorm-webpack) for more details.\r\n\r\n## Documentation\r\n\r\nFull documentation of guides and APIs are located at [here](http://whsjs.io/).\r\n\r\n## Usage\r\n\r\n```javascript\r\nconst world = new WHS.World({\r\n    stats: \"fps\", // fps, ms, mb or false if not need.\r\n    autoresize: \"window\",\r\n\r\n    gravity: [0, -100, 0], // Physic gravity.\r\n\r\n    camera: {\r\n      position: {\r\n        z: 50 // Move camera.\r\n      }\r\n    }\r\n});\r\n\r\nconst sphere = new WHS.Sphere({ // Create sphere comonent.\r\n  geometry: {\r\n    radius: 3\r\n  },\r\n\r\n  mass: 10, // Mass of physics object.\r\n\r\n  material: {\r\n    color: 0xffffff, // White color.\r\n    kind: 'basic' // THREE.MeshBasicMaterial\r\n  },\r\n\r\n  position: [0, 10, 0]\r\n});\r\n\r\nsphere.addTo(world);\r\nconsole.log(sphere.native); // Returns THREE.Mesh of this object.\r\n\r\nworld.start(); // Start animations and physics simulation.\r\n```\r\n\r\n## Playground!\r\n\r\n[![playground](http://i.imgur.com/6EdMjm1.gif)](http://whsjs.io/playground/?example=saturn&dir=demo)\r\n\r\n\r\n## Contributors\r\n\r\n[![Author](http://wsbadge.herokuapp.com/badge/Author-Alexander%20Buzin-orange.svg?style=flat-square)](https://github.com/sasha240100)\r\n[![Contributor](http://wsbadge.herokuapp.com/badge/Contributor-jackdalton-green.svg?style=flat-square)](https://github.com/jackdalton)\r\n[![Contributor](http://wsbadge.herokuapp.com/badge/Contributor-Noctisdark-green.svg?style=flat-square)](https://github.com/noctisdark)\r\n[![Contributor](http://wsbadge.herokuapp.com/badge/Contributor-bdirl-green.svg?style=flat-square)](https://github.com/bdirl)\r\n[![Contributor](http://wsbadge.herokuapp.com/badge/Contributor-preco21-green.svg?style=flat-square)](https://github.com/preco21)\r\n[![Contributor](http://wsbadge.herokuapp.com/badge/Contributor-yeliex-green.svg?style=flat-square)](https://github.com/yeliex)\r\n[![Contributor](http://wsbadge.herokuapp.com/badge/Contributor-t4r0-green.svg?style=flat-square)](https://github.com/t4r0)\r\n[![Contributor](http://wsbadge.herokuapp.com/badge/Contributor-electron0zero-green.svg?style=flat-square)](https://github.com/electron0zero)\r\n[![Contributor](http://wsbadge.herokuapp.com/badge/Contributor-typedef42-green.svg?style=flat-square)](https://github.com/typedef42)\r\n\r\n[![forthebadge](http://forthebadge.com/images/badges/built-with-love.svg)](https://alexbuzin.me/)\r\n"
}