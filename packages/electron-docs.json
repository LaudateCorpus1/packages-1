{
  "name": "electron-docs",
  "version": "2.0.1",
  "description": "Fetch Electron documentation as raw markdown strings",
  "main": "index.js",
  "bin": {
    "electron-docs": "cli.js"
  },
  "scripts": {
    "test": "node test/index.js | tap-spec"
  },
  "repository": {
    "user": "electron",
    "repo": "electron-docs",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/electron/electron-docs/tarball/master",
    "clone_url": "https://github.com/electron/electron-docs",
    "https_url": "https://github.com/electron/electron-docs",
    "travis_url": "https://travis-ci.org/electron/electron-docs",
    "zip_url": "https://github.com/electron/electron-docs/archive/master.zip",
    "api_url": "https://api.github.com/repos/electron/electron-docs"
  },
  "keywords": [
    "electron",
    "api",
    "documentation",
    "markdown",
    "reference",
    "schema",
    "raw"
  ],
  "author": {
    "name": "Zeke Sikelianos",
    "email": "zeke@sikelianos.com",
    "url": "http://zeke.sikelianos.com"
  },
  "license": "MIT",
  "dependencies": {
    "got": "^6.3.0",
    "gunzip-maybe": "^1.3.1",
    "node-dir": "^0.1.12",
    "ora": "^0.2.3",
    "path-exists": "^3.0.0",
    "pify": "^2.3.0",
    "semver": "^5.1.0",
    "tar-fs": "^1.13.0"
  },
  "devDependencies": {
    "tap-spec": "^4.1.1",
    "tape": "^4.5.1"
  },
  "gitHead": "3fbc0dde6cf7102395258634a9979ede181801b1",
  "homepage": "https://github.com/electron/electron-docs#readme",
  "_npmVersion": "3.10.8",
  "_nodeVersion": "7.0.0",
  "dist": {
    "shasum": "01123a4fccb6be27acc1280027bfcb240c54b1d2",
    "tarball": "http://registry.npmjs.org/electron-docs/-/electron-docs-2.0.1.tgz"
  },
  "stars": 1,
  "versions": [
    {
      "number": "1.0.0",
      "date": "2016-06-16T22:43:23.590Z"
    },
    {
      "number": "1.0.1",
      "date": "2016-06-17T02:27:56.643Z"
    },
    {
      "number": "1.0.2",
      "date": "2016-06-17T02:30:18.243Z"
    },
    {
      "number": "1.0.3",
      "date": "2016-06-17T02:37:18.796Z"
    },
    {
      "number": "1.0.4",
      "date": "2016-06-17T21:51:28.243Z"
    },
    {
      "number": "1.0.5",
      "date": "2016-06-17T22:06:00.195Z"
    },
    {
      "number": "1.1.0",
      "date": "2016-06-24T23:41:07.084Z"
    },
    {
      "number": "1.2.0",
      "date": "2016-06-29T00:54:53.268Z"
    },
    {
      "number": "1.2.1",
      "date": "2016-09-09T17:49:06.282Z"
    },
    {
      "number": "1.2.2",
      "date": "2016-09-09T17:52:09.098Z"
    },
    {
      "number": "1.2.3",
      "date": "2016-10-05T01:39:21.339Z"
    },
    {
      "number": "2.0.0",
      "date": "2016-11-10T23:16:54.567Z"
    },
    {
      "number": "2.0.1",
      "date": "2016-11-12T19:35:58.546Z"
    }
  ],
  "created": "2016-06-16T22:43:23.590Z",
  "modified": "2016-11-12T19:35:58.546Z",
  "lastPublisher": {
    "name": "zeke",
    "email": "zeke@sikelianos.com"
  },
  "owners": [
    {
      "name": "zeke",
      "email": "zeke@sikelianos.com"
    }
  ],
  "readme": "# electron-docs [![Build Status](https://travis-ci.org/electron/electron-docs.svg?branch=master)](https://travis-ci.org/electron/electron-docs)\n\nThis package consumes the [electron/electron](https://github.com/electron/electron)\nrepo in search of markdown files, and returns an array of file objects with stringified\nfile contents.\n\nIt is used by Electron's [docs linter](https://github.com/electron/electron-docs-linter).\n\n## Installation\n\n```sh\nnpm install electron-docs --save\n```\n\n## Programmatic Usage\n\nRequire the function and call it with any of the following:\n\n- A remote branch name, like `master`\n- A version number, like `1.4.4`\n- A commit SHA, like `76375a83eb3a97e7aed14d37d8bdc858c765e564`\n- A local directory, like `~/my/path/to/electron/`\n\n```js\nconst electronDocs = require('electron-docs')\n\nelectronDocs('master').then(function(docs) {\n  // docs is an array of objects, one for each markdown file in /docs\n})\n```\n\nEach object in the `docs` array looks like this:\n\n```js\n{\n slug: \"windows-store-guide\",\n filename: \"docs/tutorial/windows-store-guide.md\",\n markdown_content: \"# Windows Store Guide\\n\\n...\"\n}\n```\n\nWhen fetching docs from a local directory, be sure to use a full path:\n\n```js\nconst path = require('path')\nconst docsPath = path.join(__dirname, 'docs')\nelectronDocs(docsPath).then(function(docs) {\n  // ...\n})\n```\n\nIf you prefer node-style callbacks instead of promises, those are supported too:\n\n```js\nelectronDocs('1.0.0', function(err, docs) {\n  console.log(err, docs)\n})\n```\n\n## CLI Usage\n\nAdd this to your package.json file:\n\n```json\n{\n  \"scripts\": {\n    \"docs\": \"electron-docs > docs.json\"\n  }\n}\n```\n\nWhen you run `npm run docs`, the module writes the stringified JSON object to\n`stdout`, and the output is piped into a file.\n\n`stdout` ftw!\n\n## Tests\n\n```sh\nnpm i && npm t\n```\n\n## Dependencies\n\n- [got](https://ghub.io/got): Simplified HTTP requests\n- [gunzip-maybe](https://github.com/mafintosh/gunzip-maybe): Transform stream that gunzips its input if it is gzipped and just echoes it if not\n- [node-dir](https://ghub.io/node-dir): asynchronous file and directory operations for Node.js\n- [ora](https://ghub.io/ora): Elegant terminal spinner\n- [path-exists](https://ghub.io/path-exists): Check if a path exists\n- [pify](https://github.com/sindresorhus/pify): Promisify a callback-style function\n- [semver](https://ghub.io/semver): The semantic version parser used by npm.\n- [tar-fs](https://github.com/mafintosh/tar-fs): filesystem bindings for tar-stream\n\n## Dev Dependencies\n\n- [tap-spec](https://github.com/scottcorgan/tap-spec): Formatted TAP output like Mocha&#39;s spec reporter\n- [tape](https://github.com/substack/tape): tap-producing test harness for node and browsers\n\n## License\n\nMIT\n"
}