{
  "name": "myou-engine",
  "version": "0.3.12",
  "description": "Myou is a game engine for web, it features an editor based on Blender.",
  "main": "./main.js",
  "scripts": {
    "build": "webpack"
  },
  "dependencies": {
    "coffee-loader": "^0.7.2",
    "coffee-script": "^1.10.0",
    "file-loader": "^0.8.5",
    "gl-matrix": "^2.3.1",
    "timsort": "^0.2.1",
    "whatwg-fetch": "^1.0.0",
    "http-server": "^0.8.5",
    "url-loader": "^0.5.7",
    "source-map-loader": "^0.1.5",
    "raw-loader": "^0.5.1",
    "json-loader": "^0.5.4",
    "webpack": "^1.12.11",
    "shelljs": "^0.5.3"
  },
  "optionalDependencies": {
    "http-server": "^0.8.5",
    "url-loader": "^0.5.7",
    "source-map-loader": "^0.1.5",
    "raw-loader": "^0.5.1",
    "json-loader": "^0.5.4",
    "webpack": "^1.12.11",
    "shelljs": "^0.5.3"
  },
  "devDependencies": {
    "electron-prebuilt": "^0.36.7"
  },
  "repository": null,
  "keywords": [
    "webgl",
    "game",
    "engine",
    "blender"
  ],
  "author": {
    "name": "Alberto Torres Ruiz",
    "email": "kungfoobar@gmail.com",
    "url": "http://pixelements.net"
  },
  "license": "SEE LICENSE IN <LICENSE>",
  "gitHead": "b3041d5337baad696f896c3f5a76a76d80550099",
  "_npmVersion": "3.9.5",
  "_nodeVersion": "6.2.2",
  "dist": {
    "shasum": "e914522a7408d3b52efc30eaaf079c3d86b2808e",
    "tarball": "http://registry.npmjs.org/myou-engine/-/myou-engine-0.3.12.tgz"
  },
  "stars": 1,
  "versions": [
    {
      "number": "0.0.1",
      "date": "2016-01-27T13:04:28.124Z"
    },
    {
      "number": "0.0.2",
      "date": "2016-01-27T16:00:54.743Z"
    },
    {
      "number": "0.0.3",
      "date": "2016-01-27T21:13:18.558Z"
    },
    {
      "number": "0.0.4",
      "date": "2016-01-28T18:39:44.301Z"
    },
    {
      "number": "0.0.5",
      "date": "2016-01-29T18:14:12.629Z"
    },
    {
      "number": "0.0.6",
      "date": "2016-02-02T21:28:35.463Z"
    },
    {
      "number": "0.0.7",
      "date": "2016-02-03T19:02:28.755Z"
    },
    {
      "number": "0.0.8",
      "date": "2016-02-05T04:09:41.922Z"
    },
    {
      "number": "0.0.9",
      "date": "2016-02-05T04:31:31.857Z"
    },
    {
      "number": "0.0.10",
      "date": "2016-02-06T19:30:45.232Z"
    },
    {
      "number": "0.0.11",
      "date": "2016-02-07T15:06:40.675Z"
    },
    {
      "number": "0.0.12",
      "date": "2016-02-10T19:53:44.795Z"
    },
    {
      "number": "0.0.13",
      "date": "2016-02-11T17:08:24.714Z"
    },
    {
      "number": "0.0.14",
      "date": "2016-02-12T11:36:28.377Z"
    },
    {
      "number": "0.0.15",
      "date": "2016-02-16T01:05:55.618Z"
    },
    {
      "number": "0.0.16",
      "date": "2016-02-17T13:22:14.049Z"
    },
    {
      "number": "0.0.17",
      "date": "2016-02-23T11:57:01.412Z"
    },
    {
      "number": "0.0.18",
      "date": "2016-02-24T10:06:58.510Z"
    },
    {
      "number": "0.0.19",
      "date": "2016-02-24T12:20:02.688Z"
    },
    {
      "number": "0.0.20",
      "date": "2016-02-24T12:45:02.939Z"
    },
    {
      "number": "0.1.0",
      "date": "2016-02-24T12:49:06.400Z"
    },
    {
      "number": "0.1.1",
      "date": "2016-02-24T12:57:16.794Z"
    },
    {
      "number": "0.1.2",
      "date": "2016-02-24T22:04:49.815Z"
    },
    {
      "number": "0.1.3",
      "date": "2016-02-25T00:10:02.580Z"
    },
    {
      "number": "0.1.4",
      "date": "2016-02-29T10:19:54.342Z"
    },
    {
      "number": "0.1.5",
      "date": "2016-03-02T15:25:23.906Z"
    },
    {
      "number": "0.1.6",
      "date": "2016-03-03T20:11:19.015Z"
    },
    {
      "number": "0.1.7",
      "date": "2016-03-17T18:15:40.712Z"
    },
    {
      "number": "0.2.0",
      "date": "2016-03-23T17:19:20.718Z"
    },
    {
      "number": "0.2.1",
      "date": "2016-04-21T20:32:04.851Z"
    },
    {
      "number": "0.3.0",
      "date": "2016-04-26T13:02:59.430Z"
    },
    {
      "number": "0.3.1",
      "date": "2016-04-27T21:19:06.414Z"
    },
    {
      "number": "0.3.2",
      "date": "2016-04-28T08:46:56.038Z"
    },
    {
      "number": "0.3.3",
      "date": "2016-04-28T15:16:50.359Z"
    },
    {
      "number": "0.3.4",
      "date": "2016-04-28T18:13:26.428Z"
    },
    {
      "number": "0.3.5",
      "date": "2016-05-02T11:57:10.827Z"
    },
    {
      "number": "0.3.7",
      "date": "2016-05-24T16:45:24.281Z"
    },
    {
      "number": "0.3.8",
      "date": "2016-06-07T14:20:02.363Z"
    },
    {
      "number": "0.3.9",
      "date": "2016-07-09T18:27:53.221Z"
    },
    {
      "number": "0.3.10",
      "date": "2016-08-22T23:55:16.302Z"
    },
    {
      "number": "0.3.11",
      "date": "2016-08-24T00:57:47.239Z"
    },
    {
      "number": "0.3.12",
      "date": "2016-09-26T13:35:00.741Z"
    }
  ],
  "created": "2016-01-27T13:04:28.124Z",
  "modified": "2016-09-26T13:35:00.741Z",
  "lastPublisher": {
    "name": "pixelements",
    "email": "julio@pixelements.net"
  },
  "owners": [
    {
      "name": "dithi",
      "email": "kungfoobar@gmail.com"
    },
    {
      "name": "pixelements",
      "email": "julio@pixelements.net"
    }
  ],
  "readme": "# Myou\r\n\r\nMyou is a __game engine for web__, it features an __editor based on Blender__\r\n(It will be added soon).\r\n\r\nIt is built as a platform with __collaborative__ groups in mind, enabling a fast working environment which allows editing, prototyping, testing and also deployment of both __2D__ and __3D__ interactive content.\r\n\r\nThe __simplicity__ of Myou allows it to be suitable for people with or without any technical knowledge or a background in programming.\r\n\r\nIn the future the optimizations for __VR__ together with __Blender__ integration makes Myou inherently excellent for making __animated VR movies__ and engaging, interactive game cutscenes.\r\n\r\nMyou is being used on some projects such as: [VidaBody](http://vidasystems.com/vidabody/) or [pixelements.net] (http://pixelements.net)\r\n\r\nThe first version of myou engine was written on Pyva (a python based languaje) and compiled to a javascript file.\r\n\r\nThis version of the myou engine has been ported to coffee-script and modified to\r\nget it working as a node package. The node version of myou also allows the creation of\r\nmultiple instances of the engine.\r\n\r\n## Features\r\n* Blender exporter plugin\r\n* Meshes with n-gons in a fast and compact binary format.\r\n* Blender GLSL materials (plus some additional features available as material nodes).\r\n* Soft shadows.\r\n* Armatures with constraints (including IK).\r\n* Shape keys.\r\n* Animation of any attribute, including any material parameters\r\n* Support for armature and material drivers from Blender.\r\n* Automatic LoD based on multi-resolution, subsurf and decimation.\r\n* Dynamic loading of assets without framerate reduction (even in WebGL).\r\n* Physics: Currently Bullet (ammo.js when running in JS) is supported.\r\n* Multiple self-contained engine instances are allowed on the same webpage.\r\n* Multi-touch gestures (Only in chrome. Other browsers support will be added soon).\r\n* VR support.\r\n\r\n\r\n## Future features\r\n* Physics: Cannon.js and Box2D engines will be suported soon.\r\n* Debug server with live update of all scene data within Blender.\r\n* 2D tools with SVG group separation for animation.\r\n* Graphical programming of game logic with nodes, which is converted to code\r\nyou can learn from or expand.\r\n* Generic and xInput Joystics.\r\n\r\n\r\n## Supported platforms\r\nWeb browsers with __WebGL__ support (no plugins required).\r\n\r\nIn the future, Windows (DirectX), Linux, Mac, Android, iOS and SteamOS\r\nand game consoles will be supported.\r\n\r\n-----\r\n## Usage\r\n### Install the pagckage\r\n```\r\nnpm install --save myou-engine\r\n```\r\n\r\n### Install the blender plugin\r\nThe blender plugin is fully supported in __Blender 2.71__.\r\n__Blender 2.77__ is partially supported and is very unestable.\r\nWe are currently porting the plugin to __Blender 2.78__.\r\n\r\nOnly the exporter is available on the blender plugin but the live server and other\r\ntools will be added soon.\r\n\r\nTo install the blender plugin just copy the __myou_bl_plugin__ folder to the __blender addons__ folder (or link it, see below).\r\n\r\n#### Blender addons folders\r\n\r\nWindows\r\n```\r\nC:\\Users\\%username%\\AppData\\Roaming\\Blender Foundation\\Blender\\2.71\\scripts\\addons\r\n```\r\n\r\nLinux\r\n```\r\n/home/$user/.config/blender/$version/scripts/addons\r\n```\r\n\r\n#### (optional) Linking myou_bl_plugin to blender addons folder instead of copying\r\n\r\nWindows (cmd)\r\n```\r\nmklink /j \"%APPDATA%/Blender Foundation/Blender/2.71/scripts/addons/myou_bl_plugin\" \"[Path to myou_engine]/myou_bl_plugin\"\r\n```\r\n\r\nWindows (cygwin)\r\n```\r\n cmd /c mklink /j \"%APPDATA%/Blender Foundation/Blender/2.71/scripts/addons/myou_bl_plugin\" \"[Path to myou_engine]/myou_bl_plugin\"\r\n```\r\n\r\nLinux\r\n```\r\nln -s \"[path to myou_engine]/myou_bl_plugin\" \"/home/$user/.config/blender/2.71/scripts/addons\"\r\n```\r\n\r\n### Export your blender scene\r\nThe exporter is available here: *__File > Export > Myou engine__*\r\n\r\n### Use the package in your code\r\nThe example code in this page was written in coffee-script:\r\n```coffee-script\r\nMyouEngine = require 'myou-engine'\r\n```\r\n\r\n#### Define the root element\r\nThis element is used to capture the mouse and keyboard events.\r\n\r\nYou can use a canvas as root element, but if you will use an HTML based UI in\r\nyou game we recommend to create the canvas inside the root element.\r\n\r\n```coffee-script\r\nroot  = document.getElementById 'app'\r\n```\r\n\r\n#### Create a canvas.\r\nYou can create a canvas by yourself, but this function creates and configures\r\nthe canvas directly to be used on myou.\r\n\r\n```coffee-script\r\nMyouEngine.create_canvas root\r\n```\r\nThe \"create_canvas\" function returns a canvas, but if you set the root element\r\nas parameter the canvas will also be inserted on it.\r\n\r\n#### Api configuration\r\nYou can set some parameters to configure myou's behaviour.\r\n\r\n```coffee-script\r\nMYOU_PARAMS =\r\n    debug: false # If true, it enables the debug features\r\n    data_dir: \"./data\" # Path to the folder exported from blender that contains <scenes> and <texture> folders\r\n    inital_scene: \"\" # If present, it will load this scene at the beginning. (deprecated option)\r\n    load_physics_engine: true # if true, it will load the physic engine (Ammo.js).\r\n    no_mipmaps: false # If true, it disables the mipmaps\r\n    no_s3tc: true # Disable s3tc support\r\n```\r\nThe boolean options are optional, false by default.\r\n\r\n#### Create a myou instance and load the scene and objects\r\nThe myou object contains the scenes, game objects, MYOU_PARAMS, render manager, etc.\r\n```coffee-script\r\nmyou = new myou.Myou root, MYOU_PARAMS\r\n```\r\nYou can create any number of myou engine instances in your project but you will\r\nneed to create a root element for each of the instances.\r\n\r\nWe now proceed to load the scene and objects. The load_* functions returns a promise,\r\nso we need to chain them in order to ensure they're available\r\n\r\n```coffee-script\r\nmyou.load_scene('Scene').then (scene) ->\r\n    console.log 'Scene has loaded and all objects exist, but meshes are not loaded'\r\n    scene.load_visible_objects().then ->\r\n        console.log 'All visible objects have loaded, now we enable the scene'\r\n        scene.enable_render()\r\n        scene.enable_physics()\r\n\r\n    # Instead of load_visible_objects(), you can load all objects\r\n    scene.load_all_objects().then ->\r\n\r\n    # or you can load specific objects ->\r\n    scene.load_objects([scene.objects.Cube]).then ->\r\n```\r\n\r\n## Documentation\r\nWe are working on the documentation. It will be added soon.\r\n\r\n## Examples\r\nTry it from:\r\n<http://pixelements.net/myou/examples/>\r\n\r\nTo run the example locally, you can choose one of these two alternatives:\r\n\r\n1. From the browser using __Webpack__\r\n\r\n    ```\r\n    cd [myou-engine]/examples/[example]\r\n    webpack\r\n    node run_server.js\r\n    ```\r\n\r\n    Alternatively, you can configure your browser to allow file access to avoid using the server.\r\n\r\n2. Natively using __Electron__\r\n\r\n    ```\r\n    cd [myou-engine]/examples/[example]\r\n    node electron_launcher.js\r\n    ```\r\n\r\n## Feedback\r\n\r\nYou can send any feedback or question to:\r\n* Julio Manuel López <julio@pixlements.net>\r\n* Alberto Torres Ruiz <kungfoobar@gmail.com>\r\n"
}