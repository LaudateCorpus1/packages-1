{
  "name": "angular-electron",
  "version": "0.2.1",
  "description": "angularjs helpers for electron apps",
  "repository": {
    "user": "ozsay",
    "repo": "angular-electron",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/ozsay/angular-electron/tarball/master",
    "clone_url": "https://github.com/ozsay/angular-electron",
    "https_url": "https://github.com/ozsay/angular-electron",
    "travis_url": "https://travis-ci.org/ozsay/angular-electron",
    "zip_url": "https://github.com/ozsay/angular-electron/archive/master.zip",
    "api_url": "https://api.github.com/repos/ozsay/angular-electron"
  },
  "main": "index.js",
  "keywords": [
    "angular",
    "angularjs",
    "electron"
  ],
  "author": {
    "name": "Oz Sayag"
  },
  "license": "MIT",
  "homepage": "https://github.com/ozsay/angular-electron",
  "dependencies": {
    "angular": "^1.2.29"
  },
  "devDependencies": {
    "gulp": "^3.9.0",
    "gulp-concat": "^2.6.0",
    "gulp-insert": "^0.5.0",
    "gulp-uglify": "^1.4.2"
  },
  "gitHead": "47f226e4e30aea3dabc00eec8bca754f886455da",
  "scripts": {},
  "_npmVersion": "2.14.15",
  "_nodeVersion": "5.2.0",
  "dist": {
    "shasum": "2681bce52692065a085e0872a05a5042821f68dc",
    "tarball": "http://registry.npmjs.org/angular-electron/-/angular-electron-0.2.1.tgz"
  },
  "stars": 1,
  "versions": [
    {
      "number": "0.1.0",
      "date": "2015-10-29T22:29:51.631Z"
    },
    {
      "number": "0.1.1",
      "date": "2015-10-29T22:42:19.617Z"
    },
    {
      "number": "0.1.2",
      "date": "2015-10-29T22:48:52.858Z"
    },
    {
      "number": "0.1.3",
      "date": "2015-10-29T23:20:23.032Z"
    },
    {
      "number": "0.1.4",
      "date": "2015-10-29T23:26:51.980Z"
    },
    {
      "number": "0.1.5",
      "date": "2015-10-30T12:33:45.384Z"
    },
    {
      "number": "0.1.6",
      "date": "2015-10-30T13:43:45.166Z"
    },
    {
      "number": "0.1.7",
      "date": "2015-10-30T13:48:34.364Z"
    },
    {
      "number": "0.1.8",
      "date": "2015-10-30T13:55:05.449Z"
    },
    {
      "number": "0.1.9",
      "date": "2015-10-30T14:39:02.770Z"
    },
    {
      "number": "0.1.10",
      "date": "2015-10-30T14:41:39.190Z"
    },
    {
      "number": "0.1.11",
      "date": "2015-11-05T13:53:18.939Z"
    },
    {
      "number": "0.2.0",
      "date": "2015-12-14T13:53:49.741Z"
    },
    {
      "number": "0.2.1",
      "date": "2016-01-22T12:41:43.270Z"
    }
  ],
  "created": "2015-10-29T22:29:51.631Z",
  "modified": "2016-01-22T12:41:43.270Z",
  "lastPublisher": {
    "name": "ozsay",
    "email": "ozsayag@gmail.com"
  },
  "owners": [
    {
      "name": "ozsay",
      "email": "ozsayag@gmail.com"
    }
  ],
  "readme": "# angular-electron\n\nangularjs helpers for electron apps\n\n## Installation\n\n```bash\nnpm install angular-electron\n```\n\n```bash\nbower install angular-electron\n```\n\n> Use 0.1.x for electron < 0.35.0 and 0.2.x for electron > 0.35.0\n\n## Usage\n\n```html\n<body>\n   <script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.3.15/angular.min.js\"></script>\n   <script src=\"angular-electron.js\"></script>\n </body>\n```\n\n```js\nangular.module('myModule', ['angular-electron']);\n```\n\n## API\n\n### renderer modules\n\nThese are all the **renderer modules** that are available as angular services:\n\n`desktopCapturer, ipcRenderer, webFrame, clipboard, crashReporter, nativeImage, screen, shell`\n\nTo use them, simply inject them to your components:\n\n```js\nangular.module('myModule').controller('myCtrl', ['shell', function(shell) {\n  shell.showItemInFolder(pathToItem);\n}]);\n```\n\n### remote and node modules\n\nThese are all the **main modules** that are available as angular services:\n\n`app, autoUpdater, BrowserWindow, contentTracing, dialog, globalShortcut, Menu, MenuItem, powerMonitor,\npowerSaveBlocker, protocol, webContents, tray`\n\n**Node modules**:\n\n`buffer, child_process, cluster, crypto, dns, events, fs, http, https, net, os, path, punycode,\nquerystring, readline, stream, string_decoder, tls, dgram, url, util, v8, vm, zlib`\n\n> All of the modules are lazy required (required only on use).\n\n### remoteProvider\n\nIn order to use a node package (e.g. moment), use the remoteProvider to\nregister the package to an angular service.\n\n```js\nangular.module('myModule').config(['remoteProvider', function(remoteProvider) {\n  remoteProvider.register('moment');\n}]);\n```\n\nor\n\n```js\nangular.module('myModule').config(['remoteProvider', function(remoteProvider) {\n  remoteProvider.register({name: 'newName', require: 'moment'});\n}]);\n```\n\nthen inject it as a regular service\n\n```js\nangular.module('myModule').controller('myCtrl', ['moment', function(moment) {\n\n}]);\n```\n\nor\n\n```js\nangular.module('myModule').controller('myCtrl', ['newName', function(moment) {\n\n}]);\n```\n\nYou can also register a module by function:\n\n```js\nangular.module('myModule').config(['remoteProvider', function(remoteProvider) {\n  remoteProvider.register('exec', function(remote) {\n    return remote.require('child_process').exec;\n  });\n}]);\n```\n\nthen use it\n\n```js\nangular.module('myModule').controller('myCtrl', ['exec', function(exec) {\n    exec('ls');\n}]);\n```\n\n### process objects\n\nelectron process objects are available as angularjs constants.\n\n```js\nangular.module('myModule').controller('myCtrl', ['process', 'remoteProcess',\nfunction(process, remoteProcess) {\n\n}]);\n```\n\n### current window\n\nThe current window is also available as angularjs constant.\n\n```js\nangular.module('myModule').controller('myCtrl', ['currentWindow',\nfunction(currentWindow) {\n\n}]);\n```\n\n### current web contents\n\nThe current web contents module is also available as angularjs constant.\n\n```js\nangular.module('myModule').controller('myCtrl', ['currentWebContents',\nfunction(currentWebContents) {\n\n}]);\n```\n\n### external link\n\nThis is a directive which opens a link in the default desktop browser.\n\n```html\n<a href=\"https://google.com\" external-link>google</a>\n<button external-link=\"https://google.com\">google</button>\n```\n\n### safe shutdown\n\nsafe shutdown is a service which handles pre-shudown actions.\n\n```js\nangular.module('myModule').controller('myCtrl', ['safeShutdown',\nfunction(safeShutdown) {\n  safeShutdown.register(function() {\n    logout();\n  });\n}]);\n```\n\n> The function can return a promise to handle async operations.\n\n> You can register multiple functions\n\nThen use `currentWindow.safeReload` or `app.safeQuit` to reload/quit your app.\n\n> These methods are available only after safeShutdown is instantiated.\n"
}