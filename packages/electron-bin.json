{
  "name": "electron-bin",
  "version": "0.37.3",
  "description": "Install electron prebuilt binaries for the command-line use using npm",
  "author": {
    "name": "David Wisner",
    "email": "dwisner6@gmail.com",
    "url": "http://RnbWd.com"
  },
  "repository": {
    "user": "RnbWd",
    "repo": "electron-bin",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/RnbWd/electron-bin/tarball/master",
    "clone_url": "https://github.com/RnbWd/electron-bin",
    "https_url": "https://github.com/RnbWd/electron-bin",
    "travis_url": "https://travis-ci.org/RnbWd/electron-bin",
    "zip_url": "https://github.com/RnbWd/electron-bin/archive/master.zip",
    "api_url": "https://api.github.com/repos/RnbWd/electron-bin"
  },
  "scripts": {
    "cache-clean": "rm -rf ~/.electron && rm -rf dist",
    "postinstall": "node install.js",
    "pretest": "npm run cache-clean && node install.js",
    "test": "standard && tape test/*.js"
  },
  "bin": {
    "electron": "cli.js"
  },
  "main": "index.js",
  "dependencies": {
    "extract-zip": "^1.0.3",
    "electron-download": "^2.0.0"
  },
  "devDependencies": {
    "home-path": "^0.1.1",
    "path-exists": "^1.0.0",
    "standard": "^5.4.1",
    "tape": "^3.0.1"
  },
  "keywords": [
    "electron",
    "electron bin",
    "electron-bin"
  ],
  "license": "MIT",
  "publishConfig": {
    "registry": "https://registry.npmjs.org"
  },
  "gitHead": "80df4f4ee25475319b119fda21c08b58aea8a9cd",
  "homepage": "https://github.com/RnbWd/electron-bin#readme",
  "_npmVersion": "3.8.5",
  "_nodeVersion": "5.9.1",
  "dist": {
    "shasum": "f3078154c6a6a5b464ee6fc1cbf43c9933132df8",
    "tarball": "http://registry.npmjs.org/electron-bin/-/electron-bin-0.37.3.tgz"
  },
  "stars": 0,
  "versions": [
    {
      "number": "0.0.1",
      "date": "2015-05-06T23:16:38.663Z"
    },
    {
      "number": "0.1.0",
      "date": "2015-05-06T23:18:54.021Z"
    },
    {
      "number": "0.1.1",
      "date": "2015-05-06T23:23:33.832Z"
    },
    {
      "number": "0.1.2",
      "date": "2015-05-06T23:26:20.281Z"
    },
    {
      "number": "0.1.3",
      "date": "2015-05-06T23:26:57.856Z"
    },
    {
      "number": "0.1.4",
      "date": "2015-05-06T23:30:31.454Z"
    },
    {
      "number": "0.1.5",
      "date": "2015-05-07T00:42:33.801Z"
    },
    {
      "number": "0.2.1",
      "date": "2015-05-07T05:39:39.360Z"
    },
    {
      "number": "0.2.2",
      "date": "2015-05-07T05:57:25.041Z"
    },
    {
      "number": "0.2.4",
      "date": "2015-05-07T10:28:14.715Z"
    },
    {
      "number": "0.2.5",
      "date": "2015-05-07T23:44:55.852Z"
    },
    {
      "number": "0.2.6",
      "date": "2015-05-08T13:13:31.591Z"
    },
    {
      "number": "0.25.0",
      "date": "2015-05-12T22:14:41.961Z"
    },
    {
      "number": "0.25.1",
      "date": "2015-05-12T22:15:34.933Z"
    },
    {
      "number": "0.25.2",
      "date": "2015-05-12T22:29:11.044Z"
    },
    {
      "number": "0.25.3",
      "date": "2015-05-12T22:30:00.797Z"
    },
    {
      "number": "0.26.0",
      "date": "2015-05-12T22:30:31.769Z"
    },
    {
      "number": "0.26.0-1",
      "date": "2015-05-12T22:47:04.493Z"
    },
    {
      "number": "0.37.2",
      "date": "2016-03-20T10:11:38.075Z"
    },
    {
      "number": "0.37.3",
      "date": "2016-03-27T18:50:45.651Z"
    }
  ],
  "created": "2015-05-06T23:16:38.663Z",
  "modified": "2016-03-27T18:50:45.651Z",
  "lastPublisher": {
    "name": "rnbwd",
    "email": "dwisner6@gmail.com"
  },
  "owners": [
    {
      "name": "rnbwd",
      "email": "dwisner6@gmail.com"
    }
  ],
  "readme": "# electron-bin\n\n[![build status](http://img.shields.io/travis/RnbWd/electron-bin.svg?style=flat)](http://travis-ci.org/RnbWd/electron-bin)\n\n[![badge](https://nodei.co/npm/electron-bin.png?downloads=true)](https://www.npmjs.com/package/electron-bin)\n\n** just a clone of [electron-prebuilt](https://github.com/electron-userland/electron-prebuilt) **\n\nInstall [electron](https://github.com/atom/electron) bin binaries for command-line use using npm. This module helps you easily install the `electron` command for use on the command line without having to compile anything.\n\nElectron is a JavaScript runtime that bundles Node.js and Chromium. You use it similar to the `node` command on the command line for executing JavaScript programs. For more info you can read [this intro blog post](http://maxogden.com/electron-fundamentals.html) or dive into the [Electron documentation](https://github.com/atom/electron/tree/master/docs)\n\n## Installation\n\nDownload and install the latest build of electron for your OS and add it to your projects `package.json` as a `devDependency`:\n\n```\nnpm install electron-bin --save-dev\n```\n\nThis is the preferred way to use electron, as it doesn't require users to install electron globally.\n\nYou can also use the `-g` flag (global) to symlink it into your PATH:\n\n```\nnpm install -g electron-bin\n```\n\nIf that command fails with an `EACCESS` error you may have to run it again with `sudo`:\n\n```\nsudo npm install -g electron-bin\n```\n\nNow you can just run `electron` to run electron:\n\n```\nelectron\n```\n\nIf you need to use an HTTP proxy you can [set these environment variables](https://github.com/request/request/tree/f0c4ec061141051988d1216c24936ad2e7d5c45d#controlling-proxy-behaviour-using-environment-variables)\n\nIf you want to change the architecture that is downloaded (e.g., `ia32` on an `x64` machine), you can use the `--arch` flag with npm install or set the `npm_config_arch` environment variable:\n```\nnpm install --arch=ia32 electron-bin\n```\n\n## About\n\nWorks on Mac, Windows and Linux OSes that Electron supports (e.g. Electron [does not support Windows XP](https://github.com/atom/electron/issues/691)).\n\nThe version numbers of this module match the version number of the [offical Electron releases](https://github.com/atom/electron/releases), which do not follow [semantic versioning](http://semver.org/).\n\nThis module is automatically released whenever a new version of Electron is released thanks to [electron-bin-updater](https://github.com/johnmuhl/electron-prebuilt-updater) written by [John Muhl](https://github.com/johnmuhl/).\n\n\n## Usage\n\nFirst you have to [write an electron application](https://github.com/atom/electron/blob/master/docs/tutorial/quick-start.md)\n\nThen you can run your app using:\n\n```\nelectron your-app/\n```\n\n## Related modules\n\n- [electron-packager](https://github.com/electron-userland/electron-packager) - package and distribute your electron app in OS executables (.app, .exe etc)\n- [electron-builder](https://github.com/loopline-systems/electron-builder) - create installers for Windows and OS X. It's built to work together with electron-packager\n- [menubar](https://github.com/maxogden/menubar) - high level way to create menubar desktop applications with electron\n\nFind more at the [awesome-electron](https://github.com/sindresorhus/awesome-electron) list\n\n## Programmatic usage\n\nMost people use this from the command line, but if you require `electron-bin` inside your node app it will return the file path to the binary.\nUse this to spawn electron from node scripts.\n\n``` js\nvar electron = require('electron-bin')\nvar proc = require('child_process')\n\n// will something similar to print /Users/maf/.../Electron\nconsole.log(electron)\n\n// spawn electron\nvar child = proc.spawn(electron)\n```\n"
}