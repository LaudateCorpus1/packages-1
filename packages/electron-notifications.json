{
  "name": "electron-notifications",
  "version": "0.1.1",
  "description": "A node module for sending notifications in electron applications",
  "main": "index.js",
  "scripts": {
    "playbook": "electron playbook/main.js",
    "lint": "standard"
  },
  "keywords": [
    "electron",
    "notification",
    "notification center",
    "toaster",
    "growl",
    "notify-send",
    "terminal-notifier",
    "notify"
  ],
  "repository": {
    "user": "blainesch",
    "repo": "electron-notifications",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/blainesch/electron-notifications/tarball/master",
    "clone_url": "https://github.com/blainesch/electron-notifications",
    "https_url": "https://github.com/blainesch/electron-notifications",
    "travis_url": "https://travis-ci.org/blainesch/electron-notifications",
    "zip_url": "https://github.com/blainesch/electron-notifications/archive/master.zip",
    "api_url": "https://api.github.com/repos/blainesch/electron-notifications"
  },
  "author": {
    "name": "Blaine Schmeisser"
  },
  "license": "MIT",
  "standard": {
    "globals": [
      "CodeMirror"
    ],
    "ignore": [
      "playbook/assets/vendor"
    ]
  },
  "devDependencies": {
    "electron": "^1.3.4",
    "standard": "^8.0.0"
  },
  "gitHead": "25a53b3eba90a869208305597103854b8b51edb6",
  "homepage": "https://github.com/blainesch/electron-notifications#readme",
  "_npmVersion": "3.10.3",
  "_nodeVersion": "6.3.0",
  "dist": {
    "shasum": "4bfad992072ce523add2ffd7cb4c1b536b13fadc",
    "tarball": "http://registry.npmjs.org/electron-notifications/-/electron-notifications-0.1.1.tgz"
  },
  "stars": 6,
  "versions": [
    {
      "number": "0.0.1",
      "date": "2016-04-18T22:11:58.922Z"
    },
    {
      "number": "0.0.2",
      "date": "2016-04-18T22:13:22.086Z"
    },
    {
      "number": "0.0.3",
      "date": "2016-04-18T22:41:14.906Z"
    },
    {
      "number": "0.1.0",
      "date": "2016-08-28T19:04:23.343Z"
    },
    {
      "number": "0.1.1",
      "date": "2016-09-24T15:35:43.904Z"
    }
  ],
  "created": "2016-04-18T22:11:58.922Z",
  "modified": "2016-10-31T22:48:58.683Z",
  "lastPublisher": {
    "name": "blainesch",
    "email": "blainesch@gmail.com"
  },
  "owners": [
    {
      "name": "blainesch",
      "email": "blainesch@gmail.com"
    }
  ],
  "readme": "## Electron Notifications\n\nA node module for sending notifications in electron applications.\n\n![screenshot](assets/screenshot.png)\n\n## Quick Usage\n\n~~~ javascript\nconst notifier = require('electron-notifications')\n\n// Just title\nnotifier.notify('Calendar')\n\n// Full Options\nnotifier.notify('Calendar', {\n  message: 'Event begins in 10 minutes',\n  icon: 'http://cl.ly/J49B/3951818241085781941.png',\n  buttons: ['Dismiss', 'Snooze'],\n})\n~~~\n\n## Installation\n\n~~~\nnpm install --save electron-notifications\n~~~\n\n## Playbook\n\nIf you'd like to see this in action you can run the playbook and try out live\nexamples and edit the code in place.\n\n~~~\ngit clone git@github.com:blainesch/electron-notifications.git\nnpm run playbook\n~~~\n\n## Introduction\n\nWhen you create a new notification, your notification is queued, since we only\ndisplay one at a time. Each notification is a [BrowserWindow](browserwindow)\ninstance, so it's completely cross platform.\n\n## Options\n\nAll options are optional.\n\n* `message`: A message to display under the title.\n* `icon`: The absolute URL of a icon displayed to the left of the text.\n* `buttons`: One or two buttons to display on the right of the notification.\n* `vertical`: Boolean (default: false) that specifies that the buttons should be stacked vertically.\n\n## Events\n\nIn addition to the [events provided by electron](events) you also have access to\nthe following 3 additional events.\n\n\n### Clicked\n\nWhen the notification was clicked, but not dragged. This usually does the\ndefault action, or closes the notification.\n\n~~~ javascript\nconst notification = notifier.notify('Calendar')\n\nnotification.on('clicked', () => {\n  notification.close()\n})\n~~~\n\n### Swiped Right\n\nWhen the notification has been swiped to the right. This usually indicates that\nthe user wants to dismiss the notification.\n\n~~~ javascript\nconst notification = notifier.notify('Calendar')\n\nnotification.on('swipedRight', () => {\n  notification.close()\n})\n~~~\n\n### Button Clicked\n\nWhen any one of the buttons are clicked, it'll trigger a `buttonClicked` event,\nand pass the text that was clicked to the handler.\n\n~~~ javascript\nconst notification = notifier.notify('Calendar', {\n  buttons: ['Dismiss', 'Snooze'],\n})\n\nnotification.on('buttonClicked', (text) => {\n  if (text === 'Snooze') {\n    // Snooze!\n  }\n  notification.close()\n})\n~~~\n\n[events]: https://github.com/electron/electron/blob/master/docs/api/browser-window.md#events\n[browserwindow]: https://github.com/electron/electron/blob/master/docs/api/browser-window.md\n"
}