{
  "name": "rtcninja-js-sl",
  "version": "0.7.0",
  "description": "WebRTC API wrapper to deal with different browsers",
  "author": {
    "name": "Iñaki Baz Castillo",
    "email": "inaki.baz@eface2face.com",
    "url": "http://eface2face.com"
  },
  "contributors": [
    {
      "name": "Jesús Pérez",
      "email": "jesus.perez@eface2face.com"
    }
  ],
  "license": "MIT",
  "main": "lib/rtcninja.js",
  "homepage": "https://github.com/BigFluffyTRex/rtcninja-js-sl",
  "repository": {
    "user": "BigFluffyTRex",
    "repo": "rtcninja-js-sl",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/BigFluffyTRex/rtcninja-js-sl/tarball/master",
    "clone_url": "https://github.com/BigFluffyTRex/rtcninja-js-sl",
    "https_url": "https://github.com/BigFluffyTRex/rtcninja-js-sl",
    "travis_url": "https://travis-ci.org/BigFluffyTRex/rtcninja-js-sl",
    "zip_url": "https://github.com/BigFluffyTRex/rtcninja-js-sl/archive/master.zip",
    "api_url": "https://api.github.com/repos/BigFluffyTRex/rtcninja-js-sl"
  },
  "keywords": [
    "webrtc"
  ],
  "engines": {
    "node": ">=0.10.32"
  },
  "dependencies": {
    "sdp-interop-sl": "^0.2.0",
    "bowser": "^1.0.0",
    "debug": "^2.2.0",
    "merge": "^1.2.0"
  },
  "devDependencies": {
    "browserify": "^13.0.0",
    "gulp": "git+https://github.com/gulpjs/gulp.git#4.0",
    "gulp-expect-file": "0.0.7",
    "gulp-filelog": "^0.4.1",
    "gulp-header": "^1.7.1",
    "gulp-jscs": "^3.0.2",
    "gulp-jscs-stylish": "^1.1.2",
    "gulp-jshint": "^2.0.0",
    "gulp-rename": "^1.2.2",
    "gulp-uglify": "^1.5.2",
    "jshint-stylish": "^2.0.1",
    "vinyl-source-stream": "^1.1.0"
  },
  "dist": {
    "shasum": "a44a70d94bd9ab5fa27ac4ca2cfba4926831f2f1",
    "tarball": "http://registry.npmjs.org/rtcninja-js-sl/-/rtcninja-js-sl-0.7.0.tgz"
  },
  "_npmVersion": "1.3.6",
  "versions": [
    {
      "number": "0.1.0",
      "date": "2016-04-15T11:25:41.137Z"
    },
    {
      "number": "0.7.0",
      "date": "2016-04-18T09:44:39.838Z"
    }
  ],
  "created": "2016-04-15T11:25:41.137Z",
  "modified": "2016-04-18T09:44:39.838Z",
  "lastPublisher": {
    "name": "bigfluffytrex",
    "email": "rob.taylor@starleaf.com"
  },
  "owners": [
    {
      "name": "bigfluffytrex",
      "email": "rob.taylor@starleaf.com"
    }
  ],
  "readme": "# rtcninja.js <img src=\"http://www.pubnub.com/blog/wp-content/uploads/2014/01/google-webrtc-logo.png\" height=\"30\" width=\"30\">\n\nWebRTC API wrapper to deal with different browsers transparently, [eventually](http://iswebrtcreadyyet.com/) this library shouldn't be needed. We only have to wait until W3C group in charge [finishes the specification](https://tools.ietf.org/wg/rtcweb/) and the different browsers implement it correctly :sweat_smile:.\n\n<img src=\"http://images4.fanpop.com/image/photos/21800000/browser-fight-google-chrome-21865454-600-531.jpg\" height=\"250\" width=\"250\">\n\nSupported environments:\n* [Google Chrome](https://www.google.com/chrome/browser/desktop/index.html) (desktop & mobile)\n* [Google Canary](https://www.google.com/chrome/browser/canary.html) (desktop & mobile)\n* [Mozilla Firefox](https://www.mozilla.org/en-GB/firefox/new) (desktop & mobile)\n* [Firefox Nigthly](https://nightly.mozilla.org/) (desktop & mobile)\n* [Opera](http://www.opera.com/)\n* [Vivaldi](https://vivaldi.com/)\n* [CrossWalk](https://crosswalk-project.org/)\n* [Cordova](http://cordova.apache.org/): iOS support, you only have to use our plugin [following these steps](https://github.com/eface2face/cordova-plugin-iosrtc#usage).\n* [NW.js](https://github.com/nwjs/nw.js/)\n* [Electron](https://github.com/atom/electron)\n\n\n## Installation\n\n### **npm**:\n\n```bash\n$ npm install rtcninja\n```\n\nand then:\n\n```javascript\nvar rtcninja = require('rtcninja');\n```\n\n### **bower**:\n\n```bash\n$ bower install rtcninja\n```\n\n\n## Browserified library\n\nTake a browserified version of the library from the `dist/` folder:\n\n* `dist/rtcninja.js`: The uncompressed version.\n* `dist/rtcninja.min.js`: The compressed production-ready version.\n\nThey expose the global `window.rtcninja` module.\n\n\n## Usage\n\nIn the [examples](./examples/) folder we provide a complete one.\n\n```javascript\n// Must first call it.\nrtcninja();\n\n// Then check.\nif (rtcninja.hasWebRTC()) {\n    // Do something.\n}\nelse {\n    // Do something.\n}\n```\n\n\n## Documentation\n\nYou can read the full [API documentation](docs/index.md) in the docs folder.\n\n\n## Issues\n\nhttps://github.com/eface2face/rtcninja.js/issues\n\n\n## Developer guide\n\n* Create a branch with a name including your user and a meaningful word about the fix/feature you're going to implement, ie: \"jesusprubio/fixstuff\"\n* Use [GitHub pull requests](https://help.github.com/articles/using-pull-requests).\n* Conventions:\n * We use [JSHint](http://jshint.com/) and [Crockford's Styleguide](http://javascript.crockford.com/code.html).\n * Please run `grunt lint` to be sure your code fits with them.\n\n\n### Debugging\n\nThe library includes the Node [debug](https://github.com/visionmedia/debug) module. In order to enable debugging:\n\nIn Node set the `DEBUG=rtcninja*` environment variable before running the application, or set it at the top of the script:\n\n```javascript\nprocess.env.DEBUG = 'rtcninja*';\n```\n\nIn the browser run `rtcninja.debug.enable('rtcninja*');` and reload the page. Note that the debugging settings are stored into the browser LocalStorage. To disable it run `rtcninja.debug.disable('rtcninja*');`.\n\n\n## Copyright & License\n\n* eFace2Face Inc.\n* [MIT](./LICENSE)\n"
}