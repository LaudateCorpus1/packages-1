{
  "name": "dps",
  "version": "1.0.1",
  "description": "data per second (a data package system)",
  "main": "index.js",
  "scripts": {
    "start": "electron menubar.js 2>&1 | silence-chromium"
  },
  "bin": {
    "dps": "./cli.js"
  },
  "repository": {
    "user": "karissa",
    "repo": "dps",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/karissa/dps/tarball/master",
    "clone_url": "https://github.com/karissa/dps",
    "https_url": "https://github.com/karissa/dps",
    "travis_url": "https://travis-ci.org/karissa/dps",
    "zip_url": "https://github.com/karissa/dps/archive/master.zip",
    "api_url": "https://api.github.com/repos/karissa/dps"
  },
  "author": {
    "name": "Karissa McKelvey",
    "email": "karissa@karissamck.com",
    "url": "http://karissamck.com/"
  },
  "license": "ISC",
  "homepage": "https://github.com/karissa/dps",
  "dependencies": {
    "console.table": "^0.4.0",
    "debug": "^2.2.0",
    "got": "^4.1.1",
    "menubar": "^2.2.1",
    "page": "^1.6.3",
    "pretty-bytes": "^2.0.1",
    "progress": "^1.1.8",
    "pump": "^1.0.0",
    "ractive": "^0.7.3",
    "relative-date": "^1.1.2",
    "rimraf": "^2.4.3",
    "run-parallel": "^1.1.2",
    "silence-chromium": "^2.0.0",
    "subcommand": "^2.0.2"
  },
  "devDependencies": {
    "electron-prebuilt": "^0.33.0"
  },
  "gitHead": "57b4fcd50e1bbf462e0ad49a319d79f0d1b004df",
  "_npmVersion": "2.11.3",
  "_nodeVersion": "0.12.7",
  "dist": {
    "shasum": "035464e610efe8a6bd79fc60de33e2a5d27bb659",
    "tarball": "http://registry.npmjs.org/dps/-/dps-1.0.1.tgz"
  },
  "versions": [
    {
      "number": "1.0.0",
      "date": "2015-08-22T15:36:37.582Z"
    },
    {
      "number": "1.0.1",
      "date": "2015-09-22T09:20:23.337Z"
    }
  ],
  "created": "2015-08-22T15:36:37.582Z",
  "modified": "2015-09-22T09:20:23.337Z",
  "lastPublisher": {
    "name": "karissa",
    "email": "krmckelv@gmail.com"
  },
  "owners": [
    {
      "name": "karissa",
      "email": "krmckelv@gmail.com"
    }
  ],
  "readme": "# dps (data per second)\n\nSearch, manage, and update datasets. **This is mostly vaporware right now.**\n\nWith open data comes a price. Tracking and managing many urls from which you harvest data APIs can be a nightmare, let alone if you have custom scraping processes to clean that data! This will quickly become a desktop application that maps point-and-click functions to commandline features.\n\n## Example\n\n```\n$ dps add http://www.opendatacache.com/cookcounty.socrata.com/api/geospatial/26nm-wd5q\n{\n  path: 'http_wwwopendatacachecomcookcountysocratacomapigeospatial26nmwd5q',\n  location: 'http://www.opendatacache.com/cookcounty.socrata.com/api/geospatial/26nm-wd5q',\n  type: 'url',\n  meta: {\n    modified: Wed Jun 24 2015 14:52:26 GMT-0700 (PDT),\n    size: 618400,\n    checked: Tue Sep 22 2015 01:51:43 GMT-0700 (PDT)\n  }\n}\n```\n\n\n```\n$ dps add http://eukaryota.dathub.org/\nCloning http://eukaryota.dathub.org into http_eukaryotadathuborg...\nProgress:  [+2, -0] and 1 file(s).\nClone from remote to http_eukaryotadathuborg has completed.\n{\n  path: 'http_eukaryotadathuborg',\n  location: 'http://eukaryota.dathub.org',\n  type: 'dat',\n  meta: {\n    modified: Mon Sep 21 2015 21:07:41 GMT-0700 (PDT),\n    checked: Tue Sep 22 2015 01:52:57 GMT-0700 (PDT),\n    size: 4059\n  }\n}\n```\n\nSee status:\n```\n$ dps status\nhttp://www.opendatacache.com/cookcounty.socrata.com/api/geospatial/26nm-wd5q\n  checked: 3 minutes ago  modified: 3 months ago  size: 618.4 kB\n\nhttp://localhost:6442\n  checked: just now  modified: 5 hours ago  size: 4.06 kB\n```\n\nCheck the sources for updates.\n```\n$ dps check\nhttp://www.opendatacache.com/cookcounty.socrata.com/api/geospatial/26nm-wd5q\n  checked: just now  modified: 3 months ago  size: 618.4 kB\n\nhttp://localhost:6442\n  checked: just now  modified: 5 hours ago  size: 4.06 kB\n```\n\n## CLI api\n\n### `dps add <url>`\n  * name will be found through any 'tracked' registries.\n  * url could be the url of anything that gives data with HTTP GET (not in a tracked registry)\n  * auto-detects dat endpoints and tracks version changes\n  * `dps update/` will triger the re-download of this data\n\n### `dps update [dataset] [--trackers]`\n  * updates a given dataset, or all datasets.\n  * fetches the dataset via the given HTTP url\n  * `--trackers` updates only the trackers, not the data.\n\n### `dps status`\n  * see list of all tracked data\n  * --trackers lists only trackers\n\n### `dps destroy`\n  * removes everything, including the data!\n\n## federated search\n\n### `dps search <keyword>`\n  * does a search through the tracker metadata\n\n### `dps track <url>`\n  * add a tracker that will be searchable through 'dps search'\n\n### `dps publish <tracker> [-c <config-file>]`\n  * publish the metadata to the given tracker, including scripts to pull down data with `dat add`\n  * will use ./dps.json if config-file isn't specified\n\n## advanced/experimental\n\n### `dps add --exec=<script> <name>`\n  * will add a script, which should output data to stdout.\n  * referenced by given name\n  * `dps update` will trigger the re-running of this script\n\n### `dps mount [name] [--database=<name>] [--container=<container>]`\n  * if name not supplied, will mount all the datasets currently tracked by dps\n  * mounts the data in docker in the database of your choice. uses postgres by default\n  * must have docker4data installed\n  * can specify container\n"
}