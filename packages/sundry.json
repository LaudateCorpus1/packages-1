{
  "name": "sundry",
  "version": "0.3.3",
  "description": "A dynamically configurable, load balancing, reverse proxy.",
  "main": "index.js",
  "scripts": {
    "start": "node index.js",
    "test": "NODE_ENV=test mocha --ui bdd --reporter spec",
    "hint": "jshint ./**/*.js",
    "generateCA": "./npm_scripts/generateCA.sh"
  },
  "preferGlobal": "true",
  "bin": {
    "sundry": "cli/index.js"
  },
  "repository": {
    "user": "PaperElectron",
    "repo": "Sundry",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/PaperElectron/Sundry/tarball/master",
    "clone_url": "https://github.com/PaperElectron/Sundry",
    "https_url": "https://github.com/PaperElectron/Sundry",
    "travis_url": "https://travis-ci.org/PaperElectron/Sundry",
    "zip_url": "https://github.com/PaperElectron/Sundry/archive/master.zip",
    "api_url": "https://api.github.com/repos/PaperElectron/Sundry"
  },
  "keywords": [
    "router",
    "http",
    "proxy",
    "round-robin"
  ],
  "author": {
    "name": "Jim",
    "email": "monstertke@paperelectron.com",
    "url": "http://paperelectron.com/"
  },
  "license": "MIT",
  "homepage": "https://github.com/PaperElectron/Sundry",
  "dependencies": {
    "bluebird": "^2.9.30",
    "chalk": "^0.5.1",
    "commander": "^2.6.0",
    "cookies": "^0.5.0",
    "hiredis": "^0.4.0",
    "http-proxy": "^1.8.1",
    "inquirer": "^0.8.5",
    "lodash": "^3.1.0",
    "mkdirp": "^0.5.1",
    "redis": "^0.12.1",
    "sha.js": "^2.4.2",
    "var": "^0.1.3"
  },
  "devDependencies": {
    "chai": "^2.0.0",
    "jshint": "^2.6.0",
    "mocha": "^2.1.0",
    "rimraf": "^2.2.8"
  },
  "gitHead": "dd024b3869e226df4c06e32c22b3d2afcfcd75a6",
  "_npmVersion": "2.9.1",
  "_nodeVersion": "0.12.0",
  "dist": {
    "shasum": "5796e27a20ca5e110e75cab2da90f3d4b94ecb4e",
    "tarball": "http://registry.npmjs.org/sundry/-/sundry-0.3.3.tgz"
  },
  "versions": [
    {
      "number": "0.0.0",
      "date": "2015-05-26T03:40:01.712Z"
    },
    {
      "number": "0.0.14",
      "date": "2015-05-26T03:52:47.030Z"
    },
    {
      "number": "0.0.15",
      "date": "2015-05-26T04:01:27.888Z"
    },
    {
      "number": "0.0.16",
      "date": "2015-05-26T16:20:43.014Z"
    },
    {
      "number": "0.1.0",
      "date": "2015-06-08T19:49:50.041Z"
    },
    {
      "number": "0.1.1",
      "date": "2015-06-08T19:55:56.261Z"
    },
    {
      "number": "0.1.2",
      "date": "2015-06-08T20:12:40.492Z"
    },
    {
      "number": "0.3.0",
      "date": "2015-06-30T18:51:57.317Z"
    },
    {
      "number": "0.3.1",
      "date": "2015-07-07T19:05:27.982Z"
    },
    {
      "number": "0.3.2",
      "date": "2015-07-08T06:08:26.793Z"
    },
    {
      "number": "0.3.3",
      "date": "2015-07-08T06:20:46.102Z"
    }
  ],
  "created": "2015-05-26T03:40:01.712Z",
  "modified": "2015-07-08T06:20:46.102Z",
  "lastPublisher": {
    "name": "paperelectron",
    "email": "jim.bulkowski@paperelectron.com"
  },
  "owners": [
    {
      "name": "paperelectron",
      "email": "jim.bulkowski@paperelectron.com"
    }
  ],
  "readme": "# Sundry\n\n### The respectably rugged, remarkably reliable, reconfigurable, round-robin reverse proxy.\n\n#### Sundry is a caching, dynamically configurable, reverse proxy, written in NodeJS and backed by redis.\n\n[![NPM Version][npm-image]][npm-url]\n[![Linux][travis-image]][travis-url]\n\n### Cool Stuff\n* Dynamically add and remove hosts and backends with 0 downtime.\n* Wildcard https, http -> https redirect built in.\n* Centralize request logging and error handling without exposing backend errors.\n* Programically control backend access in real time.\n\n### Features\n* Separate CLI app to view and manage hosts and routes.\n* Really, Really fast, workload is very nearly 100% Asyncronous (Aside from a couple of ifs and assigments on each request)\n* System Daemon, can drop privleges to bind to ports 80 and 443, or use [Authbind](http://manpages.ubuntu.com/manpages/hardy/man1/authbind.1.html).\n\n## Installation and setup\n\n### Requirements\n\n* Redis server (with events enabled)\n  * Preferably local to the Sundry server, bare minimum on the local network.\n  * \"notify-keyspace-events\"\n  * With \"gsE\" events enabled.\n  * [More Info on Redis keyspace events](http://redis.io/topics/notifications)\n\n* NodeJS v.11.0 +\n* [AuthBind](http://manpages.ubuntu.com/manpages/hardy/man1/authbind.1.html) for port 80/443 bindings as non root user.\n* [Upstart](http://upstart.ubuntu.com/) for running as a system daemon.\n\n## Install Sundry\n\n#### Installation\n\n```shell\n$ npm install -g sundry\n```\n\n#### Configuration\nSundry relies on several configuration values, all of which can be provided in two ways.\n\n1. Enviornment Variables. (Useful for running as a system daemon)\n2. Values in $HOME/.sundry/config.json\n\nYou can generate a skeleton config by running...\n\n```shell\n$ sundry config build\n```\nThis will create `~/.sundry/`, `~/.sundry/ssl` and `~/.sundry/config.json`\n\n#### Default files\n\nSundry uses some generic files for its default host, 404 and 500 error pages.\nYou can override any of these by placing the correctly named file in\n`~/.sundry/html/<index/404/5xx>.html`\n\n## Run Sundry\n\n#### Production (some recent flavor of Ubuntu assumed.)\n###### Create a new system user\n```shell\n$ sudo adduser --disabled-password sundry\n```\n###### Build default config (Optional)\n```shell\n$ sudo su -- sundry\n$ sundry config build\n```\n\n###### Install/configure authbind\n```shell\n$ sudo apt-get install authbind\n$ sudo touch /etc/authbind/byport/80 /etc/authbind/byport/443\n$ sudo chown sundry:sundry /etc/authbind/byport/80 /etc/authbind/byport/443\n$ sudo chmod 755 /etc/authbind/byport/80 /etc/authbind/byport/443\n```\n\n###### Create sundry.conf upstart file.\n\n```shell\n$ sudo touch /etc/init/sundry.conf\n$ sudo <vi/emacs/nano/ed> /etc/init/sundry.conf\n# no flame wars here\n```\n\n```\ndescription \"Sundry Dynamic Router\"\nauthor      \"PaperElectron\"\n\nstart on (local-filesystems and net-device-up IFACE=eth0)\nstop on shutdown\n\n# Automatically Respawn:\nrespawn\nrespawn limit 5 60\n\nscript\n  export HOME=/home/sundry\n  export NODE_ENV=production\n  exec start-stop-daemon --start -u sundry --exec /usr/bin/authbind sundry start\nend script\n```\n#### Test / Development\n###### Generate a self signed cert.\nBrowsers will flag this as an insecure certificate.\n\n```shell\n$ cd ~/.sundry/ssl\n$ openssl genrsa -out key.pem 2048\n$ openssl req -new -key key.pem -out server.csr\n$ openssl x509 -req -days 365 -in server.csr -signkey key.pem -out cert.pem\n```\n\n[npm-image]: https://img.shields.io/npm/v/sundry.svg\n[npm-url]: https://www.npmjs.com/package/sundry\n[travis-image]: https://img.shields.io/travis/PaperElectron/Sundry/master.svg\n[travis-url]: https://travis-ci.org/PaperElectron/Sundry"
}