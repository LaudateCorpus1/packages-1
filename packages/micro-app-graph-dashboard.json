{
  "name": "micro-app-graph-dashboard",
  "version": "1.0.0",
  "description": "Dashboard to display graph data from sensors",
  "main": "lib/server.js",
  "scripts": {
    "start": "node lib/server.js",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "dependencies": {
    "micro-app-framework": "^0.1.3",
    "socket.io": "~1.3.7",
    "mqtt": "~1.6.3"
  },
  "repository": {
    "user": "mhdawson",
    "repo": "micro-app-graph-dashboard",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/mhdawson/micro-app-graph-dashboard/tarball/master",
    "clone_url": "https://github.com/mhdawson/micro-app-graph-dashboard",
    "https_url": "https://github.com/mhdawson/micro-app-graph-dashboard",
    "travis_url": "https://travis-ci.org/mhdawson/micro-app-graph-dashboard",
    "zip_url": "https://github.com/mhdawson/micro-app-graph-dashboard/archive/master.zip",
    "api_url": "https://api.github.com/repos/mhdawson/micro-app-graph-dashboard"
  },
  "keywords": [
    "iot",
    "mqtt",
    "dashboard",
    "graph",
    "micro-app",
    "sensor"
  ],
  "author": {
    "name": "Michael Dawson"
  },
  "license": "MIT",
  "homepage": "https://github.com/mhdawson/micro-app-graph-dashboard#readme",
  "contributors": [
    {
      "name": "Michael Dawson",
      "email": "mdawson@devrus.com"
    }
  ],
  "gitHead": "8629f915a51ffe494456f2f5ad8a804e6295f755",
  "_npmVersion": "2.14.12",
  "_nodeVersion": "4.2.4",
  "dist": {
    "shasum": "bf0f728273bf7494ab469852dcaae1ba8b1f52af",
    "tarball": "http://registry.npmjs.org/micro-app-graph-dashboard/-/micro-app-graph-dashboard-1.0.0.tgz"
  },
  "versions": [
    {
      "number": "1.0.0",
      "date": "2016-02-22T00:30:21.235Z"
    }
  ],
  "created": "2016-02-22T00:30:21.235Z",
  "modified": "2016-02-22T00:30:21.235Z",
  "lastPublisher": {
    "name": "mhdawson1",
    "email": "mdawson@devrus.com"
  },
  "owners": [
    {
      "name": "mhdawson1",
      "email": "mdawson@devrus.com"
    }
  ],
  "readme": "# micro-app-graph-dashboard - MQTT/Node based graphing dashboard\n\nMicro app to display one or more graphs based on data received\nthrough MQTT.  In my case MQTT data is fed by home sensors\nthroughout the house.  The dashboard is updated in realtime\nusing socket.io.\n\nThe dashboards listens on a number of mqtt topics for updates and then\nforwards the updates to clients using socket.io.  It provides a simple way\nto display graphjs of sensor data (of course it can display\nany data fed through MQTT regardless of how it is generated).\n\nThis is an example display:\n\n![picture of dashboard main window](pictures/graph_dashboard.jpg?raw=true)\n\nThe following project can be used to connect a variety of sensors including\ntemperature, power, humidity and power sensors.\n\n* [PI433WirelessRecvMananager](https://github.com/mhdawson/PI433WirelessRecvManager)\n\n# Usage\n\nAfter installation modify ../lib/config.json to match your configuration.\n\nThe configuration entries that must be updated include:\n\n* mqttServerUrl - url of the mqtt server to connect to.  This can either start\n  with tcp:// or mqtts://. If it starts with mqtts://  there must be a subdirectory\n  in the lib directory called mqttclient which contains ca.cert, client.cert,\n  client.key which contain the key and associated certificates for a client\n  which is authorized to connect to the mqtt server.\n* graphEntries - array in which each entry contains a name, topic field,\n  rentionSeconds(optional), and yPixelsPerLabel(optional).  One graph will\n  be included on the page for the app for each entry configured.\n  The name is what will be displayed as the label for the graph and the topic\n  is the topic on which the dashboard will listen for updates.  Updates on the\n  topic should be in the form of yyyyy,xxxx:value were yyyyy is generally a\n  timestamp and the dasboard will extract the value after the ':' character and\n  display it as the value for the corresponding label.  The retentionSeconds \n  specifies the maximum time in seconds a particular data point will be \n  displayed (ie after a data point is retentionSeconds old it will no\n  longer be included in the graph display), and yPixelsPerLabel controls\n  the minimum number of pixels between each yAxis label.\n* serverPort - port on which the dashboard listens for connections\n* title - title for the dashbaord page (optional)\n\nAs a micro-app the dashboard also supports other options like authentication and\ntls for the dashboard connection.  See the documentation for the micro-app-framework\nfor additional details.\n\nThe following is an example configuration file with the IP for my server\nmasked out:\n\n<PRE>\n\"title\": \"House Temp Data\",\n  \"serverPort\": 3000,\n  \"mqttServerUrl\": \"tcp://X.X.X.X:1883\",\n  \"graphEntries\": [ { \"name\": \"Indoor Temp\", \"topic\": \"house/nexxtech/temp\", \"retentionSeconds\": 86400},\n                    { \"name\": \"Bdr Light\", \"topic\": \"house/arduinoLightSensor/40\"}\n                  ]\n}\n</PRE>\n\n# Installation\n\nSimply run:\n\n<PRE>\nnpm install micro-app-graph-dashboard\n</PRE>\n\n# Running\n\nTo run the graph-dashboard app, add node.js to your path (currently requires 4.x or better) and\nthen run:\n\n<PRE>\nnpm start\n</PRE>\n\nfrom the directory in which the micro-app-graph-dashboard was installed.\n\nOnce the server is started. Point your browser at the host/port for the server\n(or now use the micro-app-electron-launcher). \nIf you have configured your browser to allow javascript to close the current page\nthe original window will be closed and one with the correct size of the\nsimple-dashboard app page will be created.\n\nThis micro-app allows resizing and the graphs will change to fit the available\nspace in the window.\n\n# Example\n\nThe following is the page shown for a sample configuration:\n\n![picture of dashboard main window](pictures/graph_dashboard.jpg?raw=true)\n\n# Key Depdencies\n\n## micro-app-framework\nAs a micro-app the graph-dashboard app depends on the micro-app-framework:\n\n* [micro-app-framework npm](https://www.npmjs.com/package/micro-app-framework)\n* [micro-app-framework github](https://github.com/mhdawson/micro-app-framework)\n\nSee the documentation on the micro-app-framework for more information on general\nconfiguration options that are availble (ex using tls, authentication, serverPort, etc).\n\n"
}