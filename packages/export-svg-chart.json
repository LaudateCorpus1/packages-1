{
  "name": "export-svg-chart",
  "version": "0.2.1",
  "description": "Converts SVG+CSS charts built with front-end technologies like D3 into SVG/PNG Node buffers for server-side use.",
  "main": "lib/export-svg-chart.js",
  "scripts": {
    "test": "node examples/basic.js"
  },
  "keywords": [],
  "author": {
    "name": "Thibaud Colas",
    "email": "thib@thib.me",
    "url": "https://github.com/ThibWeb"
  },
  "engines": {
    "node": ">=4.0.0"
  },
  "private": false,
  "preferGlobal": false,
  "license": "ISC",
  "dependencies": {
    "data-uri-to-buffer": "0.0.4",
    "nightmare": "^2.1.6",
    "save-svg-as-png": "^1.0.2",
    "vo": "^1.0.3"
  },
  "gitHead": "b2423bc5a67e44323e421bf6781fbd6f551965dc",
  "_npmVersion": "2.14.7",
  "_nodeVersion": "4.2.2",
  "dist": {
    "shasum": "e21b3aca7d868f1db7df1f170a55f24b80a1e255",
    "tarball": "http://registry.npmjs.org/export-svg-chart/-/export-svg-chart-0.2.1.tgz"
  },
  "versions": [
    {
      "number": "0.2.0",
      "date": "2016-02-07T01:07:51.848Z"
    },
    {
      "number": "0.2.1",
      "date": "2016-09-02T23:07:00.999Z"
    }
  ],
  "created": "2016-02-07T01:07:51.848Z",
  "modified": "2016-09-02T23:07:00.999Z",
  "lastPublisher": {
    "name": "thibaudcolas",
    "email": "thibaudcolas@gmail.com"
  },
  "owners": [
    {
      "name": "thibaudcolas",
      "email": "thibaudcolas@gmail.com"
    }
  ],
  "readme": "export-svg-chart [![npm](https://img.shields.io/npm/v/export-svg-chart.svg?style=flat-square)](https://www.npmjs.com/package/export-svg-chart) [![Build Status](https://img.shields.io/travis/ThibWeb/export-svg-chart.svg?style=flat-square)](https://travis-ci.org/ThibWeb/export-svg-chart) [![dependency Status](https://img.shields.io/david/ThibWeb/export-svg-chart.svg?style=flat-square)](https://david-dm.org/ThibWeb/export-svg-chart) [![devDependency Status](https://img.shields.io/david/dev/ThibWeb/export-svg-chart.svg?style=flat-square)](https://david-dm.org/ThibWeb/export-svg-chart)\n================\n\n> Converts SVG+CSS charts built with front-end technologies like D3 into SVG/PNG Node buffers for server-side use.\n\n## Install\n\n```sh\nnpm install export-svg-chart --save\n```\n\n## Example\n\nTo get SVG and PNG exports of your chart, you need to point the library towards a page that takes care of rendering it. This can be a dynamic rendering with UI elements, or an \"export/print\"-specific page with another skin for the chart.\n\n```js\nconst fs = require('fs');\nconst exportSvgChart = require('export-svg-chart');\n\nconst options = {\n    url: 'http://bl.ocks.org/mbostock/raw/7341714/',\n    selector: '.chart',\n};\n\nexportSvgChart(options, (err, buffers) => {\n    if (err) return console.log(err);\n\n    fs.writeFile('basic-example.svg', buffers.svg);\n    fs.writeFile('basic-example.png', buffers.pngs);\n});\n```\n\nhttp://bl.ocks.org/mbostock/raw/7341714/ becomes:\n\n[![basic example PNG](basic-example.png)](basic-example.png)\n\n[Basic example SVG](basic-example.svg)\n\n## What it does\n\nUnder the hood, this is using [Electron](http://electron.atom.io/) which uses [Chromium's rendering engine](http://www.chromium.org/developers/content-module). The export is generated with [saveSvgAsPng](https://github.com/exupero/saveSvgAsPng).\n\n### Caveats\n\n- saveSvgAsPng doesn't support inlining of font face definitions ([yet](https://github.com/exupero/saveSvgAsPng/pull/29)).\n- If the chart is styled with ancestor selectors that are outside of it, the selectors need to be re-mapped when they are inlined. This isn't supported within this library at the moment.\n"
}