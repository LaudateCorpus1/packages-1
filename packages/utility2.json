{
  "package.json": true,
  "author": {
    "name": "kai zhu",
    "email": "kaizhu256@gmail.com"
  },
  "bin": {
    "utility2": "index.sh",
    "utility2-bcrypt": "lib.bcrypt.js",
    "utility2-istanbul": "lib.istanbul.js",
    "utility2-jslint": "lib.jslint.js",
    "utility2-uglifyjs": "lib.uglifyjs.js"
  },
  "description": "this package will run dynamic browser tests with coverage (via istanbul and electron)",
  "devDependencies": {
    "electron-lite": "github:kaizhu256/node-electron-lite#alpha"
  },
  "engines": {
    "node": ">=4.0"
  },
  "homepage": "https://github.com/kaizhu256/node-utility2",
  "keywords": [
    "atom",
    "atom-shell",
    "browser",
    "build",
    "ci",
    "code",
    "continuous-integration",
    "cover",
    "coverage",
    "electron",
    "headless",
    "headless-browser",
    "instrument",
    "istanbul",
    "jscover",
    "jscoverage",
    "phantom",
    "phantomjs",
    "slimer",
    "slimerjs",
    "test",
    "travis",
    "travis-ci",
    "web"
  ],
  "license": "MIT",
  "name": "utility2",
  "os": [
    "darwin",
    "linux"
  ],
  "repository": {
    "user": "kaizhu256",
    "repo": "node-utility2",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/kaizhu256/node-utility2/tarball/master",
    "clone_url": "https://github.com/kaizhu256/node-utility2",
    "https_url": "https://github.com/kaizhu256/node-utility2",
    "travis_url": "https://travis-ci.org/kaizhu256/node-utility2",
    "zip_url": "https://github.com/kaizhu256/node-utility2/archive/master.zip",
    "api_url": "https://api.github.com/repos/kaizhu256/node-utility2"
  },
  "scripts": {
    "build-app": "npm test --mode-test-case=testCase_build_app",
    "build-ci": "./index.sh shRun shReadmeBuild",
    "build-doc": "npm test --mode-test-case=testCase_build_doc",
    "env": "env",
    "example.js": ". ./index.sh && shInit && shFileTrimLeft tmp/README.example.js && shRunScreenCapture shReadmeTestJs example.js",
    "example.sh": "./index.sh shRunScreenCapture shReadmeTestSh example.sh",
    "start": "export PORT=${PORT:-8080} && if [ -f assets.app.js ]; then node assets.app.js; return; fi && export npm_config_mode_auto_restart=1 && ./index.sh shRun shIstanbulCover node test.js",
    "start-heroku": "export npm_config_mode_backend=1 && npm start ",
    "test": "export PORT=$(./index.sh shServerPortRandom) && export npm_config_mode_auto_restart=1 && ./index.sh test node test.js",
    "test-published": "./index.sh shRun shNpmTestPublished"
  },
  "version": "2016.5.5",
  "_npmVersion": "3.9.5",
  "_nodeVersion": "6.2.2",
  "dist": {
    "shasum": "4b87e0bae1d58ff4ee6f8ace1ae5a843e0e77a2b",
    "tarball": "http://registry.npmjs.org/utility2/-/utility2-2016.5.5.tgz"
  },
  "stars": 1,
  "versions": [
    {
      "number": "0.0.1",
      "date": "2013-08-28T07:17:45.119Z"
    },
    {
      "number": "2013.12.2-1",
      "date": "2013-12-03T08:16:56.548Z"
    },
    {
      "number": "2013.12.3-1",
      "date": "2013-12-04T06:09:25.006Z"
    },
    {
      "number": "2013.12.22-1",
      "date": "2013-12-22T06:02:27.121Z"
    },
    {
      "number": "2013.12.22-2",
      "date": "2013-12-22T08:24:16.132Z"
    },
    {
      "number": "2013.12.28-1",
      "date": "2013-12-28T10:37:01.429Z"
    },
    {
      "number": "2014.1.8-1",
      "date": "2014-01-08T10:31:47.457Z"
    },
    {
      "number": "2014.1.10-1",
      "date": "2014-01-10T08:18:42.495Z"
    },
    {
      "number": "2014.1.10-2",
      "date": "2014-01-10T08:57:31.361Z"
    },
    {
      "number": "2014.1.21-1",
      "date": "2014-01-21T16:37:41.449Z"
    },
    {
      "number": "2014.1.22-1",
      "date": "2014-01-22T10:43:34.760Z"
    },
    {
      "number": "2014.1.22-2",
      "date": "2014-01-22T10:47:39.477Z"
    },
    {
      "number": "2014.1.22-3",
      "date": "2014-01-22T11:16:06.523Z"
    },
    {
      "number": "2014.1.23-1",
      "date": "2014-01-23T02:29:55.087Z"
    },
    {
      "number": "2014.1.23-2",
      "date": "2014-01-23T02:52:20.702Z"
    },
    {
      "number": "2014.1.23-3",
      "date": "2014-01-24T22:10:44.518Z"
    },
    {
      "number": "2014.1.25-1",
      "date": "2014-01-24T22:11:58.561Z"
    },
    {
      "number": "2014.1.25-2",
      "date": "2014-01-24T22:56:42.857Z"
    },
    {
      "number": "2014.1.25-3",
      "date": "2014-01-25T12:34:22.451Z"
    },
    {
      "number": "2014.1.26-1",
      "date": "2014-01-26T05:09:42.182Z"
    },
    {
      "number": "2014.1.27-1",
      "date": "2014-01-27T11:52:59.459Z"
    },
    {
      "number": "2014.2.2-1",
      "date": "2014-02-02T10:23:27.201Z"
    },
    {
      "number": "2014.3.16-1",
      "date": "2014-03-16T14:58:30.457Z"
    },
    {
      "number": "2014.3.17-1",
      "date": "2014-03-18T08:04:22.042Z"
    },
    {
      "number": "2014.3.19-1",
      "date": "2014-03-20T13:01:05.976Z"
    },
    {
      "number": "2014.3.21-1",
      "date": "2014-03-23T22:56:16.613Z"
    },
    {
      "number": "2014.3.21-2",
      "date": "2014-03-23T23:02:45.201Z"
    },
    {
      "number": "2014.3.24-1",
      "date": "2014-03-25T23:04:40.677Z"
    },
    {
      "number": "2014.4.3-1",
      "date": "2014-04-03T00:19:02.239Z"
    },
    {
      "number": "2014.4.6-1",
      "date": "2014-04-10T17:07:25.661Z"
    },
    {
      "number": "2014.4.6-2",
      "date": "2014-04-10T17:29:05.559Z"
    },
    {
      "number": "2014.4.12-1",
      "date": "2014-04-13T20:58:02.271Z"
    },
    {
      "number": "2014.4.14-1",
      "date": "2014-04-22T07:05:00.787Z"
    },
    {
      "number": "2014.4.20-1",
      "date": "2014-04-24T09:15:40.070Z"
    },
    {
      "number": "2014.4.22-1",
      "date": "2014-05-05T22:17:10.243Z"
    },
    {
      "number": "2014.4.22-2",
      "date": "2014-05-06T11:53:28.708Z"
    },
    {
      "number": "2014.5.8-1",
      "date": "2014-05-12T13:45:01.121Z"
    },
    {
      "number": "2014.5.10-1",
      "date": "2014-05-13T22:32:43.479Z"
    },
    {
      "number": "2014.5.12-1",
      "date": "2014-05-15T15:17:12.619Z"
    },
    {
      "number": "2014.5.14-1",
      "date": "2014-05-17T21:58:04.327Z"
    },
    {
      "number": "2014.5.14-2",
      "date": "2014-05-17T22:25:32.550Z"
    },
    {
      "number": "2014.5.18-1",
      "date": "2014-05-21T13:53:43.376Z"
    },
    {
      "number": "2014.5.20-1",
      "date": "2014-05-23T10:32:44.816Z"
    },
    {
      "number": "2014.5.20-2",
      "date": "2014-05-23T12:31:59.451Z"
    },
    {
      "number": "2014.5.20-3",
      "date": "2014-05-24T14:05:07.000Z"
    },
    {
      "number": "2014.5.20-4",
      "date": "2014-05-24T19:27:45.217Z"
    },
    {
      "number": "2014.5.20-5",
      "date": "2014-05-25T07:52:04.333Z"
    },
    {
      "number": "2014.5.20-6",
      "date": "2014-05-25T19:14:08.877Z"
    },
    {
      "number": "2014.5.20-7",
      "date": "2014-05-25T19:27:49.221Z"
    },
    {
      "number": "2014.5.20-8",
      "date": "2014-05-25T20:02:33.117Z"
    },
    {
      "number": "2014.5.20-9",
      "date": "2014-05-26T09:23:28.270Z"
    },
    {
      "number": "2014.5.20-10",
      "date": "2014-05-26T14:32:55.437Z"
    },
    {
      "number": "2014.5.20-11",
      "date": "2014-05-27T10:23:19.346Z"
    },
    {
      "number": "2014.5.20-12",
      "date": "2014-05-27T11:34:40.481Z"
    },
    {
      "number": "2014.5.20-13",
      "date": "2014-05-27T20:50:07.407Z"
    },
    {
      "number": "2014.5.26-1",
      "date": "2014-05-28T10:20:45.263Z"
    },
    {
      "number": "2014.5.26-2",
      "date": "2014-05-29T11:42:20.042Z"
    },
    {
      "number": "2014.5.26-3",
      "date": "2014-05-30T04:07:32.408Z"
    },
    {
      "number": "2014.5.26-4",
      "date": "2014-05-30T05:18:48.010Z"
    },
    {
      "number": "2014.5.26-5",
      "date": "2014-05-30T14:33:14.343Z"
    },
    {
      "number": "2014.5.26-6",
      "date": "2014-05-30T15:31:12.019Z"
    },
    {
      "number": "2014.5.26-7",
      "date": "2014-05-31T20:43:03.373Z"
    },
    {
      "number": "2014.5.26-8",
      "date": "2014-05-31T20:50:55.336Z"
    },
    {
      "number": "2014.5.26-9",
      "date": "2014-05-31T21:00:54.503Z"
    },
    {
      "number": "2014.5.26-10",
      "date": "2014-05-31T21:36:53.455Z"
    },
    {
      "number": "2014.5.26-11",
      "date": "2014-06-01T11:36:14.127Z"
    },
    {
      "number": "2014.5.26-12",
      "date": "2014-06-01T14:00:53.443Z"
    },
    {
      "number": "2014.6.1-1",
      "date": "2014-06-04T06:47:44.162Z"
    },
    {
      "number": "0.2.0-2014-06-01-a",
      "date": "2014-06-04T08:45:37.294Z"
    },
    {
      "number": "0.2.0-2014-06-01-b",
      "date": "2014-06-04T11:10:27.625Z"
    },
    {
      "number": "0.2.0-2014-06-01-c",
      "date": "2014-06-04T13:20:06.974Z"
    },
    {
      "number": "0.2.0-2014-06-01-d",
      "date": "2014-06-05T19:57:47.620Z"
    },
    {
      "number": "0.2.0-2014-06-01-e",
      "date": "2014-06-06T08:12:42.618Z"
    },
    {
      "number": "0.2.0-2014-06-01-f",
      "date": "2014-06-06T11:36:47.714Z"
    },
    {
      "number": "0.2.0-2014-06-01-g",
      "date": "2014-06-06T14:01:55.155Z"
    },
    {
      "number": "0.2.0-2014-06-01-h",
      "date": "2014-06-06T18:43:11.522Z"
    },
    {
      "number": "2014.6.1-2",
      "date": "2014-06-06T18:58:24.186Z"
    },
    {
      "number": "2014.6.1-3",
      "date": "2014-06-06T20:52:59.157Z"
    },
    {
      "number": "2014.6.6-1",
      "date": "2014-06-07T13:29:39.798Z"
    },
    {
      "number": "2014.6.6-2",
      "date": "2014-06-07T13:45:43.112Z"
    },
    {
      "number": "2014.6.6-3",
      "date": "2014-06-07T15:50:19.898Z"
    },
    {
      "number": "2014.6.6-4",
      "date": "2014-06-07T16:37:59.125Z"
    },
    {
      "number": "2014.6.6-5",
      "date": "2014-06-07T16:51:11.986Z"
    },
    {
      "number": "2014.6.6-6",
      "date": "2014-06-07T18:29:09.270Z"
    },
    {
      "number": "2014.6.6-7",
      "date": "2014-06-07T18:51:52.783Z"
    },
    {
      "number": "2014.6.6-8",
      "date": "2014-06-08T08:18:15.818Z"
    },
    {
      "number": "2014.7.4-1",
      "date": "2014-07-04T06:38:20.224Z"
    },
    {
      "number": "2014.7.11-1",
      "date": "2014-07-11T04:43:38.084Z"
    },
    {
      "number": "2014.7.12-1",
      "date": "2014-07-17T00:31:06.127Z"
    },
    {
      "number": "2014.7.12-2",
      "date": "2014-07-17T02:06:06.713Z"
    },
    {
      "number": "2014.7.18-1",
      "date": "2014-07-18T11:08:21.107Z"
    },
    {
      "number": "2014.7.18-2",
      "date": "2014-07-19T06:04:59.748Z"
    },
    {
      "number": "2014.7.18-3",
      "date": "2014-07-19T08:22:01.643Z"
    },
    {
      "number": "2014.7.18-4",
      "date": "2014-07-19T13:54:48.458Z"
    },
    {
      "number": "2014.7.18-5",
      "date": "2014-07-22T07:23:35.183Z"
    },
    {
      "number": "2014.7.18-6",
      "date": "2014-07-22T07:35:34.504Z"
    },
    {
      "number": "2014.7.18-7",
      "date": "2014-07-22T08:24:32.842Z"
    },
    {
      "number": "2014.7.18-8",
      "date": "2014-07-22T09:42:32.730Z"
    },
    {
      "number": "2014.7.18-9",
      "date": "2014-07-22T10:09:33.912Z"
    },
    {
      "number": "2014.7.29-10",
      "date": "2014-07-29T16:57:00.562Z"
    },
    {
      "number": "2014.7.29-11",
      "date": "2014-07-30T05:07:21.710Z"
    },
    {
      "number": "2014.7.29-12",
      "date": "2014-07-30T05:25:23.738Z"
    },
    {
      "number": "2014.7.29-13",
      "date": "2014-07-30T10:45:30.639Z"
    },
    {
      "number": "2014.7.29-14",
      "date": "2014-07-30T14:00:55.110Z"
    },
    {
      "number": "2014.7.29-15",
      "date": "2014-07-31T08:54:17.476Z"
    },
    {
      "number": "2014.7.29-16",
      "date": "2014-07-31T12:35:59.599Z"
    },
    {
      "number": "2014.7.29-17",
      "date": "2014-08-05T18:06:35.748Z"
    },
    {
      "number": "2014.7.29-18",
      "date": "2014-08-05T18:17:28.748Z"
    },
    {
      "number": "2014.7.29-19",
      "date": "2014-08-09T21:18:53.284Z"
    },
    {
      "number": "2014.7.29-20",
      "date": "2014-08-10T08:35:43.489Z"
    },
    {
      "number": "2014.9.22-11",
      "date": "2014-09-22T15:46:54.996Z"
    },
    {
      "number": "2014.9.22-12",
      "date": "2014-10-04T16:05:16.508Z"
    },
    {
      "number": "2014.9.22-13",
      "date": "2014-10-09T10:27:43.060Z"
    },
    {
      "number": "2014.9.22-14",
      "date": "2014-10-21T06:56:50.070Z"
    },
    {
      "number": "2014.9.22-15",
      "date": "2014-10-21T17:38:51.518Z"
    },
    {
      "number": "2014.9.22-16",
      "date": "2014-10-21T17:54:20.854Z"
    },
    {
      "number": "2014.9.22-17",
      "date": "2014-11-02T14:44:16.437Z"
    },
    {
      "number": "2014.10.31-12",
      "date": "2014-11-22T18:21:22.631Z"
    },
    {
      "number": "2014.10.31-13",
      "date": "2014-11-22T18:36:43.200Z"
    },
    {
      "number": "2014.10.31-14",
      "date": "2014-11-22T19:10:38.898Z"
    },
    {
      "number": "2014.10.31-15",
      "date": "2014-11-25T02:39:00.082Z"
    },
    {
      "number": "2014.10.31-16",
      "date": "2014-11-25T12:40:01.830Z"
    },
    {
      "number": "2014.10.31-17",
      "date": "2014-11-26T02:41:45.758Z"
    },
    {
      "number": "2014.10.31-18",
      "date": "2014-11-26T04:34:19.523Z"
    },
    {
      "number": "2014.10.31-19",
      "date": "2014-11-27T02:26:48.580Z"
    },
    {
      "number": "2014.10.31-20",
      "date": "2014-11-27T02:48:28.821Z"
    },
    {
      "number": "2014.10.31-21",
      "date": "2014-11-27T03:52:49.400Z"
    },
    {
      "number": "2014.10.31-22",
      "date": "2014-12-03T15:17:39.560Z"
    },
    {
      "number": "2014.10.31-23",
      "date": "2014-12-03T15:30:25.161Z"
    },
    {
      "number": "2014.10.31-24",
      "date": "2014-12-03T17:48:49.684Z"
    },
    {
      "number": "2014.10.31-25",
      "date": "2014-12-03T19:09:53.394Z"
    },
    {
      "number": "2014.10.31-26",
      "date": "2014-12-04T04:32:45.193Z"
    },
    {
      "number": "2014.10.31-27",
      "date": "2014-12-21T18:42:17.543Z"
    },
    {
      "number": "2014.10.31-28",
      "date": "2014-12-21T19:06:02.474Z"
    },
    {
      "number": "2014.10.31-29",
      "date": "2014-12-21T19:20:19.716Z"
    },
    {
      "number": "2014.10.31-30",
      "date": "2014-12-26T00:37:02.041Z"
    },
    {
      "number": "2014.10.31-31",
      "date": "2014-12-26T01:30:03.021Z"
    },
    {
      "number": "2014.10.31-32",
      "date": "2014-12-26T01:36:57.938Z"
    },
    {
      "number": "2014.10.31-401",
      "date": "2014-12-26T18:07:13.873Z"
    },
    {
      "number": "2014.10.31-402",
      "date": "2014-12-26T20:43:30.611Z"
    },
    {
      "number": "2014.10.31-403",
      "date": "2014-12-27T11:56:49.876Z"
    },
    {
      "number": "2014.10.31-404",
      "date": "2014-12-27T12:03:35.866Z"
    },
    {
      "number": "2014.10.31-405",
      "date": "2014-12-27T22:42:01.521Z"
    },
    {
      "number": "2014.10.31-406",
      "date": "2014-12-28T01:56:44.540Z"
    },
    {
      "number": "2014.10.31-407",
      "date": "2014-12-28T11:15:07.542Z"
    },
    {
      "number": "2014.10.31-408",
      "date": "2014-12-28T11:51:56.469Z"
    },
    {
      "number": "2014.10.31-409",
      "date": "2014-12-28T12:42:42.029Z"
    },
    {
      "number": "2014.10.31-410",
      "date": "2014-12-28T22:41:12.960Z"
    },
    {
      "number": "2014.10.31-411",
      "date": "2014-12-28T23:16:17.118Z"
    },
    {
      "number": "2014.12.29-100",
      "date": "2014-12-29T12:18:21.359Z"
    },
    {
      "number": "2014.12.29-101",
      "date": "2014-12-29T22:00:41.679Z"
    },
    {
      "number": "2014.12.29-102",
      "date": "2015-01-01T13:19:55.806Z"
    },
    {
      "number": "2014.12.29-103",
      "date": "2015-01-01T14:49:21.326Z"
    },
    {
      "number": "2014.12.29-104",
      "date": "2015-01-01T15:29:52.156Z"
    },
    {
      "number": "2014.12.29-106",
      "date": "2015-01-01T15:38:13.435Z"
    },
    {
      "number": "2015.1.4-100",
      "date": "2015-01-04T08:29:09.314Z"
    },
    {
      "number": "2015.1.4-101",
      "date": "2015-01-04T09:26:30.087Z"
    },
    {
      "number": "2015.1.4-102",
      "date": "2015-01-04T16:16:45.115Z"
    },
    {
      "number": "2015.1.4-103",
      "date": "2015-01-04T16:29:15.640Z"
    },
    {
      "number": "2015.1.4-104",
      "date": "2015-01-04T17:29:43.536Z"
    },
    {
      "number": "2015.1.4-105",
      "date": "2015-01-04T17:59:12.123Z"
    },
    {
      "number": "2015.1.4-106",
      "date": "2015-01-04T18:16:56.741Z"
    },
    {
      "number": "2015.1.4-107",
      "date": "2015-01-07T14:27:40.008Z"
    },
    {
      "number": "2015.1.4-108",
      "date": "2015-01-07T18:35:21.325Z"
    },
    {
      "number": "2015.1.4-109",
      "date": "2015-01-08T09:46:14.531Z"
    },
    {
      "number": "2015.1.18-10",
      "date": "2015-01-17T17:34:47.257Z"
    },
    {
      "number": "2015.1.21-10",
      "date": "2015-01-21T08:13:46.753Z"
    },
    {
      "number": "2015.1.21-11",
      "date": "2015-01-21T08:24:33.345Z"
    },
    {
      "number": "2015.2.6-10",
      "date": "2015-02-05T18:55:49.684Z"
    },
    {
      "number": "2015.2.6-11",
      "date": "2015-02-05T19:54:30.177Z"
    },
    {
      "number": "2015.2.7-10",
      "date": "2015-02-07T00:15:27.572Z"
    },
    {
      "number": "2015.2.8-10",
      "date": "2015-02-07T22:28:42.987Z"
    },
    {
      "number": "2015.2.8-11",
      "date": "2015-02-07T23:29:25.769Z"
    },
    {
      "number": "2015.2.8-12",
      "date": "2015-02-08T00:55:54.985Z"
    },
    {
      "number": "2015.2.8-13",
      "date": "2015-02-08T06:20:52.092Z"
    },
    {
      "number": "2015.2.9-10",
      "date": "2015-02-09T15:52:38.067Z"
    },
    {
      "number": "2015.2.9-11",
      "date": "2015-02-09T16:21:27.861Z"
    },
    {
      "number": "2015.2.9-12",
      "date": "2015-02-09T16:40:13.197Z"
    },
    {
      "number": "2015.2.9-13",
      "date": "2015-02-09T17:11:47.520Z"
    },
    {
      "number": "2015.2.10-10",
      "date": "2015-02-10T09:23:35.445Z"
    },
    {
      "number": "2015.2.10-11",
      "date": "2015-02-10T10:17:22.981Z"
    },
    {
      "number": "2015.2.10-12",
      "date": "2015-02-10T10:30:48.088Z"
    },
    {
      "number": "2015.2.10-13",
      "date": "2015-02-10T10:38:19.140Z"
    },
    {
      "number": "2015.2.10-14",
      "date": "2015-02-10T13:27:21.973Z"
    },
    {
      "number": "2015.2.10-15",
      "date": "2015-02-10T14:23:39.507Z"
    },
    {
      "number": "2015.2.10-16",
      "date": "2015-02-10T16:59:37.152Z"
    },
    {
      "number": "2015.2.10-17",
      "date": "2015-02-10T17:38:00.566Z"
    },
    {
      "number": "2015.2.15-10",
      "date": "2015-02-14T17:14:01.480Z"
    },
    {
      "number": "2015.2.15-11",
      "date": "2015-02-14T19:31:02.053Z"
    },
    {
      "number": "2015.2.15-12",
      "date": "2015-02-15T02:35:45.206Z"
    },
    {
      "number": "2015.2.15-13",
      "date": "2015-02-15T17:09:17.966Z"
    },
    {
      "number": "2015.2.18-10",
      "date": "2015-02-18T05:00:22.800Z"
    },
    {
      "number": "2015.2.19-10",
      "date": "2015-02-18T18:38:05.226Z"
    },
    {
      "number": "2015.2.19-11",
      "date": "2015-02-18T19:09:18.170Z"
    },
    {
      "number": "2015.2.19-12",
      "date": "2015-02-18T19:15:56.196Z"
    },
    {
      "number": "2015.2.19-13",
      "date": "2015-02-19T00:47:06.351Z"
    },
    {
      "number": "2015.2.19-14",
      "date": "2015-02-19T01:16:02.514Z"
    },
    {
      "number": "2015.2.20-10",
      "date": "2015-02-20T06:43:27.495Z"
    },
    {
      "number": "2015.2.20-11",
      "date": "2015-02-20T14:23:26.736Z"
    },
    {
      "number": "2015.2.20-12",
      "date": "2015-02-20T18:50:58.533Z"
    },
    {
      "number": "2015.2.21-10",
      "date": "2015-02-21T11:55:18.008Z"
    },
    {
      "number": "2015.2.21-11",
      "date": "2015-02-21T12:15:52.911Z"
    },
    {
      "number": "2015.2.23-10",
      "date": "2015-02-23T01:01:45.155Z"
    },
    {
      "number": "2015.2.23-11",
      "date": "2015-02-23T02:10:52.761Z"
    },
    {
      "number": "2015.2.23-12",
      "date": "2015-02-23T08:39:54.142Z"
    },
    {
      "number": "2015.2.24-10",
      "date": "2015-02-24T10:31:32.196Z"
    },
    {
      "number": "2015.2.24-11",
      "date": "2015-02-24T10:39:07.529Z"
    },
    {
      "number": "2015.2.24-12",
      "date": "2015-02-24T14:16:19.083Z"
    },
    {
      "number": "2015.2.24-14",
      "date": "2015-02-24T18:00:30.433Z"
    },
    {
      "number": "2015.2.25-10",
      "date": "2015-02-25T11:36:41.343Z"
    },
    {
      "number": "2015.2.27-10",
      "date": "2015-02-26T17:17:33.741Z"
    },
    {
      "number": "2015.2.28-10",
      "date": "2015-02-28T14:01:57.089Z"
    },
    {
      "number": "2015.2.28-11",
      "date": "2015-02-28T14:32:38.951Z"
    },
    {
      "number": "2015.3.1-10",
      "date": "2015-03-01T07:03:49.527Z"
    },
    {
      "number": "2015.3.2-10",
      "date": "2015-03-01T18:47:04.540Z"
    },
    {
      "number": "2015.3.2-11",
      "date": "2015-03-01T19:19:10.003Z"
    },
    {
      "number": "2015.3.2-12",
      "date": "2015-03-02T11:53:10.288Z"
    },
    {
      "number": "2015.3.3-12",
      "date": "2015-03-03T08:47:20.442Z"
    },
    {
      "number": "2015.3.5-10",
      "date": "2015-03-05T06:53:02.147Z"
    },
    {
      "number": "2015.3.5-11",
      "date": "2015-03-05T11:18:35.582Z"
    },
    {
      "number": "2015.3.5-12",
      "date": "2015-03-05T12:58:55.130Z"
    },
    {
      "number": "2015.3.6-10",
      "date": "2015-03-06T08:52:58.214Z"
    },
    {
      "number": "2015.3.6-11",
      "date": "2015-03-06T12:39:54.408Z"
    },
    {
      "number": "2015.3.6-12",
      "date": "2015-03-06T14:23:32.777Z"
    },
    {
      "number": "2015.3.6-13",
      "date": "2015-03-06T14:36:02.663Z"
    },
    {
      "number": "2015.3.7-10",
      "date": "2015-03-07T14:28:03.551Z"
    },
    {
      "number": "2015.3.7-11",
      "date": "2015-03-07T17:05:38.726Z"
    },
    {
      "number": "2015.3.7-12",
      "date": "2015-03-07T18:46:16.031Z"
    },
    {
      "number": "2015.3.7-13",
      "date": "2015-03-07T19:02:30.254Z"
    },
    {
      "number": "2015.3.8-10",
      "date": "2015-03-08T06:37:17.486Z"
    },
    {
      "number": "2015.3.8-11",
      "date": "2015-03-08T15:35:37.918Z"
    },
    {
      "number": "2015.3.14-10",
      "date": "2015-03-14T12:04:22.821Z"
    },
    {
      "number": "2015.3.19-10",
      "date": "2015-03-19T01:27:45.542Z"
    },
    {
      "number": "2015.3.19-11",
      "date": "2015-03-19T17:35:53.681Z"
    },
    {
      "number": "2015.3.19-12",
      "date": "2015-03-20T00:31:15.354Z"
    },
    {
      "number": "2015.3.24-10",
      "date": "2015-03-24T10:20:09.960Z"
    },
    {
      "number": "2015.3.24-11",
      "date": "2015-03-24T12:51:48.690Z"
    },
    {
      "number": "2015.3.25-10",
      "date": "2015-03-25T07:06:17.488Z"
    },
    {
      "number": "2015.3.28-10",
      "date": "2015-03-28T09:40:02.828Z"
    },
    {
      "number": "2015.3.28-11",
      "date": "2015-03-28T15:24:44.018Z"
    },
    {
      "number": "2015.3.29-10",
      "date": "2015-03-28T17:06:14.146Z"
    },
    {
      "number": "2015.3.30-10",
      "date": "2015-03-30T17:53:24.393Z"
    },
    {
      "number": "2015.4.2-10",
      "date": "2015-04-02T03:04:28.755Z"
    },
    {
      "number": "2015.4.2-11",
      "date": "2015-04-02T09:00:49.431Z"
    },
    {
      "number": "2015.4.9-a",
      "date": "2015-04-09T08:01:22.585Z"
    },
    {
      "number": "2015.4.18-a",
      "date": "2015-04-18T11:57:04.887Z"
    },
    {
      "number": "2015.4.18-b",
      "date": "2015-04-18T12:01:23.829Z"
    },
    {
      "number": "2015.4.23-a",
      "date": "2015-04-23T04:49:33.190Z"
    },
    {
      "number": "2015.4.23-b",
      "date": "2015-04-23T05:56:21.674Z"
    },
    {
      "number": "2015.4.25-a",
      "date": "2015-04-25T01:33:21.434Z"
    },
    {
      "number": "2015.4.26-a",
      "date": "2015-04-26T07:05:56.271Z"
    },
    {
      "number": "2015.4.26-b",
      "date": "2015-04-26T07:15:59.933Z"
    },
    {
      "number": "2015.4.26-c",
      "date": "2015-04-26T13:51:26.021Z"
    },
    {
      "number": "2015.4.29-a",
      "date": "2015-04-29T13:59:25.330Z"
    },
    {
      "number": "2015.4.30-a",
      "date": "2015-04-30T13:03:06.314Z"
    },
    {
      "number": "2015.5.6-a",
      "date": "2015-05-06T08:07:34.011Z"
    },
    {
      "number": "2015.5.6-b",
      "date": "2015-05-06T09:54:53.667Z"
    },
    {
      "number": "2015.5.6-c",
      "date": "2015-05-06T17:27:48.509Z"
    },
    {
      "number": "2015.5.6-d",
      "date": "2015-05-10T16:36:26.017Z"
    },
    {
      "number": "2015.5.6-e",
      "date": "2015-05-10T16:56:12.304Z"
    },
    {
      "number": "2015.5.15-a",
      "date": "2015-05-15T03:32:04.304Z"
    },
    {
      "number": "2015.5.15-b",
      "date": "2015-05-16T13:57:56.559Z"
    },
    {
      "number": "2015.5.15-c",
      "date": "2015-05-16T18:34:57.279Z"
    },
    {
      "number": "2015.5.15-d",
      "date": "2015-05-16T21:56:51.013Z"
    },
    {
      "number": "2015.5.15-e",
      "date": "2015-05-17T16:34:36.725Z"
    },
    {
      "number": "2015.5.15-f",
      "date": "2015-05-17T17:52:58.003Z"
    },
    {
      "number": "2015.5.28-a",
      "date": "2015-05-28T03:13:17.208Z"
    },
    {
      "number": "2015.6.1-a",
      "date": "2015-06-03T15:56:29.444Z"
    },
    {
      "number": "2015.6.1-b",
      "date": "2015-06-04T08:16:46.472Z"
    },
    {
      "number": "2015.6.10-a",
      "date": "2015-06-19T15:19:27.121Z"
    },
    {
      "number": "2015.6.10-b",
      "date": "2015-06-20T05:32:40.181Z"
    },
    {
      "number": "2015.6.10-c",
      "date": "2015-06-20T10:50:04.933Z"
    },
    {
      "number": "2015.6.10-d",
      "date": "2015-06-20T12:39:34.593Z"
    },
    {
      "number": "2015.6.11-a",
      "date": "2015-06-20T18:06:47.247Z"
    },
    {
      "number": "2015.6.11-b",
      "date": "2015-06-24T13:11:41.198Z"
    },
    {
      "number": "2015.6.12",
      "date": "2015-06-24T14:05:09.910Z"
    },
    {
      "number": "2015.7.1",
      "date": "2015-07-03T03:21:41.860Z"
    },
    {
      "number": "2015.7.2",
      "date": "2015-07-04T04:01:48.426Z"
    },
    {
      "number": "2015.7.3",
      "date": "2015-07-05T03:51:21.439Z"
    },
    {
      "number": "2015.7.4",
      "date": "2015-07-05T04:22:42.299Z"
    },
    {
      "number": "2015.7.5",
      "date": "2015-07-06T20:56:27.305Z"
    },
    {
      "number": "2015.7.6",
      "date": "2015-07-18T04:49:52.156Z"
    },
    {
      "number": "2015.7.7",
      "date": "2015-07-25T04:49:24.099Z"
    },
    {
      "number": "2015.7.8",
      "date": "2015-07-26T15:17:17.248Z"
    },
    {
      "number": "2015.7.9",
      "date": "2015-07-27T13:10:54.204Z"
    },
    {
      "number": "2015.7.10",
      "date": "2015-07-31T07:40:58.854Z"
    },
    {
      "number": "2015.8.1",
      "date": "2015-08-07T08:07:52.951Z"
    },
    {
      "number": "2015.8.2",
      "date": "2015-08-07T10:27:36.337Z"
    },
    {
      "number": "2015.8.3",
      "date": "2015-08-12T13:57:44.723Z"
    },
    {
      "number": "2015.8.4",
      "date": "2015-08-19T06:52:29.808Z"
    },
    {
      "number": "2015.8.5",
      "date": "2015-08-19T17:18:34.020Z"
    },
    {
      "number": "2015.8.6",
      "date": "2015-09-04T18:59:57.347Z"
    },
    {
      "number": "2015.9.1",
      "date": "2015-09-25T15:15:31.105Z"
    },
    {
      "number": "2015.10.1",
      "date": "2015-11-11T08:01:25.312Z"
    },
    {
      "number": "2015.10.2",
      "date": "2015-11-12T14:59:45.911Z"
    },
    {
      "number": "2015.10.3",
      "date": "2015-11-15T15:47:39.459Z"
    },
    {
      "number": "2015.11.1",
      "date": "2015-11-17T21:09:36.625Z"
    },
    {
      "number": "2015.11.2",
      "date": "2015-11-17T22:08:35.798Z"
    },
    {
      "number": "2015.11.3",
      "date": "2015-11-19T03:21:45.261Z"
    },
    {
      "number": "2015.11.4",
      "date": "2015-11-20T08:07:25.011Z"
    },
    {
      "number": "2015.11.5",
      "date": "2015-11-20T09:37:29.220Z"
    },
    {
      "number": "2015.11.6",
      "date": "2015-11-21T11:08:16.858Z"
    },
    {
      "number": "2015.11.7",
      "date": "2015-11-22T16:14:03.993Z"
    },
    {
      "number": "2015.11.8",
      "date": "2015-11-24T08:25:16.445Z"
    },
    {
      "number": "2015.11.10",
      "date": "2015-11-25T00:36:50.556Z"
    },
    {
      "number": "2015.11.11",
      "date": "2015-11-29T09:20:51.032Z"
    },
    {
      "number": "2015.11.12",
      "date": "2015-12-04T05:47:17.941Z"
    },
    {
      "number": "2015.11.13",
      "date": "2015-12-04T12:43:39.676Z"
    },
    {
      "number": "2015.11.14",
      "date": "2015-12-07T21:10:25.143Z"
    },
    {
      "number": "2015.11.15",
      "date": "2015-12-11T06:33:39.671Z"
    },
    {
      "number": "2015.11.16",
      "date": "2015-12-14T04:06:46.030Z"
    },
    {
      "number": "2015.12.1",
      "date": "2015-12-21T19:24:39.036Z"
    },
    {
      "number": "2015.12.2",
      "date": "2015-12-22T18:12:28.038Z"
    },
    {
      "number": "2015.12.3",
      "date": "2015-12-26T13:30:03.549Z"
    },
    {
      "number": "2015.12.4",
      "date": "2015-12-27T14:14:03.848Z"
    },
    {
      "number": "2015.12.5",
      "date": "2016-01-02T16:17:56.411Z"
    },
    {
      "number": "2015.12.6",
      "date": "2016-01-03T16:26:25.351Z"
    },
    {
      "number": "2015.12.7",
      "date": "2016-01-05T11:18:04.961Z"
    },
    {
      "number": "2015.12.8",
      "date": "2016-01-08T09:29:34.188Z"
    },
    {
      "number": "2015.12.9",
      "date": "2016-01-10T13:13:30.993Z"
    },
    {
      "number": "2015.12.10",
      "date": "2016-01-11T09:11:37.740Z"
    },
    {
      "number": "2015.12.11",
      "date": "2016-01-14T12:51:43.961Z"
    },
    {
      "number": "2015.12.12",
      "date": "2016-01-23T06:06:49.142Z"
    },
    {
      "number": "2016.12.13",
      "date": "2016-01-27T17:48:15.571Z"
    },
    {
      "number": "2016.1.1",
      "date": "2016-01-28T18:25:33.067Z"
    },
    {
      "number": "2016.1.2",
      "date": "2016-02-12T10:56:21.711Z"
    },
    {
      "number": "2016.1.3",
      "date": "2016-02-17T03:04:30.634Z"
    },
    {
      "number": "2016.1.4",
      "date": "2016-02-22T03:30:02.313Z"
    },
    {
      "number": "2016.1.5",
      "date": "2016-02-28T16:38:39.887Z"
    },
    {
      "number": "2016.1.6",
      "date": "2016-03-08T15:31:54.781Z"
    },
    {
      "number": "2016.1.7",
      "date": "2016-03-13T07:33:57.759Z"
    },
    {
      "number": "2016.1.8",
      "date": "2016-03-18T21:13:34.539Z"
    },
    {
      "number": "2016.1.9",
      "date": "2016-03-19T08:31:35.178Z"
    },
    {
      "number": "2016.2.1",
      "date": "2016-03-30T16:49:51.546Z"
    },
    {
      "number": "2016.2.2",
      "date": "2016-04-03T10:49:03.559Z"
    },
    {
      "number": "2016.3.1",
      "date": "2016-04-20T17:25:02.729Z"
    },
    {
      "number": "2016.3.2",
      "date": "2016-04-22T16:51:19.305Z"
    },
    {
      "number": "2016.3.3",
      "date": "2016-04-22T17:39:53.235Z"
    },
    {
      "number": "2016.3.4",
      "date": "2016-04-25T15:02:36.517Z"
    },
    {
      "number": "2016.3.5",
      "date": "2016-05-07T12:01:51.364Z"
    },
    {
      "number": "2016.3.6",
      "date": "2016-05-20T14:38:15.441Z"
    },
    {
      "number": "2016.4.1",
      "date": "2016-05-23T22:29:26.622Z"
    },
    {
      "number": "2016.4.2",
      "date": "2016-05-30T11:47:28.009Z"
    },
    {
      "number": "2016.5.1",
      "date": "2016-06-11T16:58:31.114Z"
    },
    {
      "number": "2016.5.2",
      "date": "2016-06-11T21:59:49.694Z"
    },
    {
      "number": "2016.5.3",
      "date": "2016-06-11T22:37:45.032Z"
    },
    {
      "number": "2016.5.4",
      "date": "2016-06-15T13:58:21.018Z"
    },
    {
      "number": "2016.5.5",
      "date": "2016-07-01T01:02:36.611Z"
    }
  ],
  "created": "2013-08-28T07:17:38.584Z",
  "modified": "2016-07-01T01:02:36.611Z",
  "lastPublisher": {
    "name": "kaizhu",
    "email": "kaizhu256@gmail.com"
  },
  "owners": [
    {
      "name": "kaizhu",
      "email": "kaizhu256@gmail.com"
    }
  ],
  "readme": "utility2\n========\nthis package will run dynamic browser tests with coverage (via istanbul and electron)\n\n[![travis-ci.org build-status](https://api.travis-ci.org/kaizhu256/node-utility2.svg)](https://travis-ci.org/kaizhu256/node-utility2)\n\n[![NPM](https://nodei.co/npm/utility2.png?downloads=true)](https://www.npmjs.com/package/utility2)\n\n[![package-listing](https://kaizhu256.github.io/node-utility2/build/screen-capture.gitLsTree.svg)](https://github.com/kaizhu256/node-utility2)\n\n\n\n# documentation\n#### todo\n- add test for build-app\n- merge github-crud into this package\n- add socket-io to repl-server\n- add utility2.middlewareLimit\n- add server stress test using electron\n- none\n\n#### change since 9519e4b5\n- npm publish 2016.5.5\n- explicitly require the macro /* istanbul instrument in package ... */ for a file to be covered\n- generalize utility2.requireExampleJsFromReadme\n- merge shell function shReadmeExportScripts into shInit\n- none\n\n#### this package requires\n- darwin or linux os\n- chromium-based browser or firefox browser\n\n#### api-doc\n- [https://kaizhu256.github.io/node-utility2/build/doc.api.html](https://kaizhu256.github.io/node-utility2/build/doc.api.html)\n\n[![api-doc](https://kaizhu256.github.io/node-utility2/build/screen-capture.docApiCreate.browser._2Fhome_2Ftravis_2Fbuild_2Fkaizhu256_2Fnode-utility2_2Ftmp_2Fbuild_2Fdoc.api.html.png)](https://kaizhu256.github.io/node-utility2/build/doc.api.html)\n\n\n\n# live test-server\n- [https://kaizhu256.github.io/node-utility2/build..beta..travis-ci.org/app/index.html](https://kaizhu256.github.io/node-utility2/build..beta..travis-ci.org/app/index.html)\n\n[![github.com test-server](https://kaizhu256.github.io/node-utility2/build/screen-capture.githubDeploy.browser._2Fnode-utility2_2Fbuild..alpha..travis-ci.org_2Fapp_2Findex.html.png)](https://kaizhu256.github.io/node-utility2/build..beta..travis-ci.org/app/index.html)\n\n\n\n# build-status [![travis-ci.org build-status](https://api.travis-ci.org/kaizhu256/node-utility2.svg)](https://travis-ci.org/kaizhu256/node-utility2)\n[![build commit status](https://kaizhu256.github.io/node-utility2/build/build.badge.svg)](https://travis-ci.org/kaizhu256/node-utility2)\n\n| git-branch : | [master](https://github.com/kaizhu256/node-utility2/tree/master) | [beta](https://github.com/kaizhu256/node-utility2/tree/beta) | [alpha](https://github.com/kaizhu256/node-utility2/tree/alpha)|\n|--:|:--|:--|:--|\n| test-server 1 : | [![github.com test-server](https://kaizhu256.github.io/node-utility2/GitHub-Mark-32px.png)](https://kaizhu256.github.io/node-utility2/build..master..travis-ci.org/app/index.html) | [![github.com test-server](https://kaizhu256.github.io/node-utility2/GitHub-Mark-32px.png)](https://kaizhu256.github.io/node-utility2/build..beta..travis-ci.org/app/index.html) | [![github.com test-server](https://kaizhu256.github.io/node-utility2/GitHub-Mark-32px.png)](https://kaizhu256.github.io/node-utility2/build..alpha..travis-ci.org/app/index.html)|\n| test-server 2 : | [![heroku.com test-server](https://kaizhu256.github.io/node-utility2/heroku-logo.75x25.png)](https://hrku01-utility2-master.herokuapp.com) | [![heroku.com test-server](https://kaizhu256.github.io/node-utility2/heroku-logo.75x25.png)](https://hrku01-utility2-beta.herokuapp.com) | [![heroku.com test-server](https://kaizhu256.github.io/node-utility2/heroku-logo.75x25.png)](https://hrku01-utility2-alpha.herokuapp.com)|\n| test-report : | [![test-report](https://kaizhu256.github.io/node-utility2/build..master..travis-ci.org/test-report.badge.svg)](https://kaizhu256.github.io/node-utility2/build..master..travis-ci.org/test-report.html) | [![test-report](https://kaizhu256.github.io/node-utility2/build..beta..travis-ci.org/test-report.badge.svg)](https://kaizhu256.github.io/node-utility2/build..beta..travis-ci.org/test-report.html) | [![test-report](https://kaizhu256.github.io/node-utility2/build..alpha..travis-ci.org/test-report.badge.svg)](https://kaizhu256.github.io/node-utility2/build..alpha..travis-ci.org/test-report.html)|\n| coverage : | [![istanbul coverage](https://kaizhu256.github.io/node-utility2/build..master..travis-ci.org/coverage.badge.svg)](https://kaizhu256.github.io/node-utility2/build..master..travis-ci.org/coverage.html/index.html) | [![istanbul coverage](https://kaizhu256.github.io/node-utility2/build..beta..travis-ci.org/coverage.badge.svg)](https://kaizhu256.github.io/node-utility2/build..beta..travis-ci.org/coverage.html/index.html) | [![istanbul coverage](https://kaizhu256.github.io/node-utility2/build..alpha..travis-ci.org/coverage.badge.svg)](https://kaizhu256.github.io/node-utility2/build..alpha..travis-ci.org/coverage.html/index.html)|\n| build-artifacts : | [![build-artifacts](https://kaizhu256.github.io/node-utility2/glyphicons_144_folder_open.png)](https://github.com/kaizhu256/node-utility2/tree/gh-pages/build..master..travis-ci.org) | [![build-artifacts](https://kaizhu256.github.io/node-utility2/glyphicons_144_folder_open.png)](https://github.com/kaizhu256/node-utility2/tree/gh-pages/build..beta..travis-ci.org) | [![build-artifacts](https://kaizhu256.github.io/node-utility2/glyphicons_144_folder_open.png)](https://github.com/kaizhu256/node-utility2/tree/gh-pages/build..alpha..travis-ci.org)|\n\n#### master branch\n- stable branch\n- HEAD should be tagged, npm-published package\n\n#### beta branch\n- semi-stable branch\n- HEAD should be latest, npm-published package\n\n#### alpha branch\n- unstable branch\n- HEAD is arbitrary\n- commit history may be rewritten\n\n\n\n# quickstart interactive example\n#### to run this example, follow the instruction in the script below\n- [example.sh](https://kaizhu256.github.io/node-utility2/build/example.sh)\n```shell\n# example.sh\n\n# this shell script will\n    # npm install utility2\n    # serve a webpage that will interactively run browser tests with coverage\n\n# instruction\n    # 1. copy and paste this entire shell script into a console and press enter\n    # 2. open a browser to http://localhost:8081\n    # 3. edit or paste script in browser to cover and test\n\nshExampleSh() {(set -e\n    # npm install utility2\n    npm install utility2\n\n    # serve a webpage that will interactively run browser tests with coverage\n    cd node_modules/utility2 && export PORT=8081 && npm start\n)}\nshExampleSh\n```\n\n#### output from electron\n![screen-capture](https://kaizhu256.github.io/node-utility2/build/screen-capture.testExampleSh.browser..png)\n\n#### output from shell\n![screen-capture](https://kaizhu256.github.io/node-utility2/build/screen-capture.testExampleSh.svg)\n\n\n\n# quickstart node example\n![screen-capture](https://kaizhu256.github.io/node-utility2/build/screen-capture.testExampleJs.browser._2Ftmp_2Fapp_2Ftmp_2Fbuild_2Ftest-report.html.png)\n\n#### to run this example, follow the instruction in the script below\n- [example.js](https://kaizhu256.github.io/node-utility2/build/example.js)\n```javascript\n/*\nexample.js\n\nthis shared browser / node script will run browser tests with coverage\n(via istanbul and electron)\n\ninstruction\n    1. save this js script as example.js\n    2. run the shell command:\n        $ npm install electron-lite utility2 && \\\n            export PATH=\"$(pwd)/node_modules/.bin:$PATH\" && \\\n            export PORT=8081 && \\\n            export npm_config_mode_coverage=1 && \\\n            node_modules/.bin/utility2 test node example.js\n    3. view test-report in ./tmp/build/test-report.html\n    4. view coverage in ./tmp/build/coverage.html/index.html\n*/\n\n/* istanbul instrument in package utility2 */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        /* istanbul ignore next */\n        // init local\n        local = local.modeJs === 'browser'\n            ? window.utility2.local\n            : module.isRollup\n            ? module\n            : require('utility2').local;\n        // export local\n        local.global.local = local;\n        // init envDict\n        local.utility2.objectSetDefault(local.utility2.envDict, {\n            npm_package_description: 'undefined module',\n            npm_package_name: 'undefined',\n            npm_package_version: '0.0.1'\n        });\n        // init middleware\n        local.middleware = local.utility2.middlewareGroupCreate([\n            local.utility2.middlewareInit,\n            local.utility2.middlewareAssetsCached,\n            local.utility2.middlewareJsonpStateGet\n        ]);\n        // init error-middleware\n        local.middlewareError = local.utility2.middlewareError;\n        // run server-test\n        local.utility2.testRunServer(local);\n        // init assets\n        local.utility2.assetsDict['/assets.hello'] = 'hello';\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        // init tests\n        local.testCase_ajax_200 = function (options, onError) {\n        /*\n         * this function will test ajax's \"200 ok\" handling-behavior\n         */\n            options = {};\n            // test ajax-path 'assets.hello'\n            local.utility2.ajax({\n                url: 'assets.hello'\n            }, function (error, xhr) {\n                local.utility2.tryCatchOnError(function () {\n                    // validate no error occurred\n                    local.utility2.assert(!error, error);\n                    // validate data\n                    options.data = xhr.responseText;\n                    local.utility2.assert(options.data === 'hello', options.data);\n                    onError();\n                }, onError);\n            });\n        };\n        local.testCase_ajax_404 = function (options, onError) {\n        /*\n         * this function will test ajax's \"404 not found\" handling-behavior\n         */\n            options = {};\n            // test ajax-path '/undefined'\n            local.utility2.ajax({ url: '/undefined' }, function (error) {\n                local.utility2.tryCatchOnError(function () {\n                    // validate error occurred\n                    local.utility2.assert(error, error);\n                    options.statusCode = error.statusCode;\n                    // validate 404 http statusCode\n                    local.utility2.assert(options.statusCode === 404, options.statusCode);\n                    onError();\n                }, onError);\n            });\n        };\n        /* istanbul ignore next */\n        local.testRun = function (event) {\n            if (local.utility2.modeTest) {\n                return;\n            }\n            switch (event && event.currentTarget.id) {\n            case 'testRunButton1':\n                local.modeTest = true;\n                local.utility2.testRun(local);\n                break;\n            default:\n                // try to JSON.stringify .jsonStringifyInputTextarea\n                try {\n                    document.querySelector('.jsonStringifyPre').textContent =\n                        local.utility2.jsonStringifyOrdered(\n                            JSON.parse(\n                                document.querySelector('.jsonStringifyInputTextarea').value\n                            ),\n                            null,\n                            4\n                        );\n                } catch (ignore) {\n                }\n                // jslint .jslintInputTextarea\n                local.utility2.jslint.jslintAndPrint(\n                    document.querySelector('.jslintInputTextarea').value,\n                    'jslintInputTextarea.js'\n                );\n                document.querySelector('.jslintOutputPre').textContent =\n                    local.utility2.jslint.errorText\n                    .replace((/\\u001b\\[\\d+m/g), '')\n                    .trim();\n                // try to cleanup __coverage__\n                try {\n                    delete local.global.__coverage__['/istanbulInputTextarea.js'];\n                } catch (ignore) {\n                }\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(local.utility2.istanbul.instrumentSync(\n                        document.querySelector('.istanbulInputTextarea').value,\n                        '/istanbulInputTextarea.js'\n                    ));\n                    local.utility2.istanbul.coverageReportCreate({\n                        coverage: window.__coverage__\n                    });\n                } catch (errorCaught) {\n                    document.querySelector('.istanbulCoverageDiv').innerHTML =\n                        '<pre>' + errorCaught.stack.replace((/</g), '&lt') + '</pre>';\n                }\n            }\n        };\n        // init event-handling\n        document.querySelector('.istanbulInputTextarea')\n            .addEventListener('keyup', local.testRun);\n        document.querySelector('#testRunButton1').addEventListener('click', local.testRun);\n        // run tests\n        local.testRun();\n        break;\n\n\n\n    // run node js-env code - post-init\n    case 'node':\n        // init tests\n        local.testCase_webpage_default = function (options, onError) {\n        /*\n         * this function will test the webpage's default handling-behavior\n         */\n            options = {\n                modeCoverageMerge: true,\n                url: 'http://localhost:' + local.utility2.envDict.PORT +\n                    '?modeTest=consoleLogResult'\n            };\n            local.utility2.browserTest(options, onError);\n        };\n        // export local\n        module.exports = local;\n        // init assets\n        local.utility2.tryCatchOnError(function () {\n            local.utility2.assetsDict['/assets.example.js'] =\n                local.fs.readFileSync(__filename, 'utf8');\n        }, local.utility2.nop);\n        /* jslint-ignore-begin */\n        local.utility2.templateIndexHtml = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<title>\\n\\\n{{envDict.npm_package_name}} v{{envDict.npm_package_version}}\\n\\\n</title>\\n\\\n<link href=\"assets.utility2.css\" rel=\"stylesheet\">\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background-color: #fff;\\n\\\n    font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 32rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\n.jslintOutputPre {\\n\\\n    color: #f00;\\n\\\n}\\n\\\n.testReportDiv {\\n\\\n    display: none;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n    <div class=\"ajaxProgressDiv\" style=\"display: block;\">\\n\\\n        <div class=\"ajaxProgressBarDiv ajaxProgressBarDivLoading\">loading</div>\\n\\\n    </div>\\n\\\n    <h1>\\n\\\n        <a\\n\\\n            {{#if envDict.npm_package_homepage}}\\n\\\n            href=\"{{envDict.npm_package_homepage}}\"\\n\\\n            {{/if envDict.npm_package_homepage}}\\n\\\n            target=\"_blank\"\\n\\\n        >{{envDict.npm_package_name}} v{{envDict.npm_package_version}}</a>\\n\\\n        {{#if envDict.NODE_ENV}}\\n\\\n        (NODE_ENV={{envDict.NODE_ENV}})\\n\\\n        {{/if envDict.NODE_ENV}}\\n\\\n    </h1>\\n\\\n    <h3>{{envDict.npm_package_description}}</h3>\\n\\\n    <h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n    <button id=\"testRunButton1\">run internal test</button><br>\\n\\\n    <div>edit or paste script below to cover and test</div>\\n\\\n<textarea class=\"istanbulInputTextarea jslintInputTextarea jsonStringifyInputTextarea\">\\n\\\n/*jslint browser: true*/\\n\\\n(function () {\\n\\\n    \"use strict\";\\n\\\n    var testCaseDict;\\n\\\n    testCaseDict = {};\\n\\\n    testCaseDict.modeTest = true;\\n\\\n\\n\\\n    // comment this testCase to disable the failed assertion demo\\n\\\n    testCaseDict.testCase_failed_assertion_demo = function (\\n\\\n        options,\\n\\\n        onError\\n\\\n    ) {\\n\\\n    /*\\n\\\n     * this function will demo a failed assertion test\\n\\\n     */\\n\\\n        // jslint-hack\\n\\\n        window.utility2.nop(options);\\n\\\n        window.utility2.assert(false, \"this is a failed assertion demo\");\\n\\\n        onError();\\n\\\n    };\\n\\\n\\n\\\n    testCaseDict.testCase_passed_ajax_demo = function (options, onError) {\\n\\\n    /*\\n\\\n     * this function will demo a passed ajax test\\n\\\n     */\\n\\\n        var data;\\n\\\n        options = { url: \"/\" };\\n\\\n        // test ajax request for main-page \"/\"\\n\\\n        window.utility2.ajax(options, function (error, xhr) {\\n\\\n            try {\\n\\\n                // validate no error occurred\\n\\\n                window.utility2.assert(!error, error);\\n\\\n                // validate non-empty data\\n\\\n                data = xhr.responseText;\\n\\\n                window.utility2.assert(data && data.length > 0, data);\\n\\\n                // validate \"200 ok\" status\\n\\\n                if (xhr.statusCode === 200) {\\n\\\n                    window.utility2.assert(data, data);\\n\\\n                }\\n\\\n                onError();\\n\\\n            } catch (errorCaught) {\\n\\\n                onError(errorCaught);\\n\\\n            }\\n\\\n        });\\n\\\n    };\\n\\\n\\n\\\n    if (!window.utility2.modeTest) {\\n\\\n        window.utility2.testRun(testCaseDict);\\n\\\n    }\\n\\\n}());\\n\\\n</textarea>\\n\\\n    <pre class=\"jsonStringifyPre\"></pre>\\n\\\n    <pre class=\"jslintOutputPre\"></pre>\\n\\\n    <div class=\"testReportDiv\"></div>\\n\\\n    <div class=\"istanbulCoverageDiv\"></div>\\n\\\n    {{#if isRollup}}\\n\\\n    <script src=\"assets.app.min.js\"></script>\\n\\\n    <script src=\"jsonp.utility2.stateGet?callback=window.utility2.stateInit\"></script>\\n\\\n    {{#unless isRollup}}\\n\\\n    <script src=\"assets.utility2.lib.bcrypt.js\"></script>\\n\\\n    <script src=\"assets.utility2.lib.cryptojs.js\"></script>\\n\\\n    <script src=\"assets.utility2.lib.istanbul.js\"></script>\\n\\\n    <script src=\"assets.utility2.lib.jslint.js\"></script>\\n\\\n    <script src=\"assets.utility2.lib.nedb.js\"></script>\\n\\\n    <script src=\"assets.utility2.lib.uglifyjs.js\"></script>\\n\\\n    <script src=\"assets.utility2.js\"></script>\\n\\\n    <script src=\"jsonp.utility2.stateGet?callback=window.utility2.stateInit\"></script>\\n\\\n<script>\\n\\\n/*jslint browser: true*/\\n\\\nwindow.utility2.onReadyBefore.counter += 1;\\n\\\n</script>\\n\\\n    <script src=\"assets.example.js\"></script>\\n\\\n    <script src=\"assets.test.js\"></script>\\n\\\n<script>\\n\\\n/*jslint browser: true*/\\n\\\nwindow.utility2.onReadyBefore();\\n\\\n</script>\\n\\\n    {{/if isRollup}}\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        local.utility2.assetsDict['/'] = local.utility2.templateRender(\n            local.utility2.templateIndexHtml,\n            { envDict: local.utility2.envDict }\n        );\n        break;\n    }\n}());\n```\n\n#### output from utility2\n![screen-capture](https://kaizhu256.github.io/node-utility2/build/screen-capture.testExampleJs.browser._2Ftmp_2Fapp_2Ftmp_2Fbuild_2Ftest-report.html.png)\n\n#### output from istanbul\n![screen-capture](https://kaizhu256.github.io/node-utility2/build/screen-capture.testExampleJs.browser._2Ftmp_2Fapp_2Ftmp_2Fbuild_2Fcoverage.html_2Fapp_2Fexample.js.html.png)\n\n#### output from shell\n![screen-capture](https://kaizhu256.github.io/node-utility2/build/screen-capture.testExampleJs.svg)\n\n\n\n# package.json\n```json\n{\n    \"package.json\": true,\n    \"author\": \"kai zhu <kaizhu256@gmail.com>\",\n    \"bin\": {\n        \"utility2\": \"index.sh\",\n        \"utility2-bcrypt\": \"lib.bcrypt.js\",\n        \"utility2-istanbul\": \"lib.istanbul.js\",\n        \"utility2-jslint\": \"lib.jslint.js\",\n        \"utility2-uglifyjs\": \"lib.uglifyjs.js\"\n    },\n    \"description\": \"{{packageJson.description}}\",\n    \"devDependencies\": {\n        \"electron-lite\": \"kaizhu256/node-electron-lite#alpha\"\n    },\n    \"engines\": { \"node\": \">=4.0\" },\n    \"homepage\": \"https://github.com/kaizhu256/node-utility2\",\n    \"keywords\": [\n        \"atom\", \"atom-shell\",\n        \"browser\", \"build\",\n        \"ci\", \"code\", \"continuous-integration\", \"cover\", \"coverage\",\n        \"electron\",\n        \"headless\", \"headless-browser\",\n        \"instrument\", \"istanbul\",\n        \"jscover\", \"jscoverage\",\n        \"phantom\", \"phantomjs\",\n        \"slimer\", \"slimerjs\",\n        \"test\", \"travis\", \"travis-ci\",\n        \"web\"\n    ],\n    \"license\": \"MIT\",\n    \"name\": \"utility2\",\n    \"os\": [\"darwin\", \"linux\"],\n    \"repository\": {\n        \"type\": \"git\",\n        \"url\": \"https://github.com/kaizhu256/node-utility2.git\"\n    },\n    \"scripts\": {\n        \"build-app\": \"npm test --mode-test-case=testCase_build_app\",\n        \"build-ci\": \"./index.sh shRun shReadmeBuild\",\n        \"build-doc\": \"npm test --mode-test-case=testCase_build_doc\",\n        \"env\": \"env\",\n        \"example.js\": \"\\\n. ./index.sh && \\\nshInit && \\\nshFileTrimLeft tmp/README.example.js && \\\nshRunScreenCapture shReadmeTestJs example.js\",\n        \"example.sh\": \"./index.sh shRunScreenCapture shReadmeTestSh example.sh\",\n        \"start\": \"\\\nexport PORT=${PORT:-8080} && \\\nif [ -f assets.app.js ]; then node assets.app.js; return; fi && \\\nexport npm_config_mode_auto_restart=1 && \\\n./index.sh shRun shIstanbulCover node test.js\",\n        \"start-heroku\": \"\\\nexport npm_config_mode_backend=1 && \\\nnpm start \\\n\",\n        \"test\": \"\\\nexport PORT=$(./index.sh shServerPortRandom) && \\\nexport npm_config_mode_auto_restart=1 && \\\n./index.sh test node test.js\",\n        \"test-published\": \"./index.sh shRun shNpmTestPublished\"\n    },\n    \"version\": \"2016.5.5\"\n}\n```\n\n\n\n# changelog of last 50 commits\n[![screen-capture](https://kaizhu256.github.io/node-utility2/build/screen-capture.gitLog.svg)](https://github.com/kaizhu256/node-utility2/commits)\n\n\n\n# internal build-script\n- Dockerfile.emscripten\n```shell\n# Dockerfile.emscripten\n# docker build -f tmp/README.Dockerfile.emscripten -t emscripten .\nFROM kaizhu256/node-utility2:latest\nMAINTAINER kai zhu <kaizhu256@gmail.com>\n# https://kripken.github.io/emscripten-site/docs\n# /building_from_source/building_emscripten_from_source_using_the_sdk.html\n# build emscripten v1.36.0\nRUN cd / && \\\n    git clone https://github.com/juj/emsdk.git --branch=master --single-branch && \\\n    cd /emsdk && \\\n    ./emsdk install -j2 --shallow sdk-master-64bit && \\\n    ./emsdk activate && \\\n    find . -name \".git\" -print0 | xargs -0 rm -fr && \\\n    find . -name \"src\" -print0 | xargs -0 rm -fr\n```\n\n- Dockerfile.latest\n```shell\n# Dockerfile.latest\n# https://hub.docker.com/_/node/\nFROM node:latest\nMAINTAINER kai zhu <kaizhu256@gmail.com>\nVOLUME [ \\\n  \"/mnt\", \\\n  \"/root\", \\\n  \"/tmp\", \\\n  \"/var/cache\", \\\n  \"/var/lib/apt/lists\", \\\n  \"/var/log\", \\\n  \"/var/tmp\" \\\n]\nWORKDIR /tmp\n# cache apt-get\nRUN apt-get update && \\\n    apt-get install -y \\\n        busybox \\\n        chromium \\\n        cmake \\\n        default-jre \\\n        gconf2 \\\n        less \\\n        libnotify4 \\\n        vim \\\n        xvfb\n# cache electron-lite\nRUN npm install electron-lite && \\\n    cp /tmp/electron-*.zip /\n```\n\n- build.sh\n```shell\n# build.sh\n\n# this shell script will run the build for this package\n\nshBuildCiTestPre() {(set -e\n# this function will run the pre-test build\n    # test example js script\n    (export MODE_BUILD=testExampleJs &&\n        npm run example.js) || return $?\n    # screen-capture example.js coverage\n    (export MODE_BUILD=testExampleJs &&\n        export modeBrowserTest=screenCapture &&\n        export url=/tmp/app/tmp/build/coverage.html/app/example.js.html &&\n        shBrowserTest) || return $?\n    # screen-capture example.js test-report\n    (export MODE_BUILD=testExampleJs &&\n        export modeBrowserTest=screenCapture &&\n        export url=/tmp/app/tmp/build/test-report.html &&\n        shBrowserTest) || return $?\n    # test example shell script\n    (export MODE_BUILD=testExampleSh &&\n        export npm_config_timeout_exit=1000 &&\n        npm run example.sh) || return $?\n)}\n\nshBuildCiTestPost() {(set -e\n# this function will run the post-test build\n    # if running legacy-node, then return\n    [ \"$(node --version)\" \\< \"v5.0\" ] && return || true\n    export NODE_ENV=production\n    # deploy app to gh-pages\n    export TEST_URL=\"https://$(printf \"$GITHUB_REPO\" | \\\n        sed 's/\\//.github.io\\//')/build..$CI_BRANCH..travis-ci.org/app/index.html\"\n    (export MODE_BUILD=githubDeploy &&\n        shGithubDeploy) || return $?\n    # test deployed app to gh-pages\n    (export MODE_BUILD=githubTest &&\n        export modeBrowserTest=test &&\n        export url=\"$TEST_URL?modeTest=consoleLogResult&timeExit={{timeExit}}\" &&\n        shBrowserTest) || return $?\n    # deploy app to heroku\n    export HEROKU_REPO=\"hrku01-$npm_package_name-$CI_BRANCH\"\n    export TEST_URL=\"https://$HEROKU_REPO.herokuapp.com\"\n    shGitRepoBranchUpdateLocal() {(set -e\n    # this function will local-update git-repo-branch\n        cp \"$npm_config_dir_build/app/assets.app.js\" .\n    )}\n    (export MODE_BUILD=herokuDeploy &&\n        shHerokuDeploy) || return $?\n    # test deployed app to heroku\n    (export MODE_BUILD=herokuTest &&\n        export modeBrowserTest=test &&\n        export url=\"$TEST_URL?modeTest=consoleLogResult&timeExit={{timeExit}}\" &&\n        shBrowserTest) || return $?\n)}\n\nshBuild() {(set -e\n# this function will run the main build\n    # init env\n    . ./index.sh && shInit\n    # cleanup github-gh-pages dir\n    export BUILD_GITHUB_UPLOAD_PRE_SH=\"rm -fr build\"\n    # init github-gh-pages commit-limit\n    export COMMIT_LIMIT=16\n    # if branch is alpha, beta, or master, then run default build\n    if [ \"$CI_BRANCH\" = alpha ] ||\n        [ \"$CI_BRANCH\" = beta ] ||\n        [ \"$CI_BRANCH\" = master ]\n    then\n        shBuildCiDefault\n    fi\n    # docker build\n    docker --version 2>/dev/null || return\n    # if running legacy-node, then return\n    [ \"$TRAVIS\" ] && [ \"$(node --version)\" \\< \"v5.0\" ] && return || true\n    export DOCKER_TAG=\"$(printf \"$CI_BRANCH\" | sed -e \"s/docker.//\")\"\n    # if $DOCKER_TAG is not unique from $CI_BRANCH, then return\n    [ \"$DOCKER_TAG\" = \"$CI_BRANCH\" ] && return || true\n    # docker pull\n    docker pull \"$GITHUB_REPO:$DOCKER_TAG\" || true\n    # docker build\n    (printf \"0\" > \"$npm_config_file_tmp\" &&\n        docker build -f \"tmp/README.Dockerfile.$DOCKER_TAG\" -t \"$GITHUB_REPO:$DOCKER_TAG\" . ||\n        printf $? > \"$npm_config_file_tmp\") | tee \"tmp/build/build.$CI_BRANCH.log\"\n    EXIT_CODE=\"$(cat \"$npm_config_file_tmp\")\"\n    [ \"$EXIT_CODE\" != 0 ] && return \"$EXIT_CODE\" || true\n    # docker test\n    case \"$CI_BRANCH\" in\n    docker.latest)\n        # npm test utility2\n        for PACKAGE in utility2 \"kaizhu256/node-utility2#alpha\"\n        do\n            docker run \"$GITHUB_REPO:$DOCKER_TAG\" /bin/bash -c \"set -e\n                curl https://raw.githubusercontent.com\\\n/kaizhu256/node-utility2/alpha/index.sh > /tmp/index.sh\n                . /tmp/index.sh\n                npm install '$PACKAGE'\n                cd node_modules/utility2\n                shBuildInsideDocker\n            \"\n        done\n        ;;\n    esac\n    # https://docs.travis-ci.com/user/docker/#Pushing-a-Docker-Image-to-a-Registry\n    # docker push\n    if [ \"$DOCKER_PASSWORD\" ]\n    then\n        docker login -e=\"$DOCKER_EMAIL\" -u=\"$DOCKER_USERNAME\" -p=\"$DOCKER_PASSWORD\"\n        docker push \"$GITHUB_REPO:$DOCKER_TAG\"\n    fi\n)}\nshBuild\n```\n"
}