{
  "package.json": true,
  "author": {
    "name": "kai zhu",
    "email": "kaizhu256@gmail.com"
  },
  "bin": {
    "istanbul-lite": "index.js"
  },
  "description": "this package will run a standalone, browser-compatible version of the istanbul coverage-tool with zero npm-dependencies",
  "devDependencies": {
    "electron-lite": "github:kaizhu256/node-electron-lite#alpha",
    "utility2": "github:kaizhu256/node-utility2#alpha"
  },
  "engines": {
    "node": ">=4.0"
  },
  "homepage": "https://github.com/kaizhu256/node-istanbul-lite",
  "keywords": [
    "browser",
    "code",
    "cover",
    "coverage",
    "instrument",
    "istanbul",
    "jscover",
    "jscoverage",
    "web"
  ],
  "license": "MIT",
  "name": "istanbul-lite",
  "os": [
    "darwin",
    "linux"
  ],
  "repository": {
    "user": "kaizhu256",
    "repo": "node-istanbul-lite",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/kaizhu256/node-istanbul-lite/tarball/master",
    "clone_url": "https://github.com/kaizhu256/node-istanbul-lite",
    "https_url": "https://github.com/kaizhu256/node-istanbul-lite",
    "travis_url": "https://travis-ci.org/kaizhu256/node-istanbul-lite",
    "zip_url": "https://github.com/kaizhu256/node-istanbul-lite/archive/master.zip",
    "api_url": "https://api.github.com/repos/kaizhu256/node-istanbul-lite"
  },
  "scripts": {
    "build-ci": "utility2 shRun shReadmeBuild",
    "start": "export PORT=${PORT:-8080} && export npm_config_mode_auto_restart=1 && utility2 shRun shIstanbulCover test.js",
    "test": "export PORT=$(utility2 shServerPortRandom) && utility2 test test.js"
  },
  "version": "2015.7.2",
  "_npmVersion": "3.10.3",
  "_nodeVersion": "6.3.1",
  "dist": {
    "shasum": "6ca917db7e91dd5c14d8e277812625b2f045b4ba",
    "tarball": "http://registry.npmjs.org/istanbul-lite/-/istanbul-lite-2015.7.2.tgz"
  },
  "stars": 1,
  "versions": [
    {
      "number": "2014.7.27-1",
      "date": "2014-07-28T09:52:03.078Z"
    },
    {
      "number": "2014.8.7-10",
      "date": "2014-08-06T11:01:48.288Z"
    },
    {
      "number": "2014.8.7-11",
      "date": "2014-08-06T16:33:35.335Z"
    },
    {
      "number": "2015.2.10-10",
      "date": "2015-02-10T09:23:43.680Z"
    },
    {
      "number": "2015.2.10-11",
      "date": "2015-02-10T09:34:16.969Z"
    },
    {
      "number": "2015.2.10-12",
      "date": "2015-02-10T10:38:13.087Z"
    },
    {
      "number": "2015.2.10-14",
      "date": "2015-02-10T13:16:14.757Z"
    },
    {
      "number": "2015.2.10-15",
      "date": "2015-02-10T13:45:46.522Z"
    },
    {
      "number": "2015.2.10-16",
      "date": "2015-02-10T14:06:37.919Z"
    },
    {
      "number": "2015.2.10-17",
      "date": "2015-02-10T14:25:12.400Z"
    },
    {
      "number": "2015.2.10-18",
      "date": "2015-02-10T16:59:45.256Z"
    },
    {
      "number": "2015.2.18-10",
      "date": "2015-02-18T04:55:01.305Z"
    },
    {
      "number": "2015.2.19-10",
      "date": "2015-02-19T01:14:27.832Z"
    },
    {
      "number": "2015.2.21-10",
      "date": "2015-02-21T11:55:14.206Z"
    },
    {
      "number": "2015.2.21-11",
      "date": "2015-02-21T12:15:50.083Z"
    },
    {
      "number": "2015.2.23-10",
      "date": "2015-02-23T01:01:43.667Z"
    },
    {
      "number": "2015.2.23-11",
      "date": "2015-02-23T02:10:55.564Z"
    },
    {
      "number": "2015.2.24-10",
      "date": "2015-02-24T10:31:30.256Z"
    },
    {
      "number": "2015.2.24-11",
      "date": "2015-02-24T10:39:12.673Z"
    },
    {
      "number": "2015.2.24-12",
      "date": "2015-02-24T14:16:48.784Z"
    },
    {
      "number": "2015.2.24-13",
      "date": "2015-02-24T15:29:02.479Z"
    },
    {
      "number": "2015.2.24-14",
      "date": "2015-02-24T17:59:39.444Z"
    },
    {
      "number": "2015.2.24-15",
      "date": "2015-02-24T18:54:54.292Z"
    },
    {
      "number": "2015.2.27-10",
      "date": "2015-02-26T17:17:32.405Z"
    },
    {
      "number": "2015.2.28-10",
      "date": "2015-02-28T14:02:14.976Z"
    },
    {
      "number": "2015.2.28-11",
      "date": "2015-02-28T14:32:31.159Z"
    },
    {
      "number": "2015.3.1-10",
      "date": "2015-03-01T07:03:46.508Z"
    },
    {
      "number": "2015.3.1-11",
      "date": "2015-03-01T09:50:44.870Z"
    },
    {
      "number": "2015.3.2-10",
      "date": "2015-03-01T18:47:19.117Z"
    },
    {
      "number": "2015.3.2-11",
      "date": "2015-03-01T19:19:15.022Z"
    },
    {
      "number": "2015.3.2-12",
      "date": "2015-03-02T11:53:30.819Z"
    },
    {
      "number": "2015.3.5-10",
      "date": "2015-03-05T06:53:09.171Z"
    },
    {
      "number": "2015.3.5-11",
      "date": "2015-03-05T11:18:37.902Z"
    },
    {
      "number": "2015.3.5-12",
      "date": "2015-03-05T12:59:20.425Z"
    },
    {
      "number": "2015.3.6-10",
      "date": "2015-03-06T08:52:47.809Z"
    },
    {
      "number": "2015.3.6-11",
      "date": "2015-03-06T12:39:58.059Z"
    },
    {
      "number": "2015.3.6-12",
      "date": "2015-03-06T14:23:49.487Z"
    },
    {
      "number": "2015.3.6-13",
      "date": "2015-03-06T14:36:14.132Z"
    },
    {
      "number": "2015.3.7-12",
      "date": "2015-03-07T18:47:03.623Z"
    },
    {
      "number": "2015.3.8-11",
      "date": "2015-03-08T15:35:45.551Z"
    },
    {
      "number": "2015.3.14-10",
      "date": "2015-03-14T12:05:10.102Z"
    },
    {
      "number": "2015.3.19-10",
      "date": "2015-03-19T01:27:47.908Z"
    },
    {
      "number": "2015.3.24-10",
      "date": "2015-03-24T10:20:29.800Z"
    },
    {
      "number": "2015.3.24-11",
      "date": "2015-03-24T12:51:21.802Z"
    },
    {
      "number": "2015.4.2-10",
      "date": "2015-04-02T03:04:34.897Z"
    },
    {
      "number": "2015.4.2-11",
      "date": "2015-04-02T09:26:51.990Z"
    },
    {
      "number": "2015.4.9-a",
      "date": "2015-04-09T09:43:29.781Z"
    },
    {
      "number": "2015.4.24-a",
      "date": "2015-04-24T17:19:06.922Z"
    },
    {
      "number": "2015.4.26-a",
      "date": "2015-04-26T07:06:04.928Z"
    },
    {
      "number": "2015.4.26-b",
      "date": "2015-04-26T07:16:02.209Z"
    },
    {
      "number": "2015.4.26-c",
      "date": "2015-04-26T13:51:36.089Z"
    },
    {
      "number": "2015.5.6-a",
      "date": "2015-05-06T19:26:11.839Z"
    },
    {
      "number": "2015.5.28-a",
      "date": "2015-05-28T03:41:34.496Z"
    },
    {
      "number": "0.3.14-2015.6.1-a",
      "date": "2015-06-09T07:39:30.916Z"
    },
    {
      "number": "0.3.15-20150620b",
      "date": "2015-06-20T06:02:37.703Z"
    },
    {
      "number": "2015.6.1",
      "date": "2015-06-24T14:03:23.608Z"
    },
    {
      "number": "2015.6.2",
      "date": "2015-07-31T08:41:17.724Z"
    },
    {
      "number": "2015.8.1",
      "date": "2015-08-20T08:36:32.831Z"
    },
    {
      "number": "2015.8.2",
      "date": "2015-09-04T18:36:03.963Z"
    },
    {
      "number": "2015.9.1",
      "date": "2015-09-25T14:34:58.688Z"
    },
    {
      "number": "2015.7.1",
      "date": "2016-08-09T23:48:08.747Z"
    },
    {
      "number": "2015.7.2",
      "date": "2016-08-26T22:14:37.236Z"
    }
  ],
  "created": "2014-07-28T09:52:03.078Z",
  "modified": "2016-08-26T22:14:37.236Z",
  "lastPublisher": {
    "name": "kaizhu",
    "email": "kaizhu256@gmail.com"
  },
  "owners": [
    {
      "name": "kaizhu",
      "email": "kaizhu256@gmail.com"
    }
  ],
  "readme": "istanbul-lite\n=============\nthis package will run a standalone, browser-compatible version of the istanbul coverage-tool with zero npm-dependencies\n\n[![travis-ci.org build-status](https://api.travis-ci.org/kaizhu256/node-istanbul-lite.svg)](https://travis-ci.org/kaizhu256/node-istanbul-lite)\n\n[![NPM](https://nodei.co/npm/istanbul-lite.png?downloads=true)](https://www.npmjs.com/package/istanbul-lite)\n\n[![package-listing](https://kaizhu256.github.io/node-istanbul-lite/build/screen-capture.gitLsTree.svg)](https://github.com/kaizhu256/node-istanbul-lite)\n\n\n\n# live demo\n- [https://kaizhu256.github.io/node-istanbul-lite/build..beta..travis-ci.org/app/index.html](https://kaizhu256.github.io/node-istanbul-lite/build..beta..travis-ci.org/app/index.html)\n\n[![github.com test-server](https://kaizhu256.github.io/node-istanbul-lite/build/screen-capture.githubDeploy.browser._2Fnode-istanbul-lite_2Fbuild..alpha..travis-ci.org_2Fapp_2Findex.html.png)](https://kaizhu256.github.io/node-istanbul-lite/build..beta..travis-ci.org/app/index.html)\n\n\n\n# documentation\n#### todo\n- none\n\n#### change since 03cfd082\n- npm publish 2015.7.2\n- streamline build\n- none\n\n#### this package requires\n- darwin or linux os\n\n#### additional info\n- istanbul derived from https://github.com/gotwarlost/istanbul/tree/v0.2.16 (this version does not support es6 or higher)\n\n#### api-doc\n- [https://kaizhu256.github.io/node-istanbul-lite/build/doc.api.html](https://kaizhu256.github.io/node-istanbul-lite/build/doc.api.html)\n\n[![api-doc](https://kaizhu256.github.io/node-istanbul-lite/build/screen-capture.docApiCreate.browser._2Fhome_2Ftravis_2Fbuild_2Fkaizhu256_2Fnode-istanbul-lite_2Ftmp_2Fbuild_2Fdoc.api.html.png)](https://kaizhu256.github.io/node-istanbul-lite/build/doc.api.html)\n\n\n\n# build-status [![travis-ci.org build-status](https://api.travis-ci.org/kaizhu256/node-istanbul-lite.svg)](https://travis-ci.org/kaizhu256/node-istanbul-lite)\n[![build commit status](https://kaizhu256.github.io/node-istanbul-lite/build/build.badge.svg)](https://travis-ci.org/kaizhu256/node-istanbul-lite)\n\n| git-branch : | [master](https://github.com/kaizhu256/node-istanbul-lite/tree/master) | [beta](https://github.com/kaizhu256/node-istanbul-lite/tree/beta) | [alpha](https://github.com/kaizhu256/node-istanbul-lite/tree/alpha)|\n|--:|:--|:--|:--|\n| test-server 1 : | [![github.com test-server](https://kaizhu256.github.io/node-istanbul-lite/GitHub-Mark-32px.png)](https://kaizhu256.github.io/node-istanbul-lite/build..master..travis-ci.org/app/index.html) | [![github.com test-server](https://kaizhu256.github.io/node-istanbul-lite/GitHub-Mark-32px.png)](https://kaizhu256.github.io/node-istanbul-lite/build..beta..travis-ci.org/app/index.html) | [![github.com test-server](https://kaizhu256.github.io/node-istanbul-lite/GitHub-Mark-32px.png)](https://kaizhu256.github.io/node-istanbul-lite/build..alpha..travis-ci.org/app/index.html)|\n| test-server 2 : | [![heroku.com test-server](https://kaizhu256.github.io/node-istanbul-lite/heroku-logo.75x25.png)](https://hrku01-istanbul-lite-master.herokuapp.com) | [![heroku.com test-server](https://kaizhu256.github.io/node-istanbul-lite/heroku-logo.75x25.png)](https://hrku01-istanbul-lite-beta.herokuapp.com) | [![heroku.com test-server](https://kaizhu256.github.io/node-istanbul-lite/heroku-logo.75x25.png)](https://hrku01-istanbul-lite-alpha.herokuapp.com)|\n| test-report : | [![test-report](https://kaizhu256.github.io/node-istanbul-lite/build..master..travis-ci.org/test-report.badge.svg)](https://kaizhu256.github.io/node-istanbul-lite/build..master..travis-ci.org/test-report.html) | [![test-report](https://kaizhu256.github.io/node-istanbul-lite/build..beta..travis-ci.org/test-report.badge.svg)](https://kaizhu256.github.io/node-istanbul-lite/build..beta..travis-ci.org/test-report.html) | [![test-report](https://kaizhu256.github.io/node-istanbul-lite/build..alpha..travis-ci.org/test-report.badge.svg)](https://kaizhu256.github.io/node-istanbul-lite/build..alpha..travis-ci.org/test-report.html)|\n| coverage : | [![istanbul coverage](https://kaizhu256.github.io/node-istanbul-lite/build..master..travis-ci.org/coverage.badge.svg)](https://kaizhu256.github.io/node-istanbul-lite/build..master..travis-ci.org/coverage.html/index.html) | [![istanbul coverage](https://kaizhu256.github.io/node-istanbul-lite/build..beta..travis-ci.org/coverage.badge.svg)](https://kaizhu256.github.io/node-istanbul-lite/build..beta..travis-ci.org/coverage.html/index.html) | [![istanbul coverage](https://kaizhu256.github.io/node-istanbul-lite/build..alpha..travis-ci.org/coverage.badge.svg)](https://kaizhu256.github.io/node-istanbul-lite/build..alpha..travis-ci.org/coverage.html/index.html)|\n| build-artifacts : | [![build-artifacts](https://kaizhu256.github.io/node-istanbul-lite/glyphicons_144_folder_open.png)](https://github.com/kaizhu256/node-istanbul-lite/tree/gh-pages/build..master..travis-ci.org) | [![build-artifacts](https://kaizhu256.github.io/node-istanbul-lite/glyphicons_144_folder_open.png)](https://github.com/kaizhu256/node-istanbul-lite/tree/gh-pages/build..beta..travis-ci.org) | [![build-artifacts](https://kaizhu256.github.io/node-istanbul-lite/glyphicons_144_folder_open.png)](https://github.com/kaizhu256/node-istanbul-lite/tree/gh-pages/build..alpha..travis-ci.org)|\n\n#### master branch\n- stable branch\n- HEAD should be tagged, npm-published package\n\n#### beta branch\n- semi-stable branch\n- HEAD should be latest, npm-published package\n\n#### alpha branch\n- unstable branch\n- HEAD is arbitrary\n- commit history may be rewritten\n\n\n\n# quickstart web example\n![screen-capture](https://kaizhu256.github.io/node-istanbul-lite/build/screen-capture.testExampleJs.browser..png)\n\n#### to run this example, follow the instruction in the script below\n- [example.js](https://kaizhu256.github.io/node-istanbul-lite/build/example.js)\n```javascript\n/*\nexample.js\n\nthis script will will run a browser version of istanbul\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install istanbul-lite && export PORT=8081 && node example.js\n    3. open a browser to http://localhost:8081\n    4. edit or paste script in browser to cover and eval\n*/\n\n/* istanbul instrument in package istanbul-lite */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        /* istanbul ignore next */\n        // re-init local\n        local = local.modeJs === 'browser'\n            ? window.utility2_istanbul.local\n            : module.isRollup\n            ? module\n            : require('istanbul-lite').local;\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        /* istanbul ignore next */\n        local.testRun = function (event) {\n            switch (event && event.currentTarget.id) {\n            case 'testRunButton1':\n                local.modeTest = true;\n                local.utility2.testRun(local);\n                break;\n            default:\n                // try to cleanup __coverage__\n                try {\n                    delete local.global.__coverage__['/inputTextarea1.js'];\n                } catch (ignore) {\n                }\n                // try to cover and eval input-code\n                try {\n                    /*jslint evil: true*/\n                    document.querySelector('#outputTextarea1').value =\n                        local.istanbul.instrumentSync(\n                            document.querySelector('#inputTextarea1').value,\n                            '/inputTextarea1.js'\n                        );\n                    eval(document.querySelector('#outputTextarea1').value);\n                    document.querySelector('.istanbulCoverageDiv').innerHTML =\n                        local.istanbul.coverageReportCreate({\n                            coverage: window.__coverage__\n                        });\n                } catch (errorCaught) {\n                    document.querySelector('.istanbulCoverageDiv').innerHTML =\n                        '<pre>' + errorCaught.stack.replace((/</g), '&lt') + '</pre>';\n                }\n            }\n        };\n        // init event-handling\n        [\n            '#inputTextarea1',\n            '#testRunButton1'\n        ].forEach(function (element) {\n            element = document.querySelector(element);\n            switch (element && element.id) {\n            case 'inputTextarea1':\n                element.addEventListener('keyup', local.testRun);\n                break;\n            case 'testRunButton1':\n                element.addEventListener('click', local.testRun);\n                break;\n            }\n        });\n        // run tests\n        local.testRun();\n        break;\n\n\n\n    /* istanbul ignore next */\n    // run node js-env code - post-init\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.path = require('path');\n        local.url = require('url');\n        // init assets\n        /* jslint-ignore-begin */\n        local.templateIndexHtml = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<title>\\n\\\n{{envDict.npm_package_name}} v{{envDict.npm_package_version}}\\n\\\n</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    ids: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background-color: #fff;\\n\\\n    font-family: Helvetica Neue,Helvetica,Arial,sans-serif;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 16rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background-color: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n    <h1>\\n\\\n<!-- utility2-comment\\n\\\n        <a\\n\\\n            {{#if envDict.npm_package_homepage}}\\n\\\n            href=\"{{envDict.npm_package_homepage}}\"\\n\\\n            {{/if envDict.npm_package_homepage}}\\n\\\n            target=\"_blank\"\\n\\\n        >\\n\\\nutility2-comment -->\\n\\\n            {{envDict.npm_package_name}} v{{envDict.npm_package_version}}\\n\\\n<!-- utility2-comment\\n\\\n        </a>\\n\\\nutility2-comment -->\\n\\\n<!-- utility2-comment\\n\\\n        {{#if envDict.NODE_ENV}}\\n\\\n        (NODE_ENV={{envDict.NODE_ENV}})\\n\\\n        {{/if envDict.NODE_ENV}}\\n\\\nutility2-comment -->\\n\\\n    </h1>\\n\\\n    <h3>{{envDict.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n    <h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n    <button id=\"testRunButton1\">run internal test</button><br>\\n\\\nutility2-comment -->\\n\\\n    <div class=\"testReportDiv\" style=\"display: none;\"></div>\\n\\\n\\n\\\n    <label>edit or paste script below to cover and eval</label>\\n\\\n<textarea id=\"inputTextarea1\">\\n\\\nif (true) {\\n\\\n    console.log(\"hello\");\\n\\\n} else {\\n\\\n    console.log(\"bye\");\\n\\\n}\\n\\\n</textarea>\\n\\\n    <label>instrumented code</label>\\n\\\n    <textarea id=\"outputTextarea1\" readonly></textarea>\\n\\\n    <h2>coverage-report</h2>\\n\\\n    <div class=\"istanbulCoverageDiv\"></div>\\n\\\n<!-- utility2-comment\\n\\\n    {{#if isRollup}}\\n\\\n    <script src=\"assets.app.min.js\"></script>\\n\\\n    {{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n    <script src=\"assets.utility2.rollup.js\"></script>\\n\\\n    <script src=\"jsonp.utility2.stateInit?callback=window.utility2.stateInit\"></script>\\n\\\n    <script src=\"assets.istanbul-lite.js\"></script>\\n\\\n    <script src=\"assets.example.js\"></script>\\n\\\n    <script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n    {{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        local['/'] = local.templateIndexHtml\n            .replace((/\\{\\{envDict\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                // jslint-hack\n                String(match0);\n                switch (match1) {\n                case 'npm_package_description':\n                    return 'example module';\n                case 'npm_package_name':\n                    return 'example';\n                case 'npm_package_version':\n                    return '0.0.1';\n                }\n            });\n        if (module.isRollup) {\n            break;\n        }\n        try {\n            local['/assets.example.js'] = local.fs.readFileSync(__filename, 'utf8');\n        } catch (ignore) {\n        }\n        local['/assets.istanbul-lite.js'] = '//' + local.fs.readFileSync(\n            local.istanbul.__dirname + '/index.js',\n            'utf8'\n        );\n        // run the cli\n        if (module !== require.main) {\n            break;\n        }\n        // start server\n        console.log('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            switch (local.url.parse(request.url).pathname) {\n            case '/':\n            case '/assets.example.js':\n            case '/assets.istanbul-lite.js':\n            case '/assets.test.js':\n                response.end(local[local.url.parse(request.url).pathname]);\n                break;\n            default:\n                response.end();\n            }\n        }).listen(process.env.PORT);\n        // if $npm_config_timeout_exit is defined,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        break;\n    }\n}());\n```\n\n#### output from electron\n![screen-capture](https://kaizhu256.github.io/node-istanbul-lite/build/screen-capture.testExampleJs.browser..png)\n\n#### output from shell\n![screen-capture](https://kaizhu256.github.io/node-istanbul-lite/build/screen-capture.testExampleJs.svg)\n\n\n\n# package.json\n```json\n{\n    \"package.json\": true,\n    \"author\": \"kai zhu <kaizhu256@gmail.com>\",\n    \"bin\": { \"istanbul-lite\": \"index.js\" },\n    \"description\": \"{{packageJson.description}}\",\n    \"devDependencies\": {\n        \"electron-lite\": \"kaizhu256/node-electron-lite#alpha\",\n        \"utility2\": \"kaizhu256/node-utility2#alpha\"\n    },\n    \"engines\": { \"node\": \">=4.0\" },\n    \"homepage\": \"https://github.com/kaizhu256/node-istanbul-lite\",\n    \"keywords\": [\n        \"browser\",\n        \"code\", \"cover\", \"coverage\",\n        \"instrument\", \"istanbul\",\n        \"jscover\", \"jscoverage\",\n        \"web\"\n    ],\n    \"license\": \"MIT\",\n    \"name\": \"istanbul-lite\",\n    \"os\": [\"darwin\", \"linux\"],\n    \"repository\" : {\n        \"type\" : \"git\",\n        \"url\" : \"https://github.com/kaizhu256/node-istanbul-lite.git\"\n    },\n    \"scripts\": {\n        \"build-ci\": \"utility2 shRun shReadmeBuild\",\n        \"start\": \"\\\nexport PORT=${PORT:-8080} && \\\nexport npm_config_mode_auto_restart=1 && \\\nutility2 shRun shIstanbulCover test.js\",\n        \"test\": \"export PORT=$(utility2 shServerPortRandom) && utility2 test test.js\"\n    },\n    \"version\": \"2015.7.2\"\n}\n```\n\n\n\n# changelog of last 50 commits\n[![screen-capture](https://kaizhu256.github.io/node-istanbul-lite/build/screen-capture.gitLog.svg)](https://github.com/kaizhu256/node-istanbul-lite/commits)\n\n\n\n# internal build-script\n- build.sh\n```shell\n# build.sh\n\n# this shell script will run the build for this package\n\nshBuildCiTestPre() {(set -e\n# this function will run the pre-test build\n    # test example.js\n    (export MODE_BUILD=testExampleJs &&\n        shRunScreenCapture shReadmeTestJs example.js) || return $?\n    # test published-package\n    (export MODE_BUILD=npmTestPublished &&\n        shRunScreenCapture shNpmTestPublished) || return $?\n)}\n\nshBuildCiTestPost() {(set -e\n# this function will run the post-test build\n    # if running legacy-node, then return\n    [ \"$(node --version)\" \\< \"v5.0\" ] && return || true\n    export NODE_ENV=production\n    # deploy app to gh-pages\n    export TEST_URL=\"https://$(printf \"$GITHUB_REPO\" | \\\n        sed 's/\\//.github.io\\//')/build..$CI_BRANCH..travis-ci.org/app/index.html\"\n    (export MODE_BUILD=githubDeploy &&\n        shGithubDeploy) || return $?\n    # test deployed app to gh-pages\n    (export MODE_BUILD=githubTest &&\n        export modeBrowserTest=test &&\n        export url=\"$TEST_URL?modeTest=1&timeExit={{timeExit}}\" &&\n        shBrowserTest) || return $?\n    # deploy app to heroku\n    export HEROKU_REPO=\"hrku01-$npm_package_name-$CI_BRANCH\"\n    export TEST_URL=\"https://$HEROKU_REPO.herokuapp.com\"\n    shGitRepoBranchUpdateLocal() {(set -e\n    # this function will local-update git-repo-branch\n        cp \"$npm_config_dir_build/app/assets.app.js\" .\n        printf \"web: npm_config_mode_backend=1 node assets.app.js\" > Procfile\n    )}\n    (export MODE_BUILD=herokuDeploy &&\n        shHerokuDeploy) || return $?\n    # test deployed app to heroku\n    (export MODE_BUILD=herokuTest &&\n        export modeBrowserTest=test &&\n        export url=\"$TEST_URL?modeTest=1&timeExit={{timeExit}}\" &&\n        shBrowserTest) || return $?\n)}\n\nshBuild() {(set -e\n# this function will run the main build\n    # init env\n    . node_modules/.bin/utility2 && shInit\n    # cleanup github-gh-pages dir\n    # export BUILD_GITHUB_UPLOAD_PRE_SH=\"rm -fr build\"\n    # init github-gh-pages commit-limit\n    export COMMIT_LIMIT=16\n    # if branch is alpha, beta, or master, then run default build\n    if [ \"$CI_BRANCH\" = alpha ] ||\n        [ \"$CI_BRANCH\" = beta ] ||\n        [ \"$CI_BRANCH\" = master ]\n    then\n        shBuildCiDefault\n    fi\n)}\nshBuild\n```\n"
}