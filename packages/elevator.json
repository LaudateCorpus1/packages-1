{
  "name": "elevator",
  "version": "2.1.0",
  "description": "Windows UAC elevation that just works",
  "main": "lib/elevator.js",
  "homepage": "https://github.com/resin-io-modules/elevator",
  "os": [
    "win32"
  ],
  "repository": {
    "user": "resin-io-modules",
    "repo": "elevator",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/resin-io-modules/elevator/tarball/master",
    "clone_url": "https://github.com/resin-io-modules/elevator",
    "https_url": "https://github.com/resin-io-modules/elevator",
    "travis_url": "https://travis-ci.org/resin-io-modules/elevator",
    "zip_url": "https://github.com/resin-io-modules/elevator/archive/master.zip",
    "api_url": "https://api.github.com/repos/resin-io-modules/elevator"
  },
  "scripts": {
    "test": "gulp test",
    "prepublish": "gulp test",
    "readme": "jsdoc2md --template doc/README.hbs lib/elevator.js > README.md"
  },
  "keywords": [
    "windows",
    "win32",
    "uac",
    "elevate",
    "elevator"
  ],
  "author": {
    "name": "Juan Cruz Viotti",
    "email": "juan@resin.io"
  },
  "license": "MIT",
  "devDependencies": {
    "gulp": "^3.9.0",
    "gulp-jshint": "^1.11.2",
    "gulp-mocha": "^2.1.3",
    "jsdoc-to-markdown": "^1.1.1",
    "jshint-stylish": "^2.0.1",
    "mochainon": "^1.0.0"
  },
  "gitHead": "7d97c8712fb9b6f7aed9ff1b1ad5d6981b93e93b",
  "_npmVersion": "3.8.6",
  "_nodeVersion": "6.1.0",
  "dist": {
    "shasum": "7f67b55a8c99b121d29529a99fa6a1d02e1934b5",
    "tarball": "http://registry.npmjs.org/elevator/-/elevator-2.1.0.tgz"
  },
  "stars": 0,
  "versions": [
    {
      "number": "1.0.0",
      "date": "2015-12-17T17:30:25.244Z"
    },
    {
      "number": "2.0.0",
      "date": "2016-06-17T19:58:58.056Z"
    },
    {
      "number": "2.1.0",
      "date": "2016-06-17T21:33:06.627Z"
    }
  ],
  "created": "2015-12-17T17:30:25.244Z",
  "modified": "2016-06-17T21:33:06.627Z",
  "lastPublisher": {
    "name": "jviotti",
    "email": "jviottidc@gmail.com"
  },
  "owners": [
    {
      "name": "jviotti",
      "email": "jviottidc@gmail.com"
    }
  ],
  "readme": "elevator\n========\n\n> Windows UAC elevation that just works.\n\n[![npm version](https://badge.fury.io/js/elevator.svg)](http://badge.fury.io/js/elevator)\n[![dependencies](https://david-dm.org/resin-io-modules/elevator.svg)](https://david-dm.org/resin-io-modules/elevator.svg)\n[![Build status](https://ci.appveyor.com/api/projects/status/ysweh6h4ed4ak114/branch/master?svg=true)](https://ci.appveyor.com/project/resin-io/elevator/branch/master)\n[![Gitter](https://badges.gitter.im/Join Chat.svg)](https://gitter.im/resin-io/chat)\n\nDescription\n-----------\n\nThis module is a thin wrapper around the awesome [elevate.exe utility by kliu](http://code.kliu.org/misc/elevate/), which is a small C open source application with x64 and ia32 support that just works.\n\nThis module doesn't make use of NodeJS C/C++ bindings and instead relies on executing the `.exe` file direcly in a way that is [electron](http://electron.atom.io) friendly even when the application is packaged in an `asar` archive.\n\nOf course, this means that this NodeJS module is subjected to the Windows versions and architectures such supports. Windows Vista (or newer) is required.\n\nInstallation\n------------\n\nInstall `elevator` by running:\n\n```sh\n$ npm install --save elevator\n```\n\nDocumentation\n-------------\n\n\n* [elevator](#module_elevator)\n    * [.execute(command, [options], callback)](#module_elevator.execute)\n    * [.executeSync(command, [options])](#module_elevator.executeSync) ⇒ <code>String</code>\n\n<a name=\"module_elevator.execute\"></a>\n\n### elevator.execute(command, [options], callback)\nThis function will yield an `Error` containing a code that equals\n`ELEVATE_CANCELLED` if the elevation was cancelled by the user.\n\n**Kind**: static method of <code>[elevator](#module_elevator)</code>  \n**Summary**: Execute a command with UAC elevation  \n**Access:** public  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| command | <code>Array.&lt;String&gt;</code> |  | command |\n| [options] | <code>Object</code> | <code>{}</code> | options |\n| [options.terminating] | <code>Boolean</code> |  | Launches a terminating command processor; equivalent to \"cmd /c command\". |\n| [options.persistent] | <code>Boolean</code> |  | Launches a persistent command processor; equivalent to \"cmd /k command\". |\n| [options.doNotPushdCurrentDirectory] | <code>Boolean</code> |  | When using -c or -k, do not pushd the current directory before execution. |\n| [options.unicode] | <code>Boolean</code> |  | When using -c or -k, use Unicode; equivalent to \"cmd /u\". |\n| [options.hidden] | <code>Boolean</code> |  | When using -c or -k, start \"cmd\" in hidden mode. |\n| [options.waitForTermination] | <code>Boolean</code> |  | Waits for termination; equivalent to \"start /wait command\". |\n| callback | <code>function</code> |  | callback (error, stdout, stderr) |\n\n**Example**  \n```js\nelevator.execute([ 'cmd.exe' ], {\n  waitForTermination: true\n}, function(error, stdout, stderr) {\n  if (error) {\n    throw error;\n  }\n\n  console.log(stdout);\n  console.log(stderr);\n});\n```\n<a name=\"module_elevator.executeSync\"></a>\n\n### elevator.executeSync(command, [options]) ⇒ <code>String</code>\nThis function will throw an `Error` containing a code that equals\n`ELEVATE_CANCELLED` if the elevation was cancelled by the user.\n\n**Kind**: static method of <code>[elevator](#module_elevator)</code>  \n**Summary**: Execute a command with UAC elevation (Sync)  \n**Returns**: <code>String</code> - stdout buffer  \n**Access:** public  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| command | <code>Array.&lt;String&gt;</code> |  | command |\n| [options] | <code>Object</code> | <code>{}</code> | options |\n| [options.terminating] | <code>Boolean</code> |  | Launches a terminating command processor; equivalent to \"cmd /c command\". |\n| [options.persistent] | <code>Boolean</code> |  | Launches a persistent command processor; equivalent to \"cmd /k command\". |\n| [options.doNotPushdCurrentDirectory] | <code>Boolean</code> |  | When using -c or -k, do not pushd the current directory before execution. |\n| [options.unicode] | <code>Boolean</code> |  | When using -c or -k, use Unicode; equivalent to \"cmd /u\". |\n| [options.hidden] | <code>Boolean</code> |  | When using -c or -k, start \"cmd\" in hidden mode. |\n| [options.waitForTermination] | <code>Boolean</code> |  | Waits for termination; equivalent to \"start /wait command\". |\n\n**Example**  \n```js\nelevator.executeSync([ 'cmd.exe' ], {\n  waitForTermination: true\n});\n```\n\nSupport\n-------\n\nIf you're having any problem, please [raise an issue](https://github.com/resin-io-modules/elevator/issues/new) on GitHub and the Resin.io team will be happy to help.\n\nTests\n-----\n\nRun the test suite by doing:\n\n```sh\n$ gulp test\n```\n\nContribute\n----------\n\n- Issue Tracker: [github.com/resin-io-modules/elevator/issues](https://github.com/resin-io-modules/elevator/issues)\n- Source Code: [github.com/resin-io-modules/elevator](https://github.com/resin-io-modules/elevator)\n\nBefore submitting a PR, please make sure that you include tests, and that [jshint](http://jshint.com) runs without any warning:\n\n```sh\n$ gulp lint\n```\n\nLicense\n-------\n\nThe project is licensed under the MIT license.\n"
}