{
  "name": "creditcards-types",
  "version": "1.6.0",
  "description": "Card type definitions and methods for creditcards",
  "main": "index.js",
  "scripts": {
    "test": "standard && tape test.js | tap-spec"
  },
  "repository": {
    "user": "bendrucker",
    "repo": "creditcards-types",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/bendrucker/creditcards-types/tarball/master",
    "clone_url": "https://github.com/bendrucker/creditcards-types",
    "https_url": "https://github.com/bendrucker/creditcards-types",
    "travis_url": "https://travis-ci.org/bendrucker/creditcards-types",
    "zip_url": "https://github.com/bendrucker/creditcards-types/archive/master.zip",
    "api_url": "https://api.github.com/repos/bendrucker/creditcards-types"
  },
  "keywords": [
    "credit",
    "cards",
    "validation"
  ],
  "author": {
    "name": "Ben Drucker",
    "email": "bvdrucker@gmail.com",
    "url": "http://www.bendrucker.me/"
  },
  "license": "MIT",
  "homepage": "https://github.com/bendrucker/creditcards-types",
  "dependencies": {
    "xtend": "~4.0.0"
  },
  "devDependencies": {
    "standard": "^6.0.0",
    "tap-spec": "^4.0.0",
    "tape": "^4.0.0"
  },
  "files": [
    "index.js",
    "src/",
    "readme.md"
  ],
  "gitHead": "724320e0df81dd0672bf743e20fdbb97779dd32c",
  "_npmVersion": "3.8.9",
  "_nodeVersion": "5.0.0",
  "dist": {
    "shasum": "f26ae639d46245c18c0d61015161799c9bdbbffc",
    "tarball": "http://registry.npmjs.org/creditcards-types/-/creditcards-types-1.6.0.tgz"
  },
  "versions": [
    {
      "number": "1.0.0",
      "date": "2015-02-18T15:49:12.293Z"
    },
    {
      "number": "1.0.1",
      "date": "2015-02-18T16:00:13.484Z"
    },
    {
      "number": "1.0.2",
      "date": "2015-02-18T16:01:09.407Z"
    },
    {
      "number": "1.0.3",
      "date": "2015-02-18T16:16:51.784Z"
    },
    {
      "number": "1.1.0",
      "date": "2015-03-28T23:18:15.916Z"
    },
    {
      "number": "1.2.0",
      "date": "2015-03-30T14:08:45.060Z"
    },
    {
      "number": "1.3.0",
      "date": "2015-06-02T13:46:06.057Z"
    },
    {
      "number": "1.4.0",
      "date": "2015-06-02T14:16:30.784Z"
    },
    {
      "number": "1.4.1",
      "date": "2015-12-14T21:35:00.430Z"
    },
    {
      "number": "1.5.0",
      "date": "2016-02-08T16:09:56.279Z"
    },
    {
      "number": "1.5.1",
      "date": "2016-02-08T16:22:17.287Z"
    },
    {
      "number": "1.6.0",
      "date": "2016-05-13T18:55:03.598Z"
    }
  ],
  "created": "2015-02-18T15:49:12.293Z",
  "modified": "2016-05-13T18:55:03.598Z",
  "lastPublisher": {
    "name": "bendrucker",
    "email": "bvdrucker@gmail.com"
  },
  "owners": [
    {
      "name": "bendrucker",
      "email": "bvdrucker@gmail.com"
    }
  ],
  "readme": "# creditcards-types [![Build Status](https://travis-ci.org/bendrucker/creditcards-types.svg?branch=master)](https://travis-ci.org/bendrucker/creditcards-types)\n\n> Card type definitions and methods used by [creditcards](https://github.com/bendrucker/creditcards), a JS library for all platforms for parsing, validating, and formatting credit card data. \n\n## Card Types\n\n* Visa\n* MasterCard\n* American Express\n* Diners Club\n* Discover\n* JCB\n* UnionPay\n* Maestro\n* Forbrugsforeningen\n* Dankort\n\nVisa Electron cards will validate and match as regular Visa cards.\n\n[Open an issue](https://github.com/bendrucker/creditcards-types/issues/new) if you need a type that's missing.\n\n## Installing\n\n```sh\nnpm install creditcards-types\n```\n\n## Usage\n\n```js\nvar types = require('creditcards-types').types\nvar visa = types.visa\nvisa.test('4242424242424242') // true\n```\n\n## API\n\n#### `find(callback)` -> `type` / `undefined`\n\nIterates through the available types until the `callback` returns a truthy value. Returns the first matching type. Iteration order is undefined.\n\n##### callback\n\n*Required*  \nType: `function`\n\nCallback that is called with card type objects and should return truthy/falsy until a match is found.\n\n#### `new Type(config)` -> `type`\n\nCreates a new card type.\n\n```js\nvar Type = require('creditcards-types').Type\nvar type = new Type(config)\n```\n\n##### config\n\n*Required*  \nType: `object`\n\nThe type configuration, containing the following properties:\n\n* `pattern`\n  * description: A regular expression for validating a full card number.\n  * required: `true`\n  * type: `regexp`\n* `eagerPattern`\n  * description: A regular expression for guessing the card number from a partial number.\n  * required: `true`\n  * type: `regexp`\n* `groupPattern`\n  * description: A regular expression for separating the card number into formatting. groups\n  * type: `regexp`\n  * default: `/(\\d{1,4})(\\d{1,4})?(\\d{1,4})?(\\d{1,4})?/`\n* `cvcLength`\n  * description: The length of the CVC expected for the card type.\n  * type: `number`\n  * default: `3`\n* `luhn`\n  * description: Setting for whether the card should pass a [Luhn](https://github.com/bendrucker/fast-luhn) check. Not used internally, purely informational.\n  * type: `boolean`\n  * default: `true`\n\n---\n\n#### `type.test(number, [eager])` -> `boolean`\n\nCheck whether a card number matches the type.\n\n##### number\n\n*Required*  \nType: `string`\n\nThe card number to test.\n\n##### eager\n\nType: `Boolean`  \nDefault: `false`\n\nWhen `false`, the full card pattern is used. When `true`, the eager pattern is tested instead.\n\n```js\nvar types = require('creditcards-types').types;\nvar visa  = types.visa;\n\n// Strict type validation\nvisa.test('4242424242424242'); // => true\n\n// Eager type checking\nvisa.test('42', true); // => true\n```\n\n---\n\n#### `type.group(number)` -> `array[string]`\n\nSeparates the card number into formatting groups. \n\n##### number\n\n*Required*  \nType: `string`\n\nThe card number to group. This may be a complete or partial card number. Any digits past the type's maximum length will be discarded.\n\n## License\n\nMIT Â© [Ben Drucker](http://bendrucker.me)\n"
}