{
  "name": "uupaa.bit.js",
  "version": "0.8.1",
  "description": "Bit operation",
  "url": "https://github.com/uupaa/Bit.js",
  "keywords": [
    "Bit",
    "BitView",
    "reverse",
    "MSB",
    "LSB",
    "popcnt",
    "nlz",
    "ntz",
    "IEEE754",
    "Golomb",
    "uupaa",
    "WebModule"
  ],
  "repository": {
    "user": "uupaa",
    "repo": "Bit.js",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/uupaa/Bit.js/tarball/master",
    "clone_url": "https://github.com/uupaa/Bit.js",
    "https_url": "https://github.com/uupaa/Bit.js",
    "travis_url": "https://travis-ci.org/uupaa/Bit.js",
    "zip_url": "https://github.com/uupaa/Bit.js/archive/master.zip",
    "api_url": "https://api.github.com/repos/uupaa/Bit.js"
  },
  "scripts": {
    "sync": "node ../WebModule/run/sync.js; npm update; node ../WebModule/run/page.js",
    "wiki": "node ../WebModule/run/wiki.js",
    "min": "node ../WebModule/run/minify.js --verbose --strict --keep --pretty",
    "build": "node ../WebModule/run/minify.js --verbose --strict --keep --release",
    "watch": "node ../WebModule/run/watch.js --verbose --run lint",
    "page": "node ../WebModule/run/page.js --verbose",
    "test": "npm run min; npm run node; npm run browser",
    "node": "NODE_ENV=production NODE_PATH=lib node test/node/index.js",
    "noded": "NODE_ENV=production NODE_PATH=lib node --debug-brk test/node/index.js",
    "browser": "open http://localhost:8000/Bit.js/test/browser/index.html",
    "el": "electron test/el",
    "nw": "nw test/nw",
    "add-src": "node ../WebModule/run/add-src.js",
    "add-subclass": "node ../WebModule/run/add-subclass.js",
    "sim": "node ../WebModule/run/sim.js http://localhost:8000/Bit.js/test/browser/index.html",
    "simx": "node ../WebModule/run/sim.js stop",
    "lint": "eslint lib/*.js",
    "score": "node ../WebModule/run/score.js; open lint/plato/index.html",
    "patch": "node ../WebModule/run/patch.js",
    "setup": "node ../WebModule/run/setup.js",
    "start": "cd ../; Python -m SimpleHTTPServer 8000 &",
    "stop": "killall -- Python -m SimpleHTTPServer 8000; exit 0"
  },
  "webmodule": {
    "develop": false,
    "label": [
      "@dev"
    ],
    "browser": {
      "output": "release/Bit.b.min.js",
      "source": [
        "lib/Bit.js",
        "lib/BitView.js"
      ]
    },
    "worker": {
      "output": "release/Bit.w.min.js",
      "source": [
        "lib/Bit.js",
        "lib/BitView.js"
      ]
    },
    "node": {
      "output": "release/Bit.n.min.js",
      "source": [
        "lib/Bit.js",
        "lib/BitView.js"
      ]
    },
    "nw": {
      "output": "release/Bit.nw.min.js",
      "source": [
        "lib/Bit.js",
        "lib/BitView.js"
      ]
    },
    "el": {
      "output": "release/Bit.el.min.js",
      "source": [
        "lib/Bit.js",
        "lib/BitView.js"
      ]
    }
  },
  "dependencies": {},
  "devDependencies": {
    "uupaa.expgolomb.js": ""
  },
  "lib": "./lib/",
  "main": "./index.js",
  "author": {
    "name": "uupaa"
  },
  "license": "MIT",
  "contributors": [],
  "gitHead": "17c9607eee30277b89f3c3353df08332f5c6d993",
  "homepage": "https://github.com/uupaa/Bit.js",
  "_npmVersion": "2.0.0",
  "dist": {
    "shasum": "92256819d71a15e29dc0e8141cad6a1839443312",
    "tarball": "http://registry.npmjs.org/uupaa.bit.js/-/uupaa.bit.js-0.8.1.tgz"
  },
  "versions": [
    {
      "number": "0.0.0",
      "date": "2015-09-12T17:48:14.845Z"
    },
    {
      "number": "0.0.1",
      "date": "2015-09-12T18:22:03.529Z"
    },
    {
      "number": "0.0.2",
      "date": "2015-09-12T18:33:10.345Z"
    },
    {
      "number": "0.0.3",
      "date": "2015-09-12T19:41:03.969Z"
    },
    {
      "number": "0.0.4",
      "date": "2015-09-12T20:17:08.181Z"
    },
    {
      "number": "0.0.5",
      "date": "2015-09-12T20:25:16.552Z"
    },
    {
      "number": "0.0.6",
      "date": "2015-09-12T21:16:18.242Z"
    },
    {
      "number": "0.0.7",
      "date": "2015-09-12T22:46:55.762Z"
    },
    {
      "number": "0.0.8",
      "date": "2015-09-12T23:14:52.594Z"
    },
    {
      "number": "0.0.10",
      "date": "2015-09-18T12:24:44.983Z"
    },
    {
      "number": "0.0.11",
      "date": "2015-09-18T12:53:16.062Z"
    },
    {
      "number": "0.0.12",
      "date": "2015-09-19T07:10:30.055Z"
    },
    {
      "number": "0.0.13",
      "date": "2015-09-19T07:46:30.612Z"
    },
    {
      "number": "0.1.0",
      "date": "2015-09-19T09:28:29.071Z"
    },
    {
      "number": "0.1.1",
      "date": "2015-09-19T10:27:52.380Z"
    },
    {
      "number": "0.1.2",
      "date": "2015-09-19T12:42:36.849Z"
    },
    {
      "number": "0.1.3",
      "date": "2015-09-19T14:44:42.891Z"
    },
    {
      "number": "0.1.4",
      "date": "2015-09-19T19:26:43.172Z"
    },
    {
      "number": "0.2.0",
      "date": "2015-10-14T04:27:32.092Z"
    },
    {
      "number": "0.2.1",
      "date": "2015-10-14T12:09:58.624Z"
    },
    {
      "number": "0.2.2",
      "date": "2015-10-14T12:59:58.528Z"
    },
    {
      "number": "0.2.3",
      "date": "2015-10-15T07:24:59.913Z"
    },
    {
      "number": "0.3.0",
      "date": "2015-11-03T14:44:29.609Z"
    },
    {
      "number": "0.4.0",
      "date": "2015-12-03T20:29:46.776Z"
    },
    {
      "number": "0.4.1",
      "date": "2015-12-03T20:34:47.599Z"
    },
    {
      "number": "0.4.2",
      "date": "2015-12-04T20:10:31.904Z"
    },
    {
      "number": "0.5.0",
      "date": "2015-12-05T19:14:59.020Z"
    },
    {
      "number": "0.5.1",
      "date": "2015-12-05T19:47:39.107Z"
    },
    {
      "number": "0.5.2",
      "date": "2015-12-06T21:50:40.367Z"
    },
    {
      "number": "0.5.3",
      "date": "2016-03-23T13:27:35.406Z"
    },
    {
      "number": "0.5.4",
      "date": "2016-03-23T14:36:25.397Z"
    },
    {
      "number": "0.6.0",
      "date": "2016-04-20T15:51:43.687Z"
    },
    {
      "number": "0.7.0",
      "date": "2016-04-20T17:28:48.661Z"
    },
    {
      "number": "0.8.0",
      "date": "2016-04-21T07:09:17.722Z"
    },
    {
      "number": "0.8.1",
      "date": "2016-06-08T00:16:40.151Z"
    }
  ],
  "created": "2015-09-12T17:48:14.845Z",
  "modified": "2016-06-08T00:16:40.151Z",
  "lastPublisher": {
    "name": "uupaa",
    "email": "uupaa.js@gmail.com"
  },
  "owners": [
    {
      "name": "uupaa",
      "email": "uupaa.js@gmail.com"
    }
  ],
  "readme": "# Bit.js [![Build Status](https://travis-ci.org/uupaa/Bit.js.svg)](https://travis-ci.org/uupaa/Bit.js)\n\n[![npm](https://nodei.co/npm/uupaa.bit.js.svg?downloads=true&stars=true)](https://nodei.co/npm/uupaa.bit.js/)\n\nBit.js is a JavaScript library that supports the analysis of binary data. It aggregates the low-level bit manipulation functions.\n\n\nThis module made of [WebModule](https://github.com/uupaa/WebModule).\n\n## Documentation\n- [Spec](https://github.com/uupaa/Bit.js/wiki/)\n- [API Spec](https://github.com/uupaa/Bit.js/wiki/Bit)\n\n## Browser, NW.js and Electron\n\n```js\n<script src=\"<module-dir>/lib/WebModule.js\"></script>\n<script src=\"<module-dir>/lib/Bit.js\"></script>\n<script src=\"<module-dir>/lib/BitView.js\"></script>\n<script>\n\n// get contiguous n bits (bit shift and mask).\nBit.n(0x000000ff, 0b00000000000000000000000011111100) // -> 0x3f,\nBit.n(0x000000ff, 0b00000000000000000000000011000000) // -> 0x03,\n\n// bit split by bit-pattern\nBit.split32(0xffff1234, [16,4,4,4,4])  // -> [0xffff, 0x1, 0x2, 0x3, 0x4]\n                                       //         16    4    4    4    4 bits\n\nBit.split24(0xff1234, [16,4,4]) // -> [0xff, 0x1, 0x2, 0x3, 0x4]\nBit.split16(0x1234,   [8,8])    // -> [0x12, 0x34]\nBit.split8(0xfe,      [2,2,4])  // -> [0x3, 0x3, 0xe]\n\n// With ES6 Destructuring Assignment\nvar [a, b, c] = Bit.split32(0x00001234, [16, 8, 8]);\n// -> a = 0x12, b = 0x3, c = 0x4\n\n// population count (counting 1 bits)\nBit.popcnt(0x6) // -> 2\n\n// count the number of contiguous 1 bits from Left-side or Right-side\nBit.cnl(0b11001110) // -> 2\nBit.cnr(0b11001110) // -> 3\n\n// Number(Count) of Leading Zero\nBit.nlz(0x6)    // -> 29\nBit.clz(0x6)    // -> 29 (this function is an alias of Bit.nlz)\n\n// Number(Count) of Training Zero\nBit.ntz(0x6)    // -> 1\nBit.ctz(0x6)    // -> 1 (this function is an alias of Bit.ntz)\n\n// binary dump\nBit.dump(0x12345678, [4,4,8,4,4,8]);\n// -> \"0001, 0010, 00110100, 0101, 0110, 01111000\"\n\n// verbose dump\nBit.dump(0x12345678, bitPattern, true);\n// -> \"00010010001101000101011001111000(0x12345678), 0001(1,0x1), 0010(2,0x2), 00110100(52,0x34), 0101(5,0x5), 0110(6,0x6), 01111000(120,0x78)\"\n\n// get IEEE754 expression\nvar doublePrecision = true;\nvar u32array = Bit.IEEE754(0.15625, doublePrecision);\nBit.dump(u32array[0], [1,11,20]) + Bit.dump(u32array[1], [32])\n// -> \"0, 01111111100, 0100000000000000000000000000000000000000000000000000\"\n\n\n// BitView\nvar bitView = new BitView(new Uint8Array([0, 1, 2, 3, 0xFF, 0xFE, 0xFD, 0xFC]));\n\n                    // read 32 bit\nbitView.u32         // -> 0x00010203\n\n                    // read 24 bit\nbitView.u24         // -> 0xFFFEFD\n\n                    // read 1 bit\nbitView.u1          // -> 0x1  `11111100` (0xFC)\n                    //          ~\n\n                    // read 2 bit\nbitView.u2          // -> 0x3  `11111100` (0xFC)\n                    //           ~~\n\n                    // read 5 bit\nbitView.u5          // -> 0x1C `11111100` (0xFC)\n                    //             ~~~~~\n\n</script>\n```\n\n## WebWorkers\n\n```js\nimportScripts(\"<module-dir>lib/WebModule.js\");\nimportScripts(\"<module-dir>lib/Bit.js\");\nimportScripts(\"<module-dir>lib/BitView.js\");\n\n...\n```\n\n## Node.js\n\n```js\nrequire(\"<module-dir>lib/WebModule.js\");\nrequire(\"<module-dir>lib/Bit.js\");\nrequire(\"<module-dir>lib/BitView.js\");\n\n...\n```\n\n"
}