{
  "name": "unitest",
  "version": "0.14.2",
  "description": "Run browser and node tests with coverage reports",
  "author": {
    "name": "Ryan Tsao",
    "email": "ryan.j.tsao@gmail.com"
  },
  "repository": {
    "user": "rtsao",
    "repo": "unitest",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/rtsao/unitest/tarball/master",
    "clone_url": "https://github.com/rtsao/unitest",
    "https_url": "https://github.com/rtsao/unitest",
    "travis_url": "https://travis-ci.org/rtsao/unitest",
    "zip_url": "https://github.com/rtsao/unitest/archive/master.zip",
    "api_url": "https://api.github.com/repos/rtsao/unitest"
  },
  "homepage": "https://github.com/rtsao/unitest",
  "main": "index.js",
  "bin": {
    "unitest": "bin/cli.js"
  },
  "scripts": {
    "test": "node test/index.js"
  },
  "dependencies": {
    "backoff": "^2.5.0",
    "electron-prebuilt": "^1.0.0",
    "exit-code": "^1.0.2",
    "getport": "^0.1.0",
    "istanbul": "^0.4.3",
    "istanbul-reporter-raw-json": "^1.0.1",
    "merge2": "^1.0.2",
    "minimist": "^1.2.0",
    "multistream": "^2.0.5",
    "run-parallel": "^1.1.6",
    "tap-finished": "0.0.1",
    "tap-merge": "^0.3.1"
  },
  "devDependencies": {
    "tap-parser": "~0.2.0",
    "tape": "^4.4.0"
  },
  "engines": {
    "npm": "^3.0.0"
  },
  "license": "MIT",
  "gitHead": "07dca4d47ab341f72e92b36c9f94df4c2a028b74",
  "_npmVersion": "3.9.3",
  "_nodeVersion": "6.2.1",
  "dist": {
    "shasum": "1835c55177bcb19ffd3160e5bf329dd7cbc1ad58",
    "tarball": "http://registry.npmjs.org/unitest/-/unitest-0.14.2.tgz"
  },
  "versions": [
    {
      "number": "0.0.1",
      "date": "2016-04-07T06:02:58.362Z"
    },
    {
      "number": "0.1.0",
      "date": "2016-04-28T20:09:12.099Z"
    },
    {
      "number": "0.2.0",
      "date": "2016-04-29T01:14:29.911Z"
    },
    {
      "number": "0.3.0",
      "date": "2016-04-29T16:31:20.487Z"
    },
    {
      "number": "0.4.0",
      "date": "2016-04-29T17:33:37.435Z"
    },
    {
      "number": "0.5.0",
      "date": "2016-04-29T18:42:25.839Z"
    },
    {
      "number": "0.5.1",
      "date": "2016-04-29T23:49:00.508Z"
    },
    {
      "number": "0.5.2",
      "date": "2016-04-30T00:44:08.324Z"
    },
    {
      "number": "0.5.3",
      "date": "2016-04-30T13:06:57.367Z"
    },
    {
      "number": "0.5.4",
      "date": "2016-05-02T18:09:31.279Z"
    },
    {
      "number": "0.5.5",
      "date": "2016-05-09T19:13:57.500Z"
    },
    {
      "number": "0.5.6",
      "date": "2016-05-09T19:19:52.472Z"
    },
    {
      "number": "0.5.7",
      "date": "2016-05-10T20:41:34.144Z"
    },
    {
      "number": "0.6.0",
      "date": "2016-05-10T22:43:42.660Z"
    },
    {
      "number": "0.6.1",
      "date": "2016-05-10T22:54:36.520Z"
    },
    {
      "number": "0.7.0",
      "date": "2016-05-11T18:09:35.340Z"
    },
    {
      "number": "0.8.0",
      "date": "2016-05-12T03:49:04.324Z"
    },
    {
      "number": "0.8.1",
      "date": "2016-05-12T17:10:58.668Z"
    },
    {
      "number": "0.9.0",
      "date": "2016-05-12T22:22:48.268Z"
    },
    {
      "number": "0.9.1",
      "date": "2016-05-12T23:16:14.674Z"
    },
    {
      "number": "0.9.2",
      "date": "2016-05-13T01:27:43.633Z"
    },
    {
      "number": "0.9.3",
      "date": "2016-05-13T02:02:03.557Z"
    },
    {
      "number": "0.10.0",
      "date": "2016-05-18T20:52:23.469Z"
    },
    {
      "number": "0.10.1",
      "date": "2016-06-23T01:14:50.077Z"
    },
    {
      "number": "0.10.2",
      "date": "2016-07-12T20:08:17.973Z"
    },
    {
      "number": "0.10.3",
      "date": "2016-07-14T19:36:43.153Z"
    },
    {
      "number": "0.11.0",
      "date": "2016-08-25T00:47:30.428Z"
    },
    {
      "number": "0.12.0",
      "date": "2016-09-12T06:46:22.993Z"
    },
    {
      "number": "0.12.1",
      "date": "2016-09-12T07:11:44.322Z"
    },
    {
      "number": "0.13.0",
      "date": "2016-09-13T19:31:21.555Z"
    },
    {
      "number": "0.14.0",
      "date": "2016-09-13T19:47:49.841Z"
    },
    {
      "number": "0.14.1",
      "date": "2016-09-13T20:10:39.019Z"
    },
    {
      "number": "0.14.2",
      "date": "2016-09-13T20:47:22.052Z"
    }
  ],
  "created": "2016-04-07T06:02:58.362Z",
  "modified": "2016-09-13T20:47:22.052Z",
  "lastPublisher": {
    "name": "rtsao",
    "email": "ryan.j.tsao@gmail.com"
  },
  "owners": [
    {
      "name": "rtsao",
      "email": "ryan.j.tsao@gmail.com"
    }
  ],
  "readme": "# [![unitest logo](https://cdn.rawgit.com/rtsao/unitest/logo/logo.svg \"unitest\")](https://github.com/rtsao/unitest)\n\n[![build status][build-badge]][build-href]\n[![dependencies status][deps-badge]][deps-href]\n[![npm version][npm-badge]][npm-href]\n\nSeamless node and browser unit testing with code coverage\n\n##### Features\n\n- Unified node and browser tests with merged TAP output, code coverage reports, and exit status codes.\n- [Electron](https://github.com/electron/electron)-powered browser testing for a fast, modern browser testing environment.\n- Bundler-agnostic usage. Use browserify, webpack, or something else.\n- Designed to be used with [Babel-powered coverage instrumentation](https://github.com/istanbuljs/babel-plugin-istanbul) for fast, efficient testing with code coverage.\n- Support for all coverage reporting options in [Istanbul](https://github.com/gotwarlost/istanbul), including `html`, `text`, `cobertura`, etc.\n\n\n## Usage\n```\nUsage: unitest {OPTIONS}\n\nOptions:\n\n    --version, -v  Print version and exit\n\n       --help, -h  Print usage information\n\n       --node, -n  Path to node test entry file\n\n    --browser, -c  Path to browser test entry file\n\n     --report, -r  Istanbul coverage report\n```\n\n## Getting Started\n\n### Run node and browser tests\n\n1. Transpile source code with Babel *(optional)*\n2. Bundle browser code *(this step is possibly optional since `require` works in electron)*\n3. Run `unitest`, specifying test entry files\n\n```\nbabel src -d build\nbrowserify build/test/browser.js > build/test/browser-bundle.js\nunitest --browser=build/test/browser-bundle.js --node=build/test/node.js\n```\n\n### Run node and browser tests with coverage report\n\nRunning tests with coverage involves the exact same steps, but with an additional [coverage instrumentation Babel plugin](https://github.com/istanbuljs/babel-plugin-istanbul).\n\n```\nbabel src -d build --plugins=istanbul\nbrowserify build/test/browser.js > build/test/browser-bundle.js\nunitest --browser=build/test/browser.js --node=build/test/node.js --report=html\n```\n\n#### Merged test output\n\nThe separate TAP and coverage output along with exit code for your node and browser tests will be merged seamlessly.\n\n## Debugging\n\n### Debug node tests\n\nNo magic here, just use [`node-inspector`](https://github.com/node-inspector/node-inspector) or plain node.\n\n```\nnpm install node-inspector -g\nnode-debug build/test/node.js\n```\n\n### Debug browser (electron) tests\n\nNo magic here, just use [`devtool`](https://github.com/Jam3/devtool).\n\n```\nnpm install devtool -g\ndevtool build/test/browser-bundle.js\n```\n\n[build-badge]: https://travis-ci.org/rtsao/unitest.svg?branch=master\n[build-href]: https://travis-ci.org/rtsao/unitest\n[deps-badge]: https://david-dm.org/rtsao/unitest.svg\n[deps-href]: https://david-dm.org/rtsao/unitest\n[npm-badge]: https://badge.fury.io/js/unitest.svg\n[npm-href]: https://www.npmjs.com/package/unitest\n"
}