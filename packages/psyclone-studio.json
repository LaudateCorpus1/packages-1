{
  "name": "psyclone-studio",
  "productName": "Psyclone",
  "version": "0.6.0",
  "description": "Automated Dynamic Testing Solution",
  "license": "Apache-2.0",
  "homepage": "https://git.rsupport.com/psyclone/studio",
  "main": "main.js",
  "bin": {
    "psyclone": "./scripts/cmd.js"
  },
  "repository": {
    "user": "firejune",
    "repo": "psyclone",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/firejune/psyclone/tarball/master",
    "clone_url": "https://github.com/firejune/psyclone",
    "https_url": "https://github.com/firejune/psyclone",
    "travis_url": "https://travis-ci.org/firejune/psyclone",
    "zip_url": "https://github.com/firejune/psyclone/archive/master.zip",
    "api_url": "https://api.github.com/repos/firejune/psyclone"
  },
  "author": {
    "name": "RSUPPORT",
    "email": "psyclone@rsupport.com",
    "url": "http://rsupport.com"
  },
  "dependencies": {
    "adbkit": "^2.4.1",
    "adbkit-apkreader": "^1.0.0",
    "babel-runtime": "^6.9.0",
    "bluebird": "^3.4.0",
    "clone": "^1.0.2",
    "codemirror": "^5.15.2",
    "color-name": "^1.1.1",
    "component-clone": "^0.2.2",
    "component-type": "^1.2.1",
    "configstore": "*",
    "css": "^2.2.1",
    "d3": "^3.5.17",
    "deep-equal": "^1.0.1",
    "escape-html": "^1.0.3",
    "fs-extra-promise": "^0.3.1",
    "fs-jetpack": "^0.9.1",
    "fuzzaldrin": "^2.1.0",
    "jquery": "2.x",
    "jquery.scrollto": "^2.1.2",
    "js-beautify": "^1.6.2",
    "mkdirp": "^0.5.1",
    "nedb": "^1.8.0",
    "onecolor": "^3.0.3",
    "path-exists": "^3.0.0",
    "react": "^15.1.0",
    "react-dom": "^15.1.0",
    "rimraf": "^2.5.2",
    "specificity": "^0.1.5",
    "valid-filename": "^1.1.1",
    "valid-media-queries": "0.0.3",
    "winreg": "^1.2.1",
    "ws": "^1.1.0",
    "appdmg": "^0.4.5",
    "cross-zip": "^2.1.2",
    "electron-packager": "^7.0.2",
    "electron-osx-sign": "^0.3.1",
    "electron-winstaller": "^2.3.0",
    "gh-release": "^2.0.3",
    "run-series": "^1.1.4",
    "minimist": "^1.2.0",
    "nobin-debian-installer": "^0.0.10",
    "plist": "^1.2.0"
  },
  "devDependencies": {
    "babel-core": "^6.9.0",
    "babel-eslint": "^6.0.4",
    "babel-loader": "^6.2.4",
    "babel-plugin-transform-es2015-function-name": "^6.9.0",
    "babel-plugin-transform-es2015-modules-commonjs": "^6.8.0",
    "babel-plugin-transform-object-rest-spread": "^6.8.0",
    "babel-plugin-transform-react-jsx": "^6.8.0",
    "babel-plugin-transform-remove-console": "^6.8.0",
    "babel-plugin-transform-runtime": "^6.9.0",
    "babel-preset-es2015": "^6.9.0",
    "babel-preset-es2015-rollup": "^1.1.1",
    "babel-preset-react": "^6.5.0",
    "chai": "^3.5.0",
    "chai-as-promised": "^5.3.0",
    "colors": "^1.1.2",
    "devtron": "^1.1.2",
    "electron-prebuilt": "^1.1.1",
    "eslint": "^2.10.2",
    "eslint-config-airbnb": "^9.0.1",
    "eslint-config-standard": "^5.3.1",
    "eslint-plugin-import": "^1.8.0",
    "eslint-plugin-jsx-a11y": "^1.2.2",
    "eslint-plugin-promise": "^1.1.0",
    "eslint-plugin-react": "^5.1.1",
    "eslint-plugin-standard": "^1.3.2",
    "json-loader": "^0.5.4",
    "mocha": "^2.4.5",
    "electron-react-devtools": "^0.14.10",
    "rollup": "^0.26.3",
    "rollup-plugin-babel": "^2.4.0",
    "rollup-plugin-commonjs": "^2.2.1",
    "rollup-plugin-json": "^2.0.0",
    "rollup-plugin-node-resolve": "^1.5.0",
    "rollup-plugin-uglify": "^0.3.1",
    "webpack": "^1.13.1"
  },
  "optionalDependencies": {
    "appdmg": "^0.4.5",
    "cross-zip": "^2.1.2",
    "electron-packager": "^7.0.2",
    "electron-osx-sign": "^0.3.1",
    "electron-winstaller": "^2.3.0",
    "gh-release": "^2.0.3",
    "run-series": "^1.1.4",
    "minimist": "^1.2.0",
    "nobin-debian-installer": "^0.0.10",
    "plist": "^1.2.0"
  },
  "scripts": {
    "start": "electron . development",
    "lint": "eslint src",
    "test": "eslint src && jest",
    "test-app": "./node_modules/mocha/bin/mocha ./app/test --compilers js:babel-core/register",
    "webpack": "NODE_ENV=production webpack --config scripts/webpack.js",
    "rollup": "rollup -c --config scripts/rollup.js",
    "prod": "npm run webpack && electron .",
    "build": "npm install && npm prune && npm dedupe && npm run webpack && node ./scripts/build.js",
    "clean": "node ./scripts/clean.js"
  },
  "gitHead": "c80e24ba6a8dfa0fd5d8c3526b669dafbb7210f1",
  "_npmVersion": "3.9.3",
  "_nodeVersion": "5.11.1",
  "dist": {
    "shasum": "fc3c7779efefef193386cd3e9d62834ce0f8191f",
    "tarball": "http://registry.npmjs.org/psyclone-studio/-/psyclone-studio-0.6.0.tgz"
  },
  "versions": [
    {
      "number": "0.6.0",
      "date": "2016-05-24T05:50:21.037Z"
    }
  ],
  "created": "2016-05-24T05:50:21.037Z",
  "modified": "2016-05-24T05:50:21.037Z",
  "lastPublisher": {
    "name": "firejune",
    "email": "firejune@gmail.com"
  },
  "owners": [
    {
      "name": "firejune",
      "email": "firejune@gmail.com"
    }
  ],
  "readme": "![build status](https://git.rsupport.com/psyclone/studio/badges/master/build.svg)\n[![js-semistandard-style](https://cdn.rawgit.com/flet/semistandard/master/badge.svg)](https://github.com/Flet/semistandard)\n\n# Psyclone - Automated Dynamic Testing Solution\n\n- [Class Hierarchy(PDF)](https://git.rsupport.com/psyclone/studio/raw/master/assets/class-hierarchy.pdf)\n- [Electron Quick Start Guide](http://electron.atom.io/docs/latest/tutorial/quick-start/)\n- [Electron API Documentation](https://github.com/atom/electron/tree/master/docs)\n- [Electron Community](http://discuss.atom.io/category/electron)\n- [Awesome Electron](https://github.com/sindresorhus/awesome-electron)\n\n\n## Key Features:\n---\n- No test codes in your app.\n- Write test code easy as user interact.\n- Screen compare and object tracking oriented.\n- End-to-End Test with ATDD.\n- Realtime debugging and analysis.\n- Support multiple device connection.\n- Possible stress test(continuously).\n- Remote control your mobile device anytime.\n- Mobile game testing.\n\n\n## Architecture\n---\n[![Architecture](https://git.rsupport.com/psyclone/studio/raw/master/assets/architecture.png)](https://git.rsupport.com/psyclone/studio/raw/master/public/architecture.png)\n\n\n## Naming Rule\n```\n# Models:\nProject > Suite > Case > Step\n\n# Properties:\nproject: object\n    id: string\n    name: string\n    description: string\n    type: string\n    manifest: object\n    index: object\n    screenshot: string\n    app: string\n    suites: array\nsuite: object\n    id: string\n    name: string\n    cases: array\ncase: object\n    id: string\n    name: string\n    screen: array\n    units: array\nunit: object\n    id: string\n    name: string\n    type: string\n    data: object\n\n# Methods\nprojects\n    list\n    get\n    insert\n    save\ndevice\n    list\n    connect\n    disconnect\n    getScreenshot\n    getWindowDump\n    monkey\napp\n    install\n    uninstall\n    crawl\n    manifast\n    launch\n    exit\n\n# Events\ndevice\n    'connect'\n    'disconnect'\n\netc\n    'add'\n    'remove'\n    'progress'\n    'data'\n    'start'\n    'end'\n    'error'\n```\n\n## Usage\n---\n1. Download a prebuilt binary or use npm to install from the command line, then check out the Quick Start Guide. Read the documentation or check out projects and build tools created by the community.\n\n```\n$ npm install\n$ npm start\n```\n\n2. Package your electron app in OS executables (.app, .exe, etc) via JS or CLI. Supports building Windows, Linux or Mac executables.\n```\n$ npm run build\n```\n\nTo build for one platform:\n\n```\n$ npm run build [platform]\n```\n\nTo build for target package type with CPU architecture:\n\n```\n$ npm run build -- [platform] --package=[package] --arch=[arch]\n```\n\nWhere `[platform]` is `darwin`, `linux`, `win32`, or `all` (default).\n\nThe following optional arguments are available:\n\n- `--sign` - Sign the application (OS X, Windows)\n- `--package=[type]` - Package single output type.\n   - `deb` - Debian package\n   - `zip` - Linux zip file\n   - `dmg` - OS X disk image\n   - `exe` - Windows installer\n   - `portable` - Windows portable app\n   - `all` - All platforms (default)\n\n- `--arch=[type]` - CPU type.\n   - `x64` - x64 architecture\n   - `x86` - x86 architecture\n   - `all` - All CPU architecture (default)\n\nNote: Even with the `--package` option, the auto-update files (.nupkg for Windows, *-darwin.zip for OS X) will always be produced.\n\n#### Windows build notes\n\nTo package the Windows app from non-Windows platforms, [Wine](https://www.winehq.org/) needs\nto be installed.\n\nOn OS X, first install [XQuartz](http://www.xquartz.org/), then run:\n\n```\nbrew install wine\nbrew install mono\n```\n\n(Requires the [Homebrew](http://brew.sh/) package manager.)\n\n\n## Mockups\n---\n  [![Mockup](https://git.rsupport.com/psyclone/studio/raw/master/assets/mockup.png)](https://git.rsupport.com/psyclone/studio/raw/master/public/mockup.png)\n\n\n## Roadmap\n---\n[![Roadmap](https://git.rsupport.com/psyclone/studio/raw/master/assets/roadmap.png)](https://git.rsupport.com/psyclone/studio/raw/master/public/roadmap.png)\n\n## Cloud Architecture\n---\n[![Cloud Architecture](https://git.rsupport.com/psyclone/studio/raw/master/assets/cloud.png)](https://git.rsupport.com/psyclone/studio/raw/master/public/cloud.png)\n\n## License\n---\nCopyright 2016 RSUPPORT CO., LTD. All rights reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License."
}