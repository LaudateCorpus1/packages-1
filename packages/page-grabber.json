{
  "name": "page-grabber",
  "version": "0.3.5",
  "description": "Util for grab data from web-page",
  "main": "index.js",
  "typings": "typings.d.ts",
  "dependencies": {
    "lodash": "^4.15.0"
  },
  "devDependencies": {
    "jasmine": "2.4.1"
  },
  "scripts": {
    "test": "electron test.js"
  },
  "repository": {
    "user": "arvitaly",
    "repo": "page-grabber",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/arvitaly/page-grabber/tarball/master",
    "clone_url": "https://github.com/arvitaly/page-grabber",
    "https_url": "https://github.com/arvitaly/page-grabber",
    "travis_url": "https://travis-ci.org/arvitaly/page-grabber",
    "zip_url": "https://github.com/arvitaly/page-grabber/archive/master.zip",
    "api_url": "https://api.github.com/repos/arvitaly/page-grabber"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "homepage": "https://github.com/arvitaly/page-grabber#readme",
  "gitHead": "3fe3c1560636b8a8107d74702f937be72dcc12a5",
  "_npmVersion": "3.10.8",
  "_nodeVersion": "7.0.0",
  "dist": {
    "shasum": "499654fe67004f68774f8f03303b6f8725fd9c7f",
    "tarball": "http://registry.npmjs.org/page-grabber/-/page-grabber-0.3.5.tgz"
  },
  "versions": [
    {
      "number": "0.0.1",
      "date": "2016-08-29T17:19:40.841Z"
    },
    {
      "number": "0.0.2",
      "date": "2016-08-29T21:04:41.073Z"
    },
    {
      "number": "0.0.3",
      "date": "2016-08-29T21:36:11.478Z"
    },
    {
      "number": "0.0.4",
      "date": "2016-08-31T01:14:44.224Z"
    },
    {
      "number": "0.0.5",
      "date": "2016-08-31T08:59:12.698Z"
    },
    {
      "number": "0.0.6",
      "date": "2016-08-31T09:22:47.123Z"
    },
    {
      "number": "0.0.7",
      "date": "2016-08-31T11:59:22.413Z"
    },
    {
      "number": "0.0.8",
      "date": "2016-08-31T12:13:45.530Z"
    },
    {
      "number": "0.0.9",
      "date": "2016-08-31T12:19:05.157Z"
    },
    {
      "number": "0.1.0",
      "date": "2016-09-16T00:22:34.404Z"
    },
    {
      "number": "0.1.1",
      "date": "2016-09-16T00:28:01.231Z"
    },
    {
      "number": "0.1.2",
      "date": "2016-10-11T02:10:51.627Z"
    },
    {
      "number": "0.1.3",
      "date": "2016-10-19T12:27:02.684Z"
    },
    {
      "number": "0.2.3",
      "date": "2016-10-28T04:54:36.703Z"
    },
    {
      "number": "0.2.4",
      "date": "2016-10-28T04:56:51.762Z"
    },
    {
      "number": "0.2.5",
      "date": "2016-10-28T06:56:20.108Z"
    },
    {
      "number": "0.3.5",
      "date": "2016-11-10T17:50:44.897Z"
    }
  ],
  "created": "2016-08-29T17:19:40.841Z",
  "modified": "2016-11-10T17:50:44.897Z",
  "lastPublisher": {
    "name": "arvitaly",
    "email": "arvitaly@list.ru"
  },
  "owners": [
    {
      "name": "arvitaly",
      "email": "arvitaly@list.ru"
    }
  ],
  "readme": "# page-grabber [![Build Status](https://travis-ci.org/arvitaly/page-grabber.svg?branch=master)](https://travis-ci.org/arvitaly/page-grabber)\r\nUtil for grab data from web-page. Grabber take schema for data and look Window-tree by it. \r\n\r\n# Example observe\r\n\r\n    var grabber = require('page-grabber')(window);\r\n\r\n    //Helpers for create data schema\r\n    var sel = grabber.sel; //Set context for selector\r\n    var val = grabber.val; //Get value of input element //el.value\r\n    var attr = grabber.attr; //Get attribute value\r\n    var css = grabber.attr; //Get computed style\r\n    var hasClass = grabber.hasClass //check if class exists in class=\"...class1...\"//boolean\r\n    var text = grabber.text; //Get textContent value\r\n    var obj = grabber.obj; //Set context for JS-object\r\n    var child = grabber.child; //Set context for childNodes by index\r\n    ////////////////////////////////\r\n    var model = grabber.model({\r\n        posts: sel(\"#ul > li > a\", [{\r\n            text: child(0, text()),\r\n            display: css(\"display\"),\r\n            active: hasClass(\"active\"),\r\n            link: attr(\"href\"),\r\n            smallText: sel(\"span\", text())\r\n        }]),\r\n        data1: obj(\"test1\", {\r\n            data: obj(\"data\", [{\r\n                val: obj(\"test5\")\r\n            }])\r\n        })\r\n    })\r\n    model.on(\"posts\", (data)=>{\r\n        console.log(\"posts\", data);\r\n    })\r\n    model.on(\"data1\", (data)=>{\r\n        console.log(\"data1\", data);\r\n    })    "
}