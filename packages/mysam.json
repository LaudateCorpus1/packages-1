{
  "name": "mysam",
  "version": "0.1.3",
  "description": "An open, web-based \"intelligent\" assistant that can listen to you and learn.",
  "main": "lib/electron",
  "bin": {
    "mysam": "./bin/mysam"
  },
  "scripts": {
    "start": "node lib/server",
    "electron": "electron .",
    "compile": "babel src --out-dir lib",
    "compile:watch": "babel src --out-dir lib --watch",
    "test": "npm run jshint && npm run mocha",
    "jshint": "jshint src/. test/. --config",
    "mocha:watch": "mocha --compilers js:babel/register test/ --watch --recursive --growl --reporter Min",
    "mocha": "mocha --compilers js:babel/register test/ --recursive",
    "publish": "git push origin && git push origin --tags",
    "release:patch": "npm version patch && npm publish",
    "release:minor": "npm version minor && npm publish",
    "release:major": "npm version major && npm publish"
  },
  "repository": {
    "user": "daffl",
    "repo": "mysam",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/daffl/mysam/tarball/master",
    "clone_url": "https://github.com/daffl/mysam",
    "https_url": "https://github.com/daffl/mysam",
    "travis_url": "https://travis-ci.org/daffl/mysam",
    "zip_url": "https://github.com/daffl/mysam/archive/master.zip",
    "api_url": "https://api.github.com/repos/daffl/mysam"
  },
  "author": {
    "name": "David Luecke",
    "email": "daff@neyeon.com"
  },
  "license": "MIT",
  "dependencies": {
    "body-parser": "^1.13.0",
    "commander": "^2.8.1",
    "debug": "^2.2.0",
    "electron-prebuilt": "^0.36.2",
    "feathers": "^1.2.0",
    "feathers-hooks": "^0.5.0",
    "feathers-memory": "^0.3.4",
    "feathers-nedb": "^0.1.0",
    "lodash": "^3.9.3",
    "mysam-frontend": "^0.1.0",
    "natural-brain": "^0.2.0",
    "pos": "^0.1.9",
    "q": "^1.4.1"
  },
  "devDependencies": {
    "babel": "^5.8.23",
    "jshint": "^2.8.0",
    "mocha": "^2.3.0",
    "mysam-weather": "0.0.2",
    "supervisor": "^0.6.0"
  },
  "gitHead": "5f604fdd7dac85aa4c1c13f77973dceaec6fb26f",
  "homepage": "https://github.com/daffl/mysam#readme",
  "_npmVersion": "2.14.12",
  "_nodeVersion": "4.2.4",
  "dist": {
    "shasum": "d53ca8445e5b206ef27d043a19a1a043bda13c0e",
    "tarball": "http://registry.npmjs.org/mysam/-/mysam-0.1.3.tgz"
  },
  "versions": [
    {
      "number": "0.0.1",
      "date": "2015-10-09T06:19:39.709Z"
    },
    {
      "number": "0.0.2",
      "date": "2015-10-09T15:24:31.361Z"
    },
    {
      "number": "0.0.3",
      "date": "2015-10-11T06:08:56.213Z"
    },
    {
      "number": "0.1.0",
      "date": "2015-10-20T04:15:47.022Z"
    },
    {
      "number": "0.1.1",
      "date": "2015-10-20T06:12:53.609Z"
    },
    {
      "number": "0.1.2",
      "date": "2015-11-18T07:54:25.271Z"
    },
    {
      "number": "0.1.3",
      "date": "2016-01-07T15:03:59.855Z"
    }
  ],
  "created": "2015-10-09T06:19:39.709Z",
  "modified": "2016-01-07T15:03:59.855Z",
  "lastPublisher": {
    "name": "daffl",
    "email": "daff@neyeon.de"
  },
  "owners": [
    {
      "name": "daffl",
      "email": "daff@neyeon.de"
    }
  ],
  "readme": "# Say *hi*, SAM\n\n[![Codeship Status for daffl/mysam](https://codeship.com/projects/b26a3f10-3c66-0133-d19d-1276d5d0a1e7/status?branch=master)](https://codeship.com/projects/102258)\n\n> Sam is an open-source, web-based *\"intelligent\"* assistant. It can listen to you, learn new actions and is extensible with JavaScript plugins. Sam runs a [NodeJS](https://nodejs.org/en/) server and in any modern browser or as an [Electron](http://electron.atom.io/) desktop application.\n\nWatch this video to see what Sam can do:\n\n[![MySam video](http://daffl.github.io/mysam/mysam-video.png)](https://www.youtube.com/watch?v=VxFtSsCM_bo)\n\n## Table of Contents\n\n- [Installation](#installation)\n- [Getting Started](#getting-started)\n- [Using the CLI](#using-the-cli)\n- [Plugins](#plugins)\n  - [Creating Plugins](#creating-plugins)\n- [Contributing](#contributing)\n- [License](#license)\n\n## Installation\n\nInstall Sam globally with:\n\n`$ npm install mysam -g`\n\nAnd then run either the desktop application with:\n\n`$ mysam`\n\nOr the server only (which will be available at [localhost:9090](http://localhost:9090)) via:\n\n`$ mysam --server`\n\n## Getting Started\n\nAt first startup Sam will load the basic frontend training data (like learning your name, provide help, saying hi or to learn something new) and ask for your name.\n\nTo talk to Sam press *CTRL + SPACE* (make sure the window is focused).\n\nAll inputs can be submitted with *CTRL + ENTER* (when not in a textarea).\n\n## Using the CLI\n\nThe following command line options are available:\n\n|       Flags       |        Description        |\n|-------------------|---------------------------|\n| `-s`, `--server`  | Start server mode only    |\n| `-d`, `--develop` | Start in development mode |\n\nDevelopment mode (`--develop`) will load the development tools in the Electron application, output detailed log messages to the command line and load the frontend in individual modules. This is helpful when creating your own plugins.\n\n## Plugins\n\nAll plugins are available on NPM. To ask Sam about the weather run:\n\n`$ npm install mysam-weather -g`\n\nThen restart the application and ask something like\n\n> What's the weather in Berlin?\n\n### Creating Plugins\n\nTo create a new plugin create a new folder with the following `package.json`:\n\n```\n{\n  \"name\": \"mysam-myplugin\",\n  \"main\": \"server\",\n  \"mysam\": {\n    \"client\": \"frontend\",\n    \"styles\": \"styles.css\"\n  },\n  \"keywords\": [\n    \"mysam-plugin\"\n  ]\n}\n```\n> **Note**: It is important to add the `mysam-plugin` keyword to your `package.json`\nfile to ensure that your plugin will be shown in *MySam*'s plugins catalog.\n\n- In the same folder a `server.js` like this:\n\n  ```js\n  module.exports = function(sam) {\n    // on the server, `sam` is a Feathers application so\n    // for example we can create new actions like this:\n    sam.service('actions').create({\n      text: 'Ping from my plugin',\n      tags: [],\n      action: {\n        type: 'myplugin',\n        ping: 'Default ping'\n      }\n    }, function(error, data) {\n      console.log('Created', data);\n    });\n  };\n  ```\n\n- And a `frontend.js` like this:\n\n  ```js\n  module.exports = function(sam) {\n    // sam is the client side application instance\n    // which you can register new actions like this:\n    sam.action('myplugin', function(element, classification) {\n      // element is the jQuery wrapped main element\n      // classification is an object with information about the\n      // text that triggered this action\n      var heading = document.createElement('h1');\n      heading.className = 'myplugin';\n      heading.innerHTML = 'Hello from my plugin: ' + classification.action.ping;\n\n      element.html(heading);\n    });\n\n    // and learners (which will also show up in the help) like this\n    sam.learn({\n      description: 'Call myplugin',\n      tags: ['name'],\n      form: function(el, save) {\n        el.html('<input type=\"text\" class=\"param\" />')\n          .on('submit', function(save) {\n            save({\n              type: 'myplugin',\n              ping: el.find('.param').val()\n            });\n          });\n      }\n    });\n  };\n  ```\n\n- `styles.css` can contain any CSS styles:\n\n  ```css\n  .myplugin {\n    font-size: 4em;\n  }\n  ```\n\n> You'll soon have a [Yeoman](http://yeoman.io/) generator for new plugins\nthat initialize everything similar to what is described above so that you can\njust do `$ mysam create my-plugin`.\n\nTo use the plugin run\n\n`$ npm link`\n\nin the plugin folder and restart the application (for easier debugging you can use the `--develop` flag).\n\nNow saying something like:\n\n> *Can I get a ping from my plugin please?*\n\nShould show the element we created in the action.\n\n## Developing\n\nIf you want to develop on this repository initialize it with\n\n> git clone git@github.com:mysamai/mysam.git\n> cd mysam\n> npm install\n\nTo run the installation you *have to* compile first with\n\n> npm run compile\n> bin/mysam\n\nTo continuously watch for changes run\n\n> npm run compile:watch\n\n## Contributing\n\nContributions are very welcome! If you'd like to contribute, these [guidelines](CONTRIBUTING.md) may help you.\n\n## License\n\n[MySam](https://github.com/daffl/mysam) is distributed under the MIT License, [available in this repository](master/LICENSE.md). All contributions are assumed to be also licensed under the same.\n"
}