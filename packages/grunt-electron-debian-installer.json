{
  "name": "grunt-electron-debian-installer",
  "description": "Create a Debian package for your Electron app.",
  "version": "0.1.2",
  "license": "MIT",
  "author": {
    "name": "Daniel Perez Alvarez",
    "email": "unindented@gmail.com",
    "url": "http://unindented.org/"
  },
  "repository": {
    "user": "unindented",
    "repo": "grunt-electron-debian-installer",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/unindented/grunt-electron-debian-installer/tarball/master",
    "clone_url": "https://github.com/unindented/grunt-electron-debian-installer",
    "https_url": "https://github.com/unindented/grunt-electron-debian-installer",
    "travis_url": "https://travis-ci.org/unindented/grunt-electron-debian-installer",
    "zip_url": "https://github.com/unindented/grunt-electron-debian-installer/archive/master.zip",
    "api_url": "https://api.github.com/repos/unindented/grunt-electron-debian-installer"
  },
  "keywords": [
    "gruntplugin",
    "electron"
  ],
  "os": [
    "darwin",
    "linux"
  ],
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "asar": "^0.9.0",
    "async": "^1.5.1",
    "fs-extra": "^0.26.0",
    "get-folder-size": "^1.0.0",
    "glob": "^6.0.3",
    "lodash": "^4.0.1",
    "temp": "^0.8.3",
    "word-wrap": "^1.1.0"
  },
  "devDependencies": {
    "grunt": "^0.4.0",
    "grunt-contrib-clean": "^0.7.0",
    "grunt-contrib-jshint": "^0.12.0",
    "grunt-contrib-nodeunit": "^0.4.1"
  },
  "peerDependencies": {
    "grunt": "^0.4.0"
  },
  "gitHead": "57bf7f5788cee7816f851127655626e891d3ed31",
  "homepage": "https://github.com/unindented/grunt-electron-debian-installer#readme",
  "_npmVersion": "2.14.12",
  "_nodeVersion": "4.2.6",
  "dist": {
    "shasum": "b9bb60963c7ac6611e1d048e459e65cd4c41a794",
    "tarball": "http://registry.npmjs.org/grunt-electron-debian-installer/-/grunt-electron-debian-installer-0.1.2.tgz"
  },
  "deprecated": "This package has been renamed to grunt-electron-installer-debian for {{reasons}}.",
  "stars": 0,
  "versions": [
    {
      "number": "0.0.1",
      "date": "2015-07-17T12:08:45.601Z"
    },
    {
      "number": "0.0.2",
      "date": "2015-07-19T01:30:19.259Z"
    },
    {
      "number": "0.0.3",
      "date": "2015-07-20T18:08:59.166Z"
    },
    {
      "number": "0.0.4",
      "date": "2015-07-22T18:22:29.680Z"
    },
    {
      "number": "0.0.5",
      "date": "2015-08-07T08:07:47.088Z"
    },
    {
      "number": "0.1.0",
      "date": "2015-09-11T10:56:02.796Z"
    },
    {
      "number": "0.1.1",
      "date": "2016-01-26T17:15:25.282Z"
    },
    {
      "number": "0.1.2",
      "date": "2016-02-05T20:44:03.857Z"
    }
  ],
  "created": "2015-07-17T12:08:45.601Z",
  "modified": "2016-02-05T21:01:09.801Z",
  "lastPublisher": {
    "name": "unindented",
    "email": "unindented@gmail.com"
  },
  "owners": [
    {
      "name": "unindented",
      "email": "unindented@gmail.com"
    }
  ],
  "readme": "# grunt-electron-debian-installer [![Version](https://img.shields.io/npm/v/grunt-electron-debian-installer.svg)](https://www.npmjs.com/package/grunt-electron-debian-installer) [![Build Status](https://img.shields.io/travis/unindented/grunt-electron-debian-installer.svg)](http://travis-ci.org/unindented/grunt-electron-debian-installer) [![Dependency Status](https://img.shields.io/gemnasium/unindented/grunt-electron-debian-installer.svg)](https://gemnasium.com/unindented/grunt-electron-debian-installer)\n\n> Create a Debian package for your Electron app.\n\n\nðŸš¨ This package has been renamed to `grunt-electron-installer-debian`! ðŸš¨\n\n\n## Requirements\n\nThis tool requires `fakeroot` and `dpkg` to build the `.deb` package.\n\nI'd recommend building your packages on your target platform, but if you insist on using Mac OS X, you can install these tools through [Homebrew](http://brew.sh/):\n\n```\n$ brew install fakeroot dpkg\n```\n\n\n## Getting Started\n\nThis plugin requires Grunt `~0.4.0`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-electron-debian-installer --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-electron-debian-installer');\n```\n\n*This plugin was designed to work with Grunt 0.4.x. If you're still using grunt v0.3.x it's strongly recommended that [you upgrade](http://gruntjs.com/upgrading-from-0.3-to-0.4), but in case you can't please use [v0.3.2](https://github.com/gruntjs/grunt-contrib-copy/tree/grunt-0.3-stable).*\n\n\n## Installer task\n\n_Run this task with the `grunt electron-debian-installer` command._\n\nTask targets, files and options may be specified according to the grunt [Configuring tasks](http://gruntjs.com/configuring-tasks) guide.\n\n### Usage\n\nSay your app lives in `path/to/app`, and has a structure like this:\n\n```\n$ tree path/to/app/ -L 2\npath/to/app/\nâ”œâ”€â”€ LICENSE\nâ”œâ”€â”€ index.js\nâ”œâ”€â”€ main\nâ”‚Â Â  â”œâ”€â”€ index.js\nâ”‚Â Â  â””â”€â”€ squirrel.js\nâ”œâ”€â”€ node_modules\nâ”‚Â Â  â”œâ”€â”€ fs-plus\nâ”‚Â Â  â””â”€â”€ yargs\nâ”œâ”€â”€ package.json\nâ””â”€â”€ renderer\n    â”œâ”€â”€ index.css\n    â”œâ”€â”€ index.html\n    â””â”€â”€ index.js\n```\n\nTo create a `.deb` package from your app, the configuration for your task would look like this:\n\n```js\n'electron-debian-installer': {\n  app: {\n    options: {\n      arch: 'i386'\n    },\n    src: 'path/to/app/',\n    dest: 'path/to/out/'\n  }\n}\n```\n\nThe task will try to extract all necessary information from your `package.json`, and then generate your package at `path/to/out`.\n\nYou can also create different packages for different architectures, while manually overriding certain options:\n\n```js\n'electron-debian-installer': {\n  options: {\n    productName: 'Foo',\n    productDescription: 'Bar baz qux.',\n    section: 'devel',\n    priority: 'optional',\n    lintianOverrides: [\n      'changelog-file-missing-in-native-package',\n      'executable-not-elf-or-script',\n      'extra-license-file'\n    ],\n    categories: [\n      'Utility'\n    ],\n    rename: function (dest, src) {\n      return dest + '<%= name %>_<%= version %>-<%= revision %>_<%= arch %>.deb';\n    }\n  },\n\n  linux32: {\n    options: {\n      arch: 'i386'\n    },\n    src: 'path/to/linux32/',\n    dest: 'path/to/out/linux32/'\n  },\n\n  linux64: {\n    options: {\n      arch: 'amd64'\n    },\n    src: 'path/to/linux64/',\n    dest: 'path/to/out/linux64/'\n  }\n}\n```\n\n### Options\n\n#### src\nType: `String`\nDefault: `undefined`\n\nPath to the folder that contains your built Electron application.\n\n#### dest\nType: `String`\nDefault: `undefined`\n\nPath to the folder that will contain your Red Hat installer.\n\n#### options.name\nType: `String`\nDefault: `package.name`\n\nName of the package (e.g. `atom`), used in the [`Package` field of the `control` specification](https://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-Package).\n\nAccording to the *Debian Policy Manual*:\n\n> Package names [...] must consist only of lower case letters (a-z), digits (0-9), plus (+) and minus (-) signs, and periods (.). They must be at least two characters long and must start with an alphanumeric character.\n\n#### options.productName\nType: `String`\nDefault: `package.productName || package.name`\n\nName of the application (e.g. `Atom`), used in the [`Name` field of the `desktop` specification](http://standards.freedesktop.org/desktop-entry-spec/desktop-entry-spec-latest.html).\n\n#### options.genericName\nType: `String`\nDefault: `package.genericName || package.productName || package.name`\n\nGeneric name of the application (e.g. `Text Editor`), used in the [`GenericName` field of the `desktop` specification](http://standards.freedesktop.org/desktop-entry-spec/desktop-entry-spec-latest.html).\n\n#### options.description\nType: `String`\nDefault: `package.description`\n\nShort description of the application, used in the [`Description` field of the `control` specification](https://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-Description).\n\n#### options.productDescription\nType: `String`\nDefault: `package.productDescription || package.description`\n\nLong description of the application, used in the [`Description` field of the `control` specification](https://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-Description).\n\n#### options.version\nType: `String`\nDefault: `package.version`\n\nVersion number of the package, used in the [`Version` field of the `control` specification](https://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-Version).\n\n#### options.revision\nType: `String`\nDefault: `package.revision`\n\nRevision number of the package, used in the [`Version` field of the `control` specification](https://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-Version).\n\n#### options.section\nType: `String`\nDefault: `\"utils\"`\n\nApplication area into which the package has been classified, used in the [`Section` field of the `control` specification](https://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-Section).\n\nYou can read more about [sections](https://www.debian.org/doc/debian-policy/ch-archive.html#s-subsections), and also check out the [list of existing sections in Debian unstable](https://packages.debian.org/unstable/).\n\n#### options.priority\nType: `String`\nDefault: `\"optional\"`\n\nHow important it is that the user have the package installed., used in the [`Priority` field of the `control` specification](https://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-Priority).\n\nYou can read more about [priorities](https://www.debian.org/doc/debian-policy/ch-archive.html#s-priorities).\n\n#### options.arch\nType: `String`\nDefault: `undefined`\n\nMachine architecture the package is targeted to, used in the [`Architecture` field of the `control` specification](https://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-Architecture).\n\nFor possible values see the output of `dpkg-architecture -L`.\n\n#### options.size\nType: `Integer`\nDefault: `size of the folder`\n\nEstimate of the total amount of disk space required to install the named package, used in the [`Installed-Size` field of the `control` specification](https://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-Installed-Size).\n\n#### options.depends et al\nType: `Array[String]`\nDefault: `[]`\n\nRelationships to other packages, used in the [`Depends`, `Recommends`, `Suggests`, `Enhances` and `Pre-Depends` fields of the `control` specification](https://www.debian.org/doc/debian-policy/ch-relationships.html#s-binarydeps).\n\n#### options.maintainer\nType: `String`\nDefault: `package.author.name (package.author.email)`\n\nMaintainer of the package, used in the [`Maintainer` field of the `control` specification](https://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-Maintainer).\n\n#### options.homepage\nType: `String`\nDefault: `package.homepage || package.author.url`\n\nURL of the homepage for the package, used in the [`Homepage` field of the `control` specification](https://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-Homepage).\n\n#### options.bin\nType: `String`\nDefault: `package.name`\n\nRelative path to the executable that will act as binary for the application, used in the [`Exec` field of the `desktop` specification](http://standards.freedesktop.org/desktop-entry-spec/desktop-entry-spec-latest.html).\n\nThe generated package will contain a symlink `/usr/bin/<%= options.name %>` pointing to the path provided here.\n\nFor example, providing this configuration:\n\n```js\n{\n  options: {\n    name: 'foo',\n    bin: 'resources/cli/launcher.sh'\n  },\n  src: '...',\n  dest: '...'\n}\n```\n\nWill create a package with the following symlink:\n\n```\nusr/bin/foo@ -> ../share/foo/resources/cli/launcher/sh\n```\n\nAnd a desktop specification with the following `Exec` key:\n\n```\nExec=foo %U\n```\n\n#### options.icon\nType: `String`\nDefault: `undefined`\n\nPath to the image that will act as icon for the application, used in the [`Icon` field of the `desktop` specification](http://standards.freedesktop.org/desktop-entry-spec/desktop-entry-spec-latest.html).\n\n#### options.categories\nType: `Array[String]`\nDefault: `[]`\n\nCategories in which the application should be shown in a menu, used in the [`Categories` field of the `desktop` specification](http://standards.freedesktop.org/desktop-entry-spec/desktop-entry-spec-latest.html).\n\nFor possible values check out the [Desktop Menu Specification](http://standards.freedesktop.org/menu-spec/latest/apa.html).\n\n#### options.lintianOverrides\nType: `Array[String]`\nDefault: `[]`\n\nYou can use these to quieten [`lintian`](https://lintian.debian.org/manual/).\n\n#### options.rename\nType: `Function`\nDefault: `function (dest, src) { return dest + src; }`\n\nFunction that renames all files generated by the task just before putting them in your `dest` folder.\n\n\n## Meta\n\n* Code: `git clone git://github.com/unindented/grunt-electron-debian-installer.git`\n* Home: <https://github.com/unindented/grunt-electron-debian-installer/>\n\n\n## Contributors\n\n* Daniel Perez Alvarez ([unindented@gmail.com](mailto:unindented@gmail.com))\n\n\n## License\n\nCopyright (c) 2015 Daniel Perez Alvarez ([unindented.org](https://unindented.org/)). This is free software, and may be redistributed under the terms specified in the LICENSE file.\n"
}