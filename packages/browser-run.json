{
  "name": "browser-run",
  "description": "Transform stream that executes JavaScript it receives in a real browser and outputs console output",
  "version": "3.2.1",
  "repository": {
    "user": "juliangruber",
    "repo": "browser-run",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/juliangruber/browser-run/tarball/master",
    "clone_url": "https://github.com/juliangruber/browser-run",
    "https_url": "https://github.com/juliangruber/browser-run",
    "travis_url": "https://travis-ci.org/juliangruber/browser-run",
    "zip_url": "https://github.com/juliangruber/browser-run/archive/master.zip",
    "api_url": "https://api.github.com/repos/juliangruber/browser-run"
  },
  "homepage": "https://github.com/juliangruber/browser-run",
  "main": "index.js",
  "bin": {
    "browser-run": "./bin/bin.js"
  },
  "scripts": {
    "prepublish": "make build",
    "test": "make test"
  },
  "dependencies": {
    "browser-launcher": "^0.3.5",
    "duplexer": "^0.1.1",
    "ecstatic": "^2.0.0",
    "electron-stream": "^3.0.1",
    "enstore": "^1.0.1",
    "html-inject-script": "^1.1.0",
    "optimist": "^0.6.1",
    "phantomjs-stream": "^1.1.1",
    "server-destroy": "^1.0.1",
    "source-map-support": "^0.4.0",
    "through": "^2.3.8",
    "xhr-write-stream": "^0.1.2"
  },
  "devDependencies": {
    "browserify": "^13.0.0",
    "concat-stream": "^1.5.1",
    "phantomjs-prebuilt-that-works": "^3.0.1",
    "tap": "^7.0.0",
    "tree-kill": "^1.0.0",
    "utf8-stream": "^0.0.0"
  },
  "keywords": [
    "browser",
    "stream",
    "phantomjs",
    "test",
    "headless",
    "duplex"
  ],
  "author": {
    "name": "Julian Gruber",
    "email": "mail@juliangruber.com",
    "url": "http://juliangruber.com"
  },
  "license": "MIT",
  "gitHead": "d05914a93d92f5a7922ecf972502a51471ddf5d9",
  "_npmVersion": "3.10.3",
  "_nodeVersion": "6.7.0",
  "dist": {
    "shasum": "adbfb99006ee8891296100b3930aa41be1a554df",
    "tarball": "http://registry.npmjs.org/browser-run/-/browser-run-3.2.1.tgz"
  },
  "stars": 6,
  "versions": [
    {
      "number": "0.0.0",
      "date": "2013-03-22T21:42:14.341Z"
    },
    {
      "number": "0.0.1",
      "date": "2013-03-22T21:44:57.505Z"
    },
    {
      "number": "0.0.2",
      "date": "2013-03-22T21:51:20.911Z"
    },
    {
      "number": "0.0.3",
      "date": "2013-03-25T08:27:04.566Z"
    },
    {
      "number": "0.0.4",
      "date": "2013-03-25T10:13:13.913Z"
    },
    {
      "number": "0.0.5",
      "date": "2013-04-25T08:49:38.099Z"
    },
    {
      "number": "0.0.6",
      "date": "2013-05-21T17:12:01.290Z"
    },
    {
      "number": "0.1.0",
      "date": "2013-05-22T09:18:03.948Z"
    },
    {
      "number": "0.1.1",
      "date": "2013-05-22T09:23:03.923Z"
    },
    {
      "number": "0.1.2",
      "date": "2013-07-06T20:24:18.772Z"
    },
    {
      "number": "0.2.0",
      "date": "2013-07-06T20:30:26.175Z"
    },
    {
      "number": "0.2.1",
      "date": "2013-07-06T20:32:24.543Z"
    },
    {
      "number": "0.2.2",
      "date": "2013-07-11T14:13:53.605Z"
    },
    {
      "number": "0.3.0",
      "date": "2014-07-13T13:52:23.919Z"
    },
    {
      "number": "0.4.0",
      "date": "2014-08-12T10:46:55.119Z"
    },
    {
      "number": "0.5.0",
      "date": "2014-12-23T20:26:25.716Z"
    },
    {
      "number": "0.6.0",
      "date": "2015-02-15T20:04:26.060Z"
    },
    {
      "number": "1.0.0",
      "date": "2015-03-23T15:00:13.846Z"
    },
    {
      "number": "1.0.1",
      "date": "2015-03-23T15:12:36.681Z"
    },
    {
      "number": "2.0.0",
      "date": "2015-07-31T10:09:39.791Z"
    },
    {
      "number": "2.1.0",
      "date": "2015-08-01T17:23:06.816Z"
    },
    {
      "number": "2.1.1",
      "date": "2015-08-13T14:17:04.891Z"
    },
    {
      "number": "2.1.2",
      "date": "2015-08-14T19:08:06.471Z"
    },
    {
      "number": "2.1.3",
      "date": "2015-08-24T08:25:21.641Z"
    },
    {
      "number": "2.2.0",
      "date": "2015-08-28T08:28:17.667Z"
    },
    {
      "number": "2.3.0",
      "date": "2015-08-28T11:51:51.047Z"
    },
    {
      "number": "2.4.0",
      "date": "2015-09-01T11:55:44.788Z"
    },
    {
      "number": "2.4.1",
      "date": "2015-09-16T13:21:12.574Z"
    },
    {
      "number": "2.4.2",
      "date": "2015-09-16T13:48:07.135Z"
    },
    {
      "number": "2.5.0",
      "date": "2015-09-16T15:13:16.776Z"
    },
    {
      "number": "2.6.0",
      "date": "2015-09-16T15:28:01.656Z"
    },
    {
      "number": "2.6.1",
      "date": "2015-09-30T07:59:13.537Z"
    },
    {
      "number": "2.6.2",
      "date": "2015-10-02T11:34:34.758Z"
    },
    {
      "number": "3.0.0",
      "date": "2015-10-29T17:59:01.501Z"
    },
    {
      "number": "3.0.1",
      "date": "2015-10-29T18:01:56.946Z"
    },
    {
      "number": "3.0.2",
      "date": "2015-10-30T11:13:11.817Z"
    },
    {
      "number": "3.0.3",
      "date": "2015-11-05T16:08:08.456Z"
    },
    {
      "number": "3.0.4",
      "date": "2015-11-30T08:01:58.520Z"
    },
    {
      "number": "3.0.5",
      "date": "2015-12-02T10:41:32.787Z"
    },
    {
      "number": "3.0.6",
      "date": "2016-01-24T17:08:39.189Z"
    },
    {
      "number": "3.0.7",
      "date": "2016-01-27T08:58:07.638Z"
    },
    {
      "number": "3.0.8",
      "date": "2016-01-27T08:59:21.834Z"
    },
    {
      "number": "3.1.0",
      "date": "2016-03-14T19:04:25.922Z"
    },
    {
      "number": "3.1.1",
      "date": "2016-05-22T12:08:24.424Z"
    },
    {
      "number": "3.2.0",
      "date": "2016-05-24T09:18:28.415Z"
    },
    {
      "number": "3.2.1",
      "date": "2016-10-07T16:24:58.927Z"
    }
  ],
  "created": "2013-03-22T21:42:11.264Z",
  "modified": "2016-10-07T16:24:58.927Z",
  "lastPublisher": {
    "name": "juliangruber",
    "email": "julian@juliangruber.com"
  },
  "owners": [
    {
      "name": "juliangruber",
      "email": "julian@juliangruber.com"
    }
  ],
  "readme": "# browser-run\n\nThe easiest way of running code in a browser environment.\n\nBundles `electronjs` by default!\n\n[![build status](https://secure.travis-ci.org/juliangruber/browser-run.svg)](http://travis-ci.org/juliangruber/browser-run)\n[![downloads](https://img.shields.io/npm/dm/browser-run.svg)](https://www.npmjs.org/package/browser-run)\n\n## Usage\n\n```bash\n$ echo \"console.log('Hey from ' + location); window.close()\" | browser-run\nHey from http://localhost:53227/\n$\n```\n\nOr use `browser-run` programmatically:\n\n```js\nvar run = require('browser-run');\n\nvar browser = run();\nbrowser.pipe(process.stdout);\nbrowser.end('console.log(location); window.close()');\n```\n\n## Example with browserify\n\n```bash\n$ browserify main.js | browser-run\n```\n\nor\n\n```js\nvar browserify = require('browserify');\nvar browser = require('browser-run');\n\nbrowserify('main.js').bundle().pipe(browser()).pipe(process.stdout);\n```\n\n## CLI\n\n```bash\n$ browser-run --help\nRun JavaScript in a browser.\nWrite code to stdin and receive console output on stdout.\nUsage: browser-run [OPTIONS]\n\nOptions:\n  --browser, -b  Browser to use. Always available: electron. Available if installed: chrome, firefox, ie, phantom, safari  [default: \"electron\"]\n  --port         Starts listening on that port and waits for you to open a browser                                       \n  --static       Serve static assets from this directory                                                                 \n  --input        Input type. Defaults to 'javascript', can be set to 'html'.                                             \n  --help         Print help                                                                                              \n\n```\n\n## Custom html file\n\nBy using `-input html` or `{ input: 'html' }` you can provide a custom html file for browser-run to use. Keep in mind though that it always needs to have `<script src=\"/reporter.js\"></script>` above other script tags so browser-run is able to properly forward your `console.log`s etc to the terminal.\n\n## API\n\n### run([opts])\n\nReturns a duplex stream and starts a webserver.\n\n`opts` can be:\n\n* `port`: If speficied, no browser will be started, so you can point one yourself to `http://localhost/<port>`\n* `browser`: Browser to use. Defaults to `electron`. Available if installed:\n  * `chrome`\n  * `firefox`\n  * `ie`\n  * `phantom`\n  * `safari`\n* `static`: Serve static files from this directory\n* `input`: Input type. Defaults to `javascript`, can be set to `html`.\n\nIf only an empty string is written to it, an error will be thrown as there is nothing to execute.\n\nIf you call `window.close()` inside the script, the browser will exit.\n\n### run#stop()\n\nStop the underlying webserver.\n\n## Headless testing\n\nTo use the default electron browser on travis, add this to your travis.yml:\n\n```yml\naddons:\n  apt:\n    packages:\n      - xvfb\ninstall:\n  - export DISPLAY=':99.0'\n  - Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &\n  - npm install\n```\n\n[Source](https://github.com/rhysd/Shiba/blob/055a11a0a2b4f727577fe61371a88d8db9277de5/.travis.yml).\n\nFor gnu/linux installations without a graphical environment:\n\n```bash\n$ sudo apt-get install xvfb # or equivalent\n$ export DISPLAY=':99.0'\n$ Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &\n$ browser-run ...\n```\n\nThere is also an example docker machine [here](https://github.com/fraserxu/docker-tape-run).\n\n## Installation\n\nWith [npm](http://npmjs.org) do\n\n```bash\n$ npm install browser-run    # for library\n$ npm install -g browser-run # for cli\n```\n\n## License\n\n(MIT)\n"
}