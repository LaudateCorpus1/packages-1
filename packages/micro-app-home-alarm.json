{
  "name": "micro-app-home-alarm",
  "version": "1.0.2",
  "description": "Alarm dashboard written in node",
  "main": "lib/server.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start": "node lib/server.js"
  },
  "dependencies": {
    "micro-app-framework": "^0.1.1",
    "socket.io": "~1.3.7",
    "mqtt": "~1.6.3",
    "twilio": "^2.2.0"
  },
  "repository": {
    "user": "mhdawson",
    "repo": "micro-app-home-alarm",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/mhdawson/micro-app-home-alarm/tarball/master",
    "clone_url": "https://github.com/mhdawson/micro-app-home-alarm",
    "https_url": "https://github.com/mhdawson/micro-app-home-alarm",
    "travis_url": "https://travis-ci.org/mhdawson/micro-app-home-alarm",
    "zip_url": "https://github.com/mhdawson/micro-app-home-alarm/archive/master.zip",
    "api_url": "https://api.github.com/repos/mhdawson/micro-app-home-alarm"
  },
  "keywords": [
    "iot",
    "mqtt",
    "dashboard",
    "micro-app",
    "sensor",
    "alarm",
    "twillio",
    "sms",
    "webcam"
  ],
  "author": {
    "name": "Michael Dawson"
  },
  "license": "MIT",
  "homepage": "https://github.com/mhdawson/micro-app-home-alarm#readme",
  "contributors": [
    {
      "name": "Michael Dawson",
      "email": "mdawson@devrus.com"
    }
  ],
  "gitHead": "be1c863ac911cadd7ac4ae79555fe1a525af46b7",
  "_npmVersion": "2.14.12",
  "_nodeVersion": "4.3.2",
  "dist": {
    "shasum": "7845c182f0c04d939df4d881766daa2047a458b7",
    "tarball": "http://registry.npmjs.org/micro-app-home-alarm/-/micro-app-home-alarm-1.0.2.tgz"
  },
  "versions": [
    {
      "number": "1.0.0",
      "date": "2016-03-27T19:26:27.733Z"
    },
    {
      "number": "1.0.1",
      "date": "2016-03-27T20:22:42.087Z"
    },
    {
      "number": "1.0.2",
      "date": "2016-05-01T16:49:15.599Z"
    }
  ],
  "created": "2016-03-27T19:26:27.733Z",
  "modified": "2016-05-01T16:49:15.599Z",
  "lastPublisher": {
    "name": "mhdawson1",
    "email": "mdawson@devrus.com"
  },
  "owners": [
    {
      "name": "mhdawson1",
      "email": "mdawson@devrus.com"
    }
  ],
  "readme": "# MQTT/Node base home alarm system\n\nThis is a port of the [HomeAlarm](https://github.com/mhdawson/HomeAlarm) project\nover to the micro-app framwork so that you can get the native\nlook and feel on desktop and mobile devices with the\n[micro-app-cordova-launcher](https://github.com/mhdawson/micro-app-cordova-launcher)\nand [micro-app-electron-launcher](https://github.com/mhdawson/micro-app-electron-launcher)\nprojects.\n\nThis projects provides a home based alarm system using Node and\nMQTT. It provides a GUI that allows you to:\n\n* arm/disarm the alarm\n* see the status of the zones\n* ask that a picture be taken\n* view the last 4 pictures taken\n* view pictures from multiple cameras\n* view the log of alarm events\n\nWhen the alarm is triggered it will take pictures every 10 second for 5 minutes, pushing them to a remote webserver.\nIt can also be configured to send sms messages to notify the owner than an alarm has occured.\n\nIn a browser:\n\n![picture of alarm main window](https://raw.githubusercontent.com/mhdawson/micro-app-home-alarm/master/pictures/alarm_main_window.jpg?raw=true)\n\nNative application:\n\n![picture of alarm main window](https://raw.githubusercontent.com/mhdawson/micro-app-home-alarm/master/pictures/alarm_main_window_native.jpg?raw=true)\n\nOn a phone:\n\n![picture of alarm main window on phone](https://raw.githubusercontent.com/mhdawson/micro-app-home-alarm/master/pictures/alarm_main_window_phone.jpg?raw=true)\n\nThe following projects can be used to connect sensors such\nmotion detectors, door contacts and webcams.\n* [PI433WirelessRecvMananager](https://github.com/mhdawson/PI433WirelessRecvManager)\n* [PIWebcamServer](https://github.com/mhdawson/PIWebcamServer)\n\nAdditional views when alarm is active and triggered\n\n![picture of alarm when armed](https://raw.githubusercontent.com/mhdawson/micro-app-home-alarm/master/pictures/alarm_main_window_armed.jpg?raw=true)\n![picture of alarm when triggered](https://raw.githubusercontent.com/mhdawson/micro-app-home-alarm/master/pictures/alarm_main_window_triggered.jpg?raw=true)\n\nView when using GUI to display pictures taken by camera\n\n![sample camera picture view](https://raw.githubusercontent.com/mhdawson/micro-app-home-alarm/master/pictures/alarm_camera_picture_view.jpg?raw=true)\n\nThe server requires Node along with the modules defined in the package.json\nfile to be installed.\n \nIt also requires:\n\n* an mqtt server \n* a remote webserver to serve up the pictures taken\n* twillio account (If you want SMS notifications)\n\n# Configuration\n\nMost configuration is done in the config.json file which supports the\nfollowing configuration options:\n\n* title - title used to name the page for the app\n* alarmSite - Name assigned to this instance of the alarm\n* serverPort - port on which alarm GUI is server\n* tls - set to the string \"true\" if you want to force tls when connecting\n* authenticate - set to \"true\" to enable basic authentication. If set\n  to true then you must provide the \"authInfo\" values described below\n* scrollBars - set this to \"true\" so that you can scroll when viweing the log\n  file\n* authInfo - object with username, password and realm values. authInfo.password is\n  the hashed password that will be used to authenticate to the micro-app.\n  This can be generated with the utility in the micro-app framework which\n  is called: .../node_modules/micro-app-framework/lib/gen_password.js.\n  The first parameter is the password to be hashed.\n* mqtt - object with serverUrl, rootTopic and certsDir.  If the serverUrl\n  uses tls (ex mqtts: then certsDir must contain the required certificates\n  etc. needed to connect to the mqtt server using tls)\n* zone - array objects, each of which specifies the topic, zoneId and label\n  for one of the alarm zones\n* twilio - object specifying the accountSID, accountAuthToken, fromNumber \n  and toNumber that will be used to send SMS notifications\n* camera - object with topic used to communicate with the camera server\n  and topics and messages used to communicate with an IR illuminator (see\n  https://github.com/mhdawson/PI433WirelessTXManager for the circuit\n  used to turn on/off the power supply for the IR illuminator)\n* eventLogPrefix - directory in which log for alarm will be written\n\nFor example this is my configuration file with some key elements\nmasked out:\n\n<PRE>\n{\n  \"title\": \"Cottage Alarm\",\n  \"alarmSite\": \"Home\",\n  \"serverPort\": 3000,\n  \"tls\": \"true\",\n  \"authenticate\": \"true\",\n  \"scrollBars\": true,\n  \"authInfo\": {\"username\": \"alarm\", \"password\": \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\", \"realm\": \"alarm\"},\n  \"mqtt\": { \"serverUrl\": \"mqtts:XXXXXXXXX:8883\",\n            \"rootTopic\": \"house\",\n            \"certsDir\": \"./certs\" },\n  \"webserverUrlForPictures\": \"https:XXXXXXXXXX:XXXXX\",\n  \"zones\": [ { \"topic\": \"house/2262/1\", \"zoneId\": 3, \"label\": \"front door\" },\n             { \"topic\": \"house/2262/2\", \"zoneId\": 4, \"label\": \"patio door\" },\n             { \"topic\": \"house/2262/3\", \"zoneId\": 2, \"label\": \"motion living\" },\n             { \"topic\": \"house/2262/4\", \"zoneId\": 1, \"label\": \"motion hall\" },\n             { \"topic\": \"house/2262/5\", \"zoneId\": 5, \"label\": \"fire\" }\n           ],\n  \"twilio\": { \"accountSID\": \"XXXXXXXXXXXXXXXXXXXXXXX\",\n              \"accountAuthToken\": \"XXXXXXXXXXXXXXXXXXXX\",\n              \"fromNumber\": \"XXXXXXXXXX\",\n              \"toNumber\": \"XXXXXXXXXXX\" },\n  \"camera\": { \"topic\": \"house/camera\",\n              \"IRtopic\": \"home/2272\",\n              \"IRon\": \"FFFFFFF11000\",\n              \"IRoff\": \"FFFFFFF10000\" },\n  \"eventLogPrefix\": \"/home/user1/repos/micro-app-home-alarm\"\n}\n</PRE>\n\n# Installation\n\nThe easiest way to install is to run:\n\n<PRE>\nnpm install micro-app-home-alarm\n</PRE>\n\nand then configure the default config.json file in the lib directory as described\nin the configuration section above.\n\n# Running\n\nSimply cd to the directory where the npm was install and type:\n\n<PRE>\nnpm start\n</PRE>\n\n## TODOs\n- Add more doc on how to configure, setup and run, including the required mqtt server\n\n"
}