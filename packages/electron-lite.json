{
  "package.json": true,
  "author": {
    "name": "kai zhu",
    "email": "kaizhu256@gmail.com"
  },
  "bin": {
    "electron": "cli.js"
  },
  "description": "this package will dynamically download and install electron @ 1.1.3 from https://github.com/atom/electron/releases with zero npm-dependencies",
  "devDependencies": {
    "utility2": "2016.4.2"
  },
  "keywords": [
    "atom",
    "atom-shell",
    "browser",
    "capture",
    "electron",
    "electron-prebuilt",
    "headless",
    "headless-browser",
    "light",
    "lightweight",
    "lite",
    "minimal",
    "scrape",
    "scraper",
    "screen",
    "screen-capture",
    "screencapture",
    "screenshot",
    "web",
    "web-scrape",
    "web-scraper"
  ],
  "license": "MIT",
  "name": "electron-lite",
  "os": [
    "darwin",
    "linux"
  ],
  "repository": {
    "user": "kaizhu256",
    "repo": "node-electron-lite",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/kaizhu256/node-electron-lite/tarball/master",
    "clone_url": "https://github.com/kaizhu256/node-electron-lite",
    "https_url": "https://github.com/kaizhu256/node-electron-lite",
    "travis_url": "https://travis-ci.org/kaizhu256/node-electron-lite",
    "zip_url": "https://github.com/kaizhu256/node-electron-lite/archive/master.zip",
    "api_url": "https://api.github.com/repos/kaizhu256/node-electron-lite"
  },
  "scripts": {
    "build-ci": "utility2 shRun shReadmeBuild",
    "build-doc": ":",
    "postinstall": "./index.sh shNpmPostinstall",
    "test": ". node_modules/.bin/utility2 && shReadmeExportScripts && cp $(shFileTrimLeft tmp/README.package.json) package.json && rm -fr external && npm run postinstall && ./cli.js --version && utility2 test node test.js",
    "test-published": "utility2 shRun shNpmTestPublished"
  },
  "version": "2016.5.1",
  "gitHead": "e94ae1fc8cee28b429f239922b586d24ea9abd44",
  "homepage": "https://github.com/kaizhu256/node-electron-lite#readme",
  "_npmVersion": "3.9.3",
  "_nodeVersion": "6.2.1",
  "dist": {
    "shasum": "bd10a4443b34bd5e20b7141ec90827401ad67671",
    "tarball": "http://registry.npmjs.org/electron-lite/-/electron-lite-2016.5.1.tgz"
  },
  "stars": 1,
  "versions": [
    {
      "number": "2015.10.5",
      "date": "2015-11-22T04:22:56.592Z"
    },
    {
      "number": "2015.11.1",
      "date": "2015-11-28T15:15:14.762Z"
    },
    {
      "number": "2015.11.2",
      "date": "2015-12-06T04:38:42.121Z"
    },
    {
      "number": "2015.12.1",
      "date": "2015-12-14T14:00:57.190Z"
    },
    {
      "number": "2015.12.2",
      "date": "2015-12-28T06:45:44.518Z"
    },
    {
      "number": "2015.12.3",
      "date": "2015-12-28T07:32:29.878Z"
    },
    {
      "number": "2015.12.4",
      "date": "2016-02-29T14:39:39.574Z"
    },
    {
      "number": "2016.3.1",
      "date": "2016-04-20T10:53:28.739Z"
    },
    {
      "number": "2016.3.2",
      "date": "2016-04-20T13:18:12.609Z"
    },
    {
      "number": "2016.3.3",
      "date": "2016-04-20T22:07:07.439Z"
    },
    {
      "number": "2016.4.1",
      "date": "2016-05-23T14:29:54.160Z"
    },
    {
      "number": "2016.4.2",
      "date": "2016-05-23T15:03:19.688Z"
    },
    {
      "number": "2016.4.3",
      "date": "2016-05-23T15:51:39.982Z"
    },
    {
      "number": "2016.5.1",
      "date": "2016-06-09T01:43:55.254Z"
    }
  ],
  "created": "2015-11-22T04:22:56.592Z",
  "modified": "2016-06-09T01:43:55.254Z",
  "lastPublisher": {
    "name": "kaizhu",
    "email": "kaizhu256@gmail.com"
  },
  "owners": [
    {
      "name": "kaizhu",
      "email": "kaizhu256@gmail.com"
    }
  ],
  "readme": "electron-lite\n==============\nthis package will dynamically download and install electron @ 1.1.3 from https://github.com/atom/electron/releases with zero npm-dependencies\n\n[![NPM](https://img.shields.io/npm/v/electron-lite.svg?style=flat-square)](https://www.npmjs.com/package/electron-lite) [![NPM](https://img.shields.io/npm/dm/electron-lite.svg?style=flat-square)](https://www.npmjs.com/package/electron-lite) [![travis-ci.org build-status](https://api.travis-ci.org/kaizhu256/node-electron-lite.svg)](https://travis-ci.org/kaizhu256/node-electron-lite)\n\n\n\n# documentation\n#### todo\n- none\n\n#### change since adf8e5df\n- npm publish 2016.5.1\n- upgrade to electron @ 1.1.3\n- none\n\n#### this package requires\n- darwin or linux os\n\n#### this package includes\n- external linux unzip binary @ https://busybox.net/downloads/binaries/1.21.1/busybox-i486\n\n\n\n# screen-capture\n![screen-capture](https://kaizhu256.github.io/node-electron-lite/build/screen-capture.testExampleJs.browser.png)\n\n\n\n# build-status [![travis-ci.org build-status](https://api.travis-ci.org/kaizhu256/node-electron-lite.svg)](https://travis-ci.org/kaizhu256/node-electron-lite)\n[![build commit status](https://kaizhu256.github.io/node-electron-lite/build/build.badge.svg)](https://travis-ci.org/kaizhu256/node-electron-lite)\n\n| git-branch : | [master](https://github.com/kaizhu256/node-electron-lite/tree/master) | [beta](https://github.com/kaizhu256/node-electron-lite/tree/beta) | [alpha](https://github.com/kaizhu256/node-electron-lite/tree/alpha)|\n|--:|:--|:--|:--|\n| build-artifacts : | [![build-artifacts](https://kaizhu256.github.io/node-electron-lite/glyphicons_144_folder_open.png)](https://github.com/kaizhu256/node-electron-lite/tree/gh-pages/build..master..travis-ci.org) | [![build-artifacts](https://kaizhu256.github.io/node-electron-lite/glyphicons_144_folder_open.png)](https://github.com/kaizhu256/node-electron-lite/tree/gh-pages/build..beta..travis-ci.org) | [![build-artifacts](https://kaizhu256.github.io/node-electron-lite/glyphicons_144_folder_open.png)](https://github.com/kaizhu256/node-electron-lite/tree/gh-pages/build..alpha..travis-ci.org)|\n\n#### master branch\n- stable branch\n- HEAD should be tagged, npm-published package\n\n#### beta branch\n- semi-stable branch\n- HEAD should be latest, npm-published package\n\n#### alpha branch\n- unstable branch\n- HEAD is arbitrary\n- commit history may be rewritten\n\n\n\n# quickstart screen-capture example\n![screen-capture](https://kaizhu256.github.io/node-electron-lite/build/screen-capture.testExampleJs.browser.png)\n\n#### to run this example, follow the instruction in the script below\n- example.js\n```javascript\n/*\nexample.js\n\nthis electron script will screen-capture http://electron.atom.io/\n\ninstruction\n    1. save this js script as example.js\n    2. run the shell command:\n        $ npm install electron-lite && \\\n            printf '{\"main\":\"example.js\",\"name\":\"example\",\"version\":\"0.0.0\"}' > \\\n            package.json && \\\n            ./node_modules/.bin/electron . --disable-overlay-scrollbar --enable-logging\n    3. view screencapture ./screen-capture.testExampleJs.browser.png\n*/\n\n/*jslint\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    stupid: true\n*/\n\n(function () {\n    'use strict';\n    var options, modeNext, onNext;\n    modeNext = 0;\n    onNext = function (data) {\n        modeNext += 1;\n        switch (modeNext) {\n        case 1:\n            // wait for electron to init\n            require('electron').app.once('ready', onNext);\n            break;\n        case 2:\n            // init options\n            options = { frame: false, height: 768, width: 1024, x: 0, y: 0 };\n            // init browserWindow;\n            options.BrowserWindow = require('electron').BrowserWindow;\n            options.browserWindow = new options.BrowserWindow(options);\n            // goto next step when webpage is loaded\n            options.browserWindow.webContents.once('did-stop-loading', onNext);\n            // open url\n            options.browserWindow.loadURL('http://electron.atom.io/');\n            break;\n        case 3:\n            // screen-capture webpage\n            options.browserWindow.capturePage(options, onNext);\n            break;\n        case 4:\n            // save screen-capture\n            require('fs')\n                .writeFileSync('screen-capture.testExampleJs.browser.png', data.toPng());\n            // exit\n            process.exit(0);\n            break;\n        }\n    };\n    onNext();\n}());\n```\n\n#### output from electron\n![screen-capture](https://kaizhu256.github.io/node-electron-lite/build/screen-capture.testExampleJs.browser.png)\n\n#### output from shell\n[![screen-capture](https://kaizhu256.github.io/node-electron-lite/build/screen-capture.testExampleJs.svg)](https://travis-ci.org/kaizhu256/node-electron-lite)\n\n\n\n# npm-dependencies\n- none\n\n\n\n# package-listing\n[![screen-capture](https://kaizhu256.github.io/node-electron-lite/build/screen-capture.gitLsTree.svg)](https://github.com/kaizhu256/node-electron-lite)\n\n\n\n# package.json\n```json\n{\n    \"package.json\": true,\n    \"author\": \"kai zhu <kaizhu256@gmail.com>\",\n    \"bin\": {\n        \"electron\": \"cli.js\"\n    },\n    \"description\": \"this package will dynamically download and install electron @ 1.1.3 \\\nfrom https://github.com/atom/electron/releases with zero npm-dependencies\",\n    \"devDependencies\": {\n        \"utility2\": \"2016.4.2\"\n    },\n    \"keywords\": [\n        \"atom\", \"atom-shell\",\n        \"browser\",\n        \"capture\",\n        \"electron\", \"electron-prebuilt\",\n        \"headless\", \"headless-browser\",\n        \"light\", \"lightweight\", \"lite\",\n        \"minimal\",\n        \"scrape\", \"scraper\", \"screen\", \"screen-capture\", \"screencapture\", \"screenshot\",\n        \"web\", \"web-scrape\", \"web-scraper\"\n    ],\n    \"license\": \"MIT\",\n    \"name\": \"electron-lite\",\n    \"os\": [\"darwin\", \"linux\"],\n    \"repository\": {\n        \"type\": \"git\",\n        \"url\": \"https://github.com/kaizhu256/node-electron-lite.git\"\n    },\n    \"scripts\": {\n        \"build-ci\": \"utility2 shRun shReadmeBuild\",\n        \"build-doc\": \":\",\n        \"postinstall\": \"./index.sh shNpmPostinstall\",\n        \"test\": \". node_modules/.bin/utility2 && \\\nshReadmeExportScripts && \\\ncp $(shFileTrimLeft tmp/README.package.json) package.json && \\\nrm -fr external && \\\nnpm run postinstall && \\\n./cli.js --version && \\\nutility2 test node test.js\",\n        \"test-published\": \"utility2 shRun shNpmTestPublished\"\n    },\n    \"version\": \"2016.5.1\"\n}\n```\n\n\n\n# changelog of last 50 commits\n[![screen-capture](https://kaizhu256.github.io/node-electron-lite/build/screen-capture.gitLog.svg)](https://github.com/kaizhu256/node-electron-lite/commits)\n\n\n\n# internal build-script\n- build.sh\n```shell\n# build.sh\n\n# this shell script will run the build for this package\n\nshBuildCiTestPre() {(set -e\n# this function will run the pre-test build\n    # test example js script\n    (export MODE_BUILD=testExampleJs &&\n        shRunScreenCapture shReadmeTestJs example.js)\n    # save screen-capture\n    cp /tmp/app/screen-capture.*.png \"$npm_config_dir_build\" || return $?\n)}\n\nshBuild() {(set -e\n# this function will run the main build\n    # init env\n    . node_modules/.bin/utility2 && shInit\n    # cleanup github-gh-pages dir\n    export BUILD_GITHUB_UPLOAD_PRE_SH=\"rm -fr build\"\n    # init github-gh-pages commit-limit\n    export COMMIT_LIMIT=16\n    # if branch is alpha, beta, or master, then run default build\n    if [ \"$CI_BRANCH\" = alpha ] ||\n        [ \"$CI_BRANCH\" = beta ] ||\n        [ \"$CI_BRANCH\" = master ]\n    then\n        shBuildCiDefault\n    fi\n)}\nshBuild\n```\n"
}