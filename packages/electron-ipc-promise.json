{
  "name": "electron-ipc-promise",
  "version": "0.1.6",
  "description": "electron ipc promise",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "user": "kdepp",
    "repo": "electron-ipc-promise",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/kdepp/electron-ipc-promise/tarball/master",
    "clone_url": "https://github.com/kdepp/electron-ipc-promise",
    "https_url": "https://github.com/kdepp/electron-ipc-promise",
    "travis_url": "https://travis-ci.org/kdepp/electron-ipc-promise",
    "zip_url": "https://github.com/kdepp/electron-ipc-promise/archive/master.zip",
    "api_url": "https://api.github.com/repos/kdepp/electron-ipc-promise"
  },
  "keywords": [
    "electron",
    "ipc",
    "promise"
  ],
  "author": {
    "name": "kdepp",
    "email": "kdepp.cd@gmail.com"
  },
  "license": "ISC",
  "homepage": "https://github.com/kdepp/electron-ipc-promise#readme",
  "devDependencies": {
    "chai": "^3.5.0",
    "mocha": "^3.0.2"
  },
  "gitHead": "4025f55b2b030aea62bc50eccad89c8b2218d1bf",
  "_npmVersion": "2.14.7",
  "_nodeVersion": "4.2.1",
  "dist": {
    "shasum": "b8e6b12ab0e3cb7127aebadd9547595e0e0b58d4",
    "tarball": "http://registry.npmjs.org/electron-ipc-promise/-/electron-ipc-promise-0.1.6.tgz"
  },
  "versions": [
    {
      "number": "0.1.0",
      "date": "2016-08-15T04:07:25.012Z"
    },
    {
      "number": "0.1.1",
      "date": "2016-08-23T02:31:03.174Z"
    },
    {
      "number": "0.1.2",
      "date": "2016-08-25T02:09:07.504Z"
    },
    {
      "number": "0.1.3",
      "date": "2016-08-25T02:52:49.685Z"
    },
    {
      "number": "0.1.4",
      "date": "2016-08-25T03:16:34.882Z"
    },
    {
      "number": "0.1.5",
      "date": "2016-08-25T03:45:20.884Z"
    },
    {
      "number": "0.1.6",
      "date": "2016-08-26T02:20:06.553Z"
    }
  ],
  "created": "2016-08-15T04:07:25.012Z",
  "modified": "2016-08-26T02:20:06.553Z",
  "lastPublisher": {
    "name": "kdepp",
    "email": "kdepp.cd@gmail.com"
  },
  "owners": [
    {
      "name": "kdepp",
      "email": "kdepp.cd@gmail.com"
    }
  ],
  "readme": "# Electron IPC promise\n\nIt's a handy tool for electron ipc communication between ipcMain, ipcRender and webview.\n\n## Install\n\n``` bash\nnpm install electron-ipc-promise --save\n```\n\n## Usage\n\n### ipc between ipcMain and ipcRenderer\n\n``` javascript\n/*\n * -- in main.js\n */\nvar ipcMain = require('electron').ipcMain;\nvar ipcPromise = require('electron-ipc-promise').mainHost();\n\n// create your new BrowserWindow before initializing ipcMain\nvar ipc = ipcPromise.ipcMain(ipcMain, mainWindow.webContents);\n\nipc.onAsk(function (cmd, args) {\n  return {\n    data: cmd + ' done',\n    err: null\n  };\n});\n\nipc.ask('COMMAND', args);\n\n\n/*\n * -- in renderer.js\n */\nvar ipcRenderer = require('electron').ipcRenderer;\nvar ipcPromise = require('electron-ipc-promise').mainHost();\n\nvar ipc = ipcPromise.ipcHost(ipcRenderer);\n\nipc.onAsk(function (cmd, args) {\n  return {\n    data: cmd + ' done',\n    err: null\n  };\n});\n\nipc.ask('COMMAND', args);\n\n```\n\n### ipc between ipcRenderer and Webview\n\n``` javascript\n\n/*\n * -- in renderer.js\n */\nvar ipcPromise = require('electron-ipc-promise').guestHost();\n\n// get the webview reference before initializing ipcHost\nvar ipc = ipcPromise.ipcHost(webview);\n\nipc.onAsk(function (cmd, args) {\n  return {\n    data: cmd + ' done',\n    err: null\n  };\n});\n\nipc.ask('COMMAND', args);\n\n\n/*\n * -- in webview.js\n */\nvar ipcRenderer = require('electron').ipcRenderer;\nvar ipcPromise = require('electron-ipc-promise').guestHost();\n\nvar ipc = ipcPromise.ipcGuest(ipcRenderer);\n\nipc.onAsk(function (cmd, args) {\n  return {\n    data: cmd + ' done',\n    err: null\n  };\n});\n\nipc.ask('COMMAND', args);\n\n```\n\n### multiple channels\n\n``` javascript\n// pass a uid to initialize function\n\nvar ipcGH = require('electron-ipc-promise').guestHost('PAGE_1');\n\nvar ipcMH = require('electron-ipc-promise').mainHost('HOST_1');\n\n```\n\n\n\n## TODO\n\n* ipc pipe\n  * one renderer directly with another renderer)\n  * main directly with webview\n"
}