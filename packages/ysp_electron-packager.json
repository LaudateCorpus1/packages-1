{
  "name": "ysp_electron-packager",
  "version": "5.2.17",
  "description": "Package and distribute your Electron app with OS-specific bundles (.app, .exe etc) via JS or CLI",
  "main": "index.js",
  "bin": {
    "electron-packager": "cli.js"
  },
  "repository": {
    "user": "zerocode1337",
    "repo": "ysp_electron-packager",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/zerocode1337/ysp_electron-packager/tarball/master",
    "clone_url": "https://github.com/zerocode1337/ysp_electron-packager",
    "https_url": "https://github.com/zerocode1337/ysp_electron-packager",
    "travis_url": "https://travis-ci.org/zerocode1337/ysp_electron-packager",
    "zip_url": "https://github.com/zerocode1337/ysp_electron-packager/archive/master.zip",
    "api_url": "https://api.github.com/repos/zerocode1337/ysp_electron-packager"
  },
  "author": {
    "name": "max ogden"
  },
  "license": "BSD-2-Clause",
  "homepage": "https://github.com/zerocode1337/ysp_electron-packager",
  "dependencies": {
    "asar": "^0.11.0",
    "ysp_electron-download": "1.5.9",
    "electron-osx-sign": "^0.3.0",
    "extract-zip": "^1.0.3",
    "fs-extra": "^0.28.0",
    "get-package-info": "0.0.2",
    "minimist": "^1.1.1",
    "plist": "^1.1.0",
    "rcedit": "^0.5.0",
    "resolve": "^1.1.6",
    "run-series": "^1.1.1"
  },
  "devDependencies": {
    "buffer-equal": "^1.0.0",
    "coveralls": "^2.11.6",
    "eslint": "^2.8.0",
    "eslint-config-standard": "^5.2.0",
    "eslint-plugin-promise": "^1.1.0",
    "eslint-plugin-standard": "^1.3.2",
    "is-admin": "^1.0.2",
    "nyc": "^6.0.0",
    "rcinfo": "^0.1.3",
    "rimraf": "^2.3.2",
    "run-waterfall": "^1.1.1",
    "tape": "^4.0.0"
  },
  "engines": {
    "node": ">= 4.0"
  },
  "scripts": {
    "coveralls": "nyc report --reporter=text-lcov | coveralls",
    "pretest": "rimraf test/work",
    "test": "eslint . && nyc --cache tape test"
  },
  "keywords": [],
  "eslintConfig": {
    "extends": "standard",
    "parserOptions": {
      "sourceType": "script"
    },
    "rules": {
      "strict": [
        "error"
      ]
    }
  },
  "gitHead": "db982354134ced932a734f42a3b4975af9280d05",
  "_npmVersion": "3.9.5",
  "_nodeVersion": "6.2.2",
  "dist": {
    "shasum": "3919f5e7a9c6f02c4d71acf8b2c2c5bf38eaf873",
    "tarball": "http://registry.npmjs.org/ysp_electron-packager/-/ysp_electron-packager-5.2.17.tgz"
  },
  "versions": [
    {
      "number": "5.2.0",
      "date": "2016-01-15T05:51:38.337Z"
    },
    {
      "number": "5.2.2",
      "date": "2016-03-08T06:14:33.287Z"
    },
    {
      "number": "5.2.3",
      "date": "2016-03-11T09:02:36.062Z"
    },
    {
      "number": "5.2.4",
      "date": "2016-04-26T07:41:10.263Z"
    },
    {
      "number": "5.2.5",
      "date": "2016-04-26T09:39:19.747Z"
    },
    {
      "number": "5.2.6",
      "date": "2016-06-27T10:05:05.220Z"
    },
    {
      "number": "5.2.7",
      "date": "2016-06-29T07:32:08.528Z"
    },
    {
      "number": "5.2.8",
      "date": "2016-06-30T05:39:53.538Z"
    },
    {
      "number": "5.2.9",
      "date": "2016-07-01T03:37:19.071Z"
    },
    {
      "number": "5.2.10",
      "date": "2016-07-04T06:13:48.767Z"
    },
    {
      "number": "5.2.11",
      "date": "2016-07-05T07:34:14.170Z"
    },
    {
      "number": "5.2.12",
      "date": "2016-07-07T05:57:43.949Z"
    },
    {
      "number": "5.2.13",
      "date": "2016-07-07T09:57:43.380Z"
    },
    {
      "number": "5.2.14",
      "date": "2016-07-08T02:35:19.527Z"
    },
    {
      "number": "5.2.15",
      "date": "2016-07-11T07:22:51.145Z"
    },
    {
      "number": "5.2.16",
      "date": "2016-07-21T03:07:48.769Z"
    },
    {
      "number": "5.2.17",
      "date": "2016-07-25T07:25:24.215Z"
    }
  ],
  "created": "2016-01-15T05:51:38.337Z",
  "modified": "2016-07-25T07:25:24.215Z",
  "lastPublisher": {
    "name": "ysp123",
    "email": "2096697975@qq.com"
  },
  "owners": [
    {
      "name": "ysp123",
      "email": "2096697975@qq.com"
    }
  ],
  "readme": "# electron-packager\n\nPackage your [Electron](http://electron.atom.io) app into OS-specific bundles (`.app`, `.exe`, etc.) via JavaScript or the command line.\n\n[![Travis CI Build Status](https://travis-ci.org/electron-userland/electron-packager.svg?branch=master)](https://travis-ci.org/electron-userland/electron-packager)\n[![AppVeyor Build status](https://ci.appveyor.com/api/projects/status/m51mlf6ntd138555?svg=true)](https://ci.appveyor.com/project/electron-userland/electron-packager)\n[![Coverage Status](https://coveralls.io/repos/github/electron-userland/electron-packager/badge.svg?branch=master)](https://coveralls.io/github/electron-userland/electron-packager?branch=master)\n\n## About\n\nElectron Packager is a command line tool that packages electron app source code into executables like `.app` or `.exe` along with a copy of Electron.\n\nNote that packaged Electron applications can be relatively large. A zipped barebones OS X Electron application is around 40MB.\n\n### Electron Packager is an [OPEN Open Source Project](http://openopensource.org/)\n\nIndividuals making significant and valuable contributions are given commit-access to the project to contribute as they see fit. This project is more like an open wiki than a standard guarded open source project.\n\nSee [CONTRIBUTING.md](https://github.com/electron-userland/electron-packager/blob/master/CONTRIBUTING.md) and [openopensource.org](http://openopensource.org/) for more details.\n\n### [Release Notes](https://github.com/electron-userland/electron-packager/blob/master/NEWS.md)\n\n## Supported Platforms\n\nElectron Packager is known to run on the following **host** platforms:\n\n* Windows (32/64 bit)\n* OS X\n* Linux (x86/x86_64)\n\nIt generates executables/bundles for the following **target** platforms:\n\n* Windows (also known as `win32`, for both 32/64 bit)\n* OS X (also known as `darwin`) / [Mac App Store](http://electron.atom.io/docs/v0.36.0/tutorial/mac-app-store-submission-guide/) (also known as `mas`)<sup>*</sup>\n* Linux (for both x86/x86_64)\n\n<sup>*</sup> *Note for OS X / MAS target bundles: the `.app` bundle can only be signed when building on a host OS X platform.*\n\n## Installation\n\nThis module requires Node.js 4.0 or higher to run.\n\n```sh\n# for use in npm scripts\nnpm install electron-packager --save-dev\n\n# for use from cli\nnpm install electron-packager -g\n```\n\n## Usage\n\n### From the Command Line\n\nRunning electron-packager from the command line has this basic form:\n\n```\nelectron-packager <sourcedir> <appname> --platform=<platform> --arch=<arch> [optional flags...]\n```\n\nThis will:\n\n- Find or download the correct release of Electron\n- Use that version of Electron to create a app in `<out>/<appname>-<platform>-<arch>` *(this can be customized via an optional flag)*\n\nFor details on the optional flags, run `electron-packager --help` or see [usage.txt](https://github.com/electron-userland/electron-packager/blob/master/usage.txt).\n\nIf `appname` is omitted, this will use the name specified by \"productName\" or \"name\" in the nearest package.json.\n\nYou should be able to launch the app on the platform you built for. If not, check your settings and try again.\n\n**Be careful** not to include `node_modules` you don't want into your final app. `electron-packager`, `electron-prebuilt` and `.git` will be ignored by default. You can use `--ignore` to ignore files and folders via a regular expression. For example, `--ignore=node_modules/package-to-ignore` or `--ignore=\"node_modules/(some-package[0-9]*|dev-dependency)\"`.\n\n#### Example\n\nLet's assume that you have made an app based on the [electron-quick-start](https://github.com/electron/electron-quick-start) repository on a OS X or Linux host platform with the following file structure:\n\n```\nfoobar\n├─package.json\n├─index.html\n├[…other files, like LICENSE…]\n└─script.js\n```\n\n…and that the following is true:\n\n* `electron-packager` is installed globally\n* `productName` in `package.json` has been set to `Foo Bar`\n* `npm install` for the `Foo Bar` app has been run at least once\n\nWhen one runs the following command for the first time in the `foobar` directory:\n\n```\nelectron-packager . --all\n```\n\n`electron-packager` will do the following:\n\n* Use the current directory for the `sourcedir`\n* Infer the `appname` from the `productName` in `package.json`\n* Download [all supported target platforms and arches](#supported-platforms) of Electron using the installed `electron-prebuilt` version (and cache the downloads in `~/.electron`)\n* For the `darwin` build, as an example:\n  * build the OS X `Foo Bar.app`\n  * place `Foo Bar.app` in `foobar/Foo Bar-darwin-x64/` (since an `out` directory was not specified, it used the current working directory)\n\nThe file structure now looks like:\n\n```\nfoobar\n├┬Foo Bar-darwin-x64\n│├┬Foo Bar.app\n││└[…Mac app contents…]\n│├─LICENSE\n│└─version\n├[…other application bundles, like \"Foo Bar-win32-x64\" (sans quotes)…]\n├─package.json\n├─index.html\n├[…other files, like LICENSE…]\n└─script.js\n```\n\nThe `Foo Bar.app` folder generated can be executed by a system running OS X, which will start the packaged Electron app. This is also true of the Windows x64 build on a system running a new enough version of Windows for a 64-bit system (via `Foo Bar-win32-x64/Foo Bar.exe`), and so on.\n\n### [Programmatic API](https://github.com/electron-userland/electron-packager/blob/master/docs/api.md)\n\n## Building Windows apps from non-Windows platforms\n\nBuilding an Electron app for the Windows platform with a custom icon requires editing the `Electron.exe` file. Currently, electron-packager uses [node-rcedit](https://github.com/atom/node-rcedit) to accomplish this. A Windows executable is bundled in that node package and needs to be run in order for this functionality to work, so on non-Windows host platforms, [Wine](https://www.winehq.org/) needs to be installed. On OS X, it is installable via [Homebrew](http://brew.sh/).\n\n## Related\n\n- [electron-builder](https://www.npmjs.com/package/electron-builder) - for creating installer wizards\n- [grunt-electron](https://github.com/sindresorhus/grunt-electron) - grunt plugin for electron-packager\n- [electron-packager-interactive](https://github.com/Urucas/electron-packager-interactive) - an interactive CLI for electron-packager\n"
}