{
  "name": "electron-microscope",
  "description": "Use electron to inspect websites and extract data. useful for automation, testing, web scraping, etc",
  "version": "2.0.0",
  "main": "index.js",
  "scripts": {
    "test": "standard && electron test/test.js"
  },
  "repository": {
    "user": "maxogden",
    "repo": "electron-microscope",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/maxogden/electron-microscope/tarball/master",
    "clone_url": "https://github.com/maxogden/electron-microscope",
    "https_url": "https://github.com/maxogden/electron-microscope",
    "travis_url": "https://travis-ci.org/maxogden/electron-microscope",
    "zip_url": "https://github.com/maxogden/electron-microscope/archive/master.zip",
    "api_url": "https://api.github.com/repos/maxogden/electron-microscope"
  },
  "author": "",
  "license": "BSD-2-Clause",
  "homepage": "https://github.com/maxogden/electron-microscope#readme",
  "dependencies": {
    "domify": "^1.4.0",
    "inherits": "^2.0.1",
    "through2": "^2.0.1"
  },
  "standard": {
    "ignore": [
      "test/scrapers"
    ]
  },
  "devDependencies": {
    "concat-stream": "^1.5.1",
    "electron-prebuilt": "^0.36.7",
    "standard": "^6.0.4",
    "tape": "^4.4.0"
  },
  "gitHead": "03ae3772c5191cde511302349a20ca83be655592",
  "_npmVersion": "2.14.15",
  "_nodeVersion": "4.2.3",
  "dist": {
    "shasum": "3bd171504c7102252edde6f6d449dee4a897d646",
    "tarball": "http://registry.npmjs.org/electron-microscope/-/electron-microscope-2.0.0.tgz"
  },
  "stars": 3,
  "versions": [
    {
      "number": "2.0.0",
      "date": "2016-02-13T02:17:24.666Z"
    }
  ],
  "created": "2016-02-13T02:17:24.666Z",
  "modified": "2016-02-13T02:17:24.666Z",
  "lastPublisher": {
    "name": "maxogden",
    "email": "max@maxogden.com"
  },
  "owners": [
    {
      "name": "maxogden",
      "email": "max@maxogden.com"
    }
  ],
  "readme": "# electron-microscope\n\nUse [electron](http://electron.atom.io/) to inspect websites and extract data. Intended for automation, testing, web scraping, etc.\n\nLoads urls inside an electron [webview tag](https://github.com/atom/electron/blob/master/docs/api/web-view-tag.md), allows you to execute code on them, and stream data from the pages back to your main process.\n\nRun this headlessly on Linux using `xvfb-run`.\n\n**BETA DISCLAIMER** early adopters only, this module is still *hecka fresh*\n\n## usage\n\nUse this in an electron app:\n\n```js\nvar electron = require('electron')\nvar createMicroscope = require('electron-microscope')\n\nelectron.app.on('ready', function () {\n  createMicroscope(function (err, scope) {\n    if (err) throw err\n    // use your new microscope\n  })\n}) \n```\n\nRun it with electron:\n\n```sh\n$ npm install electron-prebuilt -g\n$ electron my-code.js\n```\n\n## API\n\n### `require('electron-microscope')(options, ready)`\n\nRequiring the module returns a constructor function that you use to create a new instance. Pass it an `options` object and a `ready` callback that will be called with `(error, scope)`. `scope` is your new instance all ready to go.\n\n### `scope.loadURL(url, cb)`\n\nLoad a `url`, and call `cb` with `(err)` when loading is done. If there was a problem loading the page `err` will be the error, otherwise it means it loaded successfully\n\n### `scope.run(code)`\n\nRun `code` the currently loaded page. Run this after calling `loadURL`. Code must be a string, if it is a `function` then `.toString()` will be called on it. `scope.run` returns a readable stream that emits data generated by your code.\n\nYou code must be a function that has this template:\n\n```js\nfunction (send, done) {\n  // put your custom code here\n  // call 'send(data)' to write data to the stream\n  // call 'done()' to end the stream\n  // calling send is optional, but you must eventually call done\n}\n```\n\nFor example:\n\n```js\nvar scraper = `function (send, done) {\n  for (var i = 0; i < 5; i++) send(i)\n  done()\n}`\nvar output = scope.run(scraper)\noutput.pipe(concat(function (out) {\n  console.log(out.toString()) // 12345\n}))\n```\n\n### scope.on('will-navigate', cb)\n\nEmitted the page wants to start navigation. It can happen when the window.location object is changed or a link is clicked in the page.\n\nCalls `cb` with `(url)`, forwarded from [this event](https://github.com/atom/electron/blob/master/docs/api/web-view-tag.md#event-will-navigate).\n\n### scope.on('did-start-loading', cb)\n\nCorresponds to the points in time when the spinner of the tab starts spinning.\n\nCalls `cb` with no arguments, forwarded from [this event](https://github.com/atom/electron/blob/master/docs/api/web-view-tag.md#event-did-start-loading).\n\n### scope.on('did-stop-loading', cb)\n\nCorresponds to the points in time when the spinner of the tab stops spinning.\n\nCalls `cb` with no arguments, forwarded from [this event](https://github.com/atom/electron/blob/master/docs/api/web-view-tag.md#event-did-stop-loading).\n\n### scope.destroy()\n\nCall when you don't want to use the scope anymore. Causes the `browser-window` elecron-microscope uses internally to close.\n"
}