{
  "name": "electron-reload",
  "version": "1.0.2",
  "description": "Simplest way to reload an electron app on file changes!",
  "main": "main.js",
  "repository": {
    "user": "yan-foto",
    "repo": "electron-reload",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/yan-foto/electron-reload/tarball/master",
    "clone_url": "https://github.com/yan-foto/electron-reload",
    "https_url": "https://github.com/yan-foto/electron-reload",
    "travis_url": "https://travis-ci.org/yan-foto/electron-reload",
    "zip_url": "https://github.com/yan-foto/electron-reload/archive/master.zip",
    "api_url": "https://api.github.com/repos/yan-foto/electron-reload"
  },
  "keywords": [
    "electron",
    "reload",
    "auto-reload",
    "node"
  ],
  "author": {
    "name": "Yan Foto",
    "email": "yan.foto@quaintous.com"
  },
  "license": "MIT",
  "dependencies": {
    "chokidar": "^1.5.1"
  },
  "gitHead": "b1ff05b59f9b5ee331a911f11de9a9aeead71a5b",
  "homepage": "https://github.com/yan-foto/electron-reload#readme",
  "scripts": {},
  "_npmVersion": "3.8.6",
  "_nodeVersion": "5.12.0",
  "dist": {
    "shasum": "a6fa0d5e5196d1bde0de9cde2a0b6636f32e38b4",
    "tarball": "http://registry.npmjs.org/electron-reload/-/electron-reload-1.0.2.tgz"
  },
  "stars": 4,
  "versions": [
    {
      "number": "0.0.1",
      "date": "2015-08-08T19:43:24.883Z"
    },
    {
      "number": "0.0.2",
      "date": "2015-08-11T18:59:12.094Z"
    },
    {
      "number": "0.0.3",
      "date": "2015-08-12T10:56:22.285Z"
    },
    {
      "number": "0.1.0",
      "date": "2015-08-14T12:29:49.048Z"
    },
    {
      "number": "0.1.2",
      "date": "2015-08-15T07:17:44.117Z"
    },
    {
      "number": "0.1.3",
      "date": "2015-08-21T19:51:54.234Z"
    },
    {
      "number": "0.1.4",
      "date": "2015-09-08T21:11:36.090Z"
    },
    {
      "number": "0.2.0",
      "date": "2015-09-15T15:52:14.272Z"
    },
    {
      "number": "0.3.0",
      "date": "2016-04-17T07:44:23.311Z"
    },
    {
      "number": "1.0.0",
      "date": "2016-05-29T14:17:19.979Z"
    },
    {
      "number": "1.0.1",
      "date": "2016-07-24T13:16:21.827Z"
    },
    {
      "number": "1.0.2",
      "date": "2016-08-07T16:57:29.964Z"
    }
  ],
  "created": "2015-08-08T19:43:24.883Z",
  "modified": "2016-10-06T21:38:46.286Z",
  "lastPublisher": {
    "name": "yan-foto",
    "email": "yan.foto@quaintous.com"
  },
  "owners": [
    {
      "name": "yan-foto",
      "email": "yan.foto@quaintous.com"
    }
  ],
  "readme": "# electron reload\nThis is (*hopefully*) the simplest way to load contents of all active [`BrowserWindow`s](https://github.com/atom/electron/blob/master/docs/api/browser-window.md) within electron when the source files are changed.\n\n<a href=\"https://github.com/yan-foto/neutron\"><img alt=\"Neutron Compatible\" src=\"https://img.shields.io/badge/neutron-compatible-004455.svg\"></a>\n<a href=\"https://www.npmjs.com/package/electron-reload\"><img alt=\"NPM Version\" src=\"https://img.shields.io/npm/v/electron-reload.svg\"></a>\n![license](https://img.shields.io/npm/l/electron-reload.svg)\n\n**Disclaimer**: this module is in its very early stages and the logic is still not mature enough.\n\n# Installation\n```\nnpm install electron-reload\n```\n\n# Usage\nJust initialize this module with desired glob or file path to watch and let it refresh electron browser windows as targets are changed:\n\n```js\n'use strict';\n\nconst {app, BrowserWindow} = require('electron');\n\nrequire('electron-reload')(__dirname);\n\n// Standard stuff\napp.on('ready', () {\n  let mainWindow = new BrowserWindow({width: 800, height: 600});\n\n  mainWindow.loadUrl(`file://${__dirname}/index.html`);\n  // the rest...\n});\n```\n\nNot that the above code only refreshes `WebContent`s of all `BrowserWindow`s. So if you want to have a hard reset (starting a new electron process) you can just pass the path to the electron executable in the `options` object. For example if you already have electron pre-built installed you could just do\n\n```js\nrequire('electron-reload')(__dirname, {\n  electron: require('electron-prebuilt')\n});\n```\n\n# API\n`electron_reload(paths, options)`\n* `paths`: a file, directory or glob pattern to watch\n* `options` (optional): [`chokidar`](https://github.com/paulmillr/chokidar) options plus `electron` property pointing to electron executables. (default: `{ignored: /node_modules|[\\/\\\\]\\./}`)\n\n\n# Why this module?\nSimply put, I was tired and confused by all other available modules which are so complicated\\* for such an uncomplicated task!\n\n\\* *e.g. start a local HTTP server, publish change events through a WebSocket, etc.!*\n\n# Even more!\nIf you want to have least effort when developing electron packages, take a look at [neutron](https://github.com/yan-foto/neutron)!\n\n# Changelog\n\n - **1.0.2**: Detach child so that killing parent doesn't kill it (on windows)\n - **1.0.1**: Replace `extend` with `Object.assign`\n - **1.0.0**: Adapt to Electron 1.0 new API\n - **0.3.0**: Use new method of accessing `app` (e.g. `require(electron).app`)\n - **0.2.0**: Use new electrons (> v0.32.3) `browser-window-created` event\n"
}