{
  "name": "vizabi-ddfcsv-reader",
  "version": "0.4.18",
  "description": "Vizabi DDFcsv reader",
  "main": "dist/bundle.js",
  "scripts": {
    "test": "npm run build && ./node_modules/.bin/ava \"test/**/*.spec.js\"",
    "n-test": "webpack && ./node_modules/.bin/ava \"test/**/*.spec.js\"",
    "test-prod": "npm run eslint && PROD_ENV=1 ./node_modules/.bin/webpack && ./node_modules/.bin/ava \"test/**/*.spec.js\"",
    "build": "npm run eslint && ./node_modules/.bin/webpack && WEB_ENV=1 ./node_modules/.bin/webpack",
    "eslint": "eslint --ignore-path .gitignore --ext js --fix . .config",
    "prepublish": "npm run eslint && PROD_ENV=1 webpack"
  },
  "author": {
    "name": "Vyacheslav Chub",
    "email": "vyacheslav.chub@valor-software.com"
  },
  "license": "GPL-3.0",
  "dependencies": {
    "async-es": "2.0.1",
    "bluebird": "3.4.6",
    "csv-parse": "1.1.7",
    "ddf-time-utils": "0.1.6",
    "fetch-polyfill": "0.8.2",
    "lodash": "4.15.0",
    "mingo": "0.7.0",
    "traverse": "0.6.6"
  },
  "devDependencies": {
    "ava": "0.16.0",
    "babel": "6.0.15",
    "babel-loader": "6.2.5",
    "babel-preset-es2015": "6.1.2",
    "eslint": "3.4.0",
    "eslint-config-valorsoft": "0.1.0",
    "karma": "1.2.0",
    "karma-chrome-launcher": "2.0.0",
    "karma-cli": "1.0.1",
    "karma-fixture": "0.2.1-1",
    "karma-phantomjs-launcher": "1.0.2",
    "phantomjs": "2.1.7",
    "webpack": "1.12.3"
  },
  "gitHead": "710a9a198de2c9a26f03904597cc5d95dbdd7f1c",
  "_npmVersion": "3.3.12",
  "_nodeVersion": "5.2.0",
  "dist": {
    "shasum": "590eb57d9b5a72a5f2a0460d97906876f4340c8d",
    "tarball": "http://registry.npmjs.org/vizabi-ddfcsv-reader/-/vizabi-ddfcsv-reader-0.4.18.tgz"
  },
  "versions": [
    {
      "number": "0.1.1",
      "date": "2016-07-07T14:01:55.524Z"
    },
    {
      "number": "0.1.2",
      "date": "2016-07-07T14:16:34.171Z"
    },
    {
      "number": "0.1.3",
      "date": "2016-07-07T14:18:47.161Z"
    },
    {
      "number": "0.1.4",
      "date": "2016-07-07T14:41:13.729Z"
    },
    {
      "number": "0.1.5",
      "date": "2016-07-07T15:02:44.143Z"
    },
    {
      "number": "0.1.6",
      "date": "2016-07-07T15:08:40.474Z"
    },
    {
      "number": "0.1.7",
      "date": "2016-07-07T15:29:52.369Z"
    },
    {
      "number": "0.1.8",
      "date": "2016-07-08T08:08:02.629Z"
    },
    {
      "number": "0.1.9",
      "date": "2016-07-08T08:31:09.310Z"
    },
    {
      "number": "0.1.10",
      "date": "2016-07-08T08:43:00.204Z"
    },
    {
      "number": "0.1.11",
      "date": "2016-07-08T09:03:38.483Z"
    },
    {
      "number": "0.1.12",
      "date": "2016-07-08T11:09:52.822Z"
    },
    {
      "number": "0.1.13",
      "date": "2016-07-08T11:41:22.282Z"
    },
    {
      "number": "0.1.14",
      "date": "2016-07-08T11:57:27.117Z"
    },
    {
      "number": "0.1.15",
      "date": "2016-07-08T12:05:12.157Z"
    },
    {
      "number": "0.1.16",
      "date": "2016-07-11T08:51:59.451Z"
    },
    {
      "number": "0.1.17",
      "date": "2016-07-11T10:18:10.699Z"
    },
    {
      "number": "0.1.18",
      "date": "2016-07-11T10:21:56.881Z"
    },
    {
      "number": "0.1.19",
      "date": "2016-07-11T11:51:20.901Z"
    },
    {
      "number": "0.1.20",
      "date": "2016-07-11T13:03:58.412Z"
    },
    {
      "number": "0.1.21",
      "date": "2016-07-11T14:28:22.332Z"
    },
    {
      "number": "0.1.22",
      "date": "2016-07-11T15:21:32.066Z"
    },
    {
      "number": "0.1.23",
      "date": "2016-07-12T11:42:03.944Z"
    },
    {
      "number": "0.1.25",
      "date": "2016-07-12T15:25:05.513Z"
    },
    {
      "number": "0.1.26",
      "date": "2016-07-12T16:23:19.796Z"
    },
    {
      "number": "0.1.27",
      "date": "2016-07-12T16:34:06.568Z"
    },
    {
      "number": "0.1.28",
      "date": "2016-07-12T16:49:33.242Z"
    },
    {
      "number": "0.2.0",
      "date": "2016-07-13T08:31:35.135Z"
    },
    {
      "number": "0.3.0",
      "date": "2016-07-25T13:02:36.852Z"
    },
    {
      "number": "0.3.1",
      "date": "2016-07-25T14:02:50.066Z"
    },
    {
      "number": "0.3.2",
      "date": "2016-07-26T13:46:53.940Z"
    },
    {
      "number": "0.3.3",
      "date": "2016-07-26T13:57:54.896Z"
    },
    {
      "number": "0.3.4",
      "date": "2016-07-27T12:34:12.576Z"
    },
    {
      "number": "0.3.5",
      "date": "2016-08-01T10:07:59.334Z"
    },
    {
      "number": "0.3.6",
      "date": "2016-08-01T16:03:44.838Z"
    },
    {
      "number": "0.3.7",
      "date": "2016-08-11T09:42:48.823Z"
    },
    {
      "number": "0.4.0",
      "date": "2016-09-08T13:48:00.505Z"
    },
    {
      "number": "0.4.2",
      "date": "2016-09-14T12:38:09.171Z"
    },
    {
      "number": "0.4.3",
      "date": "2016-09-14T14:27:31.328Z"
    },
    {
      "number": "0.4.5",
      "date": "2016-09-14T15:26:44.216Z"
    },
    {
      "number": "0.4.6",
      "date": "2016-09-14T15:47:23.451Z"
    },
    {
      "number": "0.4.7",
      "date": "2016-09-14T15:58:32.987Z"
    },
    {
      "number": "0.4.8",
      "date": "2016-09-15T11:27:02.086Z"
    },
    {
      "number": "0.4.9",
      "date": "2016-09-15T13:45:04.565Z"
    },
    {
      "number": "0.4.10",
      "date": "2016-09-15T16:14:34.635Z"
    },
    {
      "number": "0.4.11",
      "date": "2016-09-16T13:43:57.435Z"
    },
    {
      "number": "0.4.12",
      "date": "2016-09-19T12:02:50.413Z"
    },
    {
      "number": "0.4.13",
      "date": "2016-09-20T08:16:08.189Z"
    },
    {
      "number": "0.4.14",
      "date": "2016-09-20T12:38:43.572Z"
    },
    {
      "number": "0.4.15",
      "date": "2016-09-20T13:12:46.136Z"
    },
    {
      "number": "0.4.16",
      "date": "2016-09-20T14:34:21.992Z"
    },
    {
      "number": "0.4.17",
      "date": "2016-09-22T13:39:45.570Z"
    },
    {
      "number": "0.4.18",
      "date": "2016-10-03T12:53:09.125Z"
    }
  ],
  "created": "2016-07-07T14:01:55.524Z",
  "modified": "2016-10-03T12:53:09.125Z",
  "lastPublisher": {
    "name": "buchslava",
    "email": "vyacheslav.chub@gmail.com"
  },
  "owners": [
    {
      "name": "buchslava",
      "email": "vyacheslav.chub@gmail.com"
    }
  ],
  "readme": "# Vizabi DDFcsv reader\n\n## Install\n\n```\nnpm i vizabi-ddfcsv-reader\n```\n\n## Usage\n\n```\nconst Vizabi = require('vizabi');\nconst ddfCsvReader = require('vizabi-ddfcsv-reader');\nconst readerObject = ddfCsvReader.getDDFCsvReaderObject();\nVizabi.Reader.extend('ddf-csv-reader', readerObject);\n// ...\n```\n\n## Build\n\n```\ngit clone https://github.com/vizabi/vizabi-ddfcsv-reader.git\ncd vizabi-ddfcsv-reader\nnpm i\nnpm run build\n```\n\n### Run tests\n\n```\nnpm test\n```\n\nAnd after this you can see `dist` folder that contains two sets:\n\n  * `bundle.js` and `bundle.js.map`\n  * `bundle.web.js` and `bundle.web.js.map`\n  \nFirst one is for using with electron app or tests. Second one is only for using in browser.\n\n## File readers\n\n`Vizabi DDFcsv reader` has 2 file readers:\n \n  * FrontendFileReader is a part of `bundle.js` version.\n  * BackendFileReader is a part of `bundle.web.js` version.\n  \n### BackendFileReader\n\nThis reader is designed for file reading via OS file system.\n  \n### FrontendFileReader\n\nThis reader is designed for file reading via HTTP protocol.\n\n## DDFcsv reader usage for DDF data reading examples:\n\n```\nimport {BackendFileReader, Ddf} from 'vizabi-ddfcsv-reader';\n\nconst backendFileReader = new BackendFileReader();\nconst ddf = new Ddf('your-ddf-folder', backendFileReader);\n\nddf.getIndex(indexErr => {\n  // process indexErr here ...\n    \n  ddf.getConcepts((conceptsErr, conceptsData) => {\n    // process conceptsErr here ...\n\n    // process conceptsData here ...\n\n    ddf.getAllDataPointsContent(\n      (dataPointsFileErr, dataPointsData) => {\n        // process dataPointsFileErr here ...\n        \n        // process dataPointsData here ...\n      },\n      dataPointsAllErr => {\n        // process dataPointsAllErr here ...\n\n        // data reading finish\n      });\n  });\n});\n```\n\nor \n\n```\nimport {BackendFileReader, Ddf} from 'vizabi-ddfcsv-reader';\n\nconst backendFileReader = new BackendFileReader();\nconst ddf = new Ddf('your-ddf-folder', backendFileReader);\n// for example, :\nconst query = {\n  from: 'entities',\n  animatable: 'time',\n    select: {\n      key: ['geo'],\n      value: ['geo.name', '_default', 'geo.world_4region']\n    },\n    where: {'geo.is--country': true},\n    grouping: {},\n    orderBy: null\n  };\n  \nddf.processRequest(query, (err, data) => {\n    // process err here ...\n\n    // process expected data here ...\n};\n```\n"
}