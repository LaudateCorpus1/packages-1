{
  "name": "electron-screen",
  "version": "1.0.3",
  "description": "Small Module that returns an array with all the monitors connected to the pc with their resolution and position.",
  "main": "screen.js",
  "repository": {
    "user": "delvedor",
    "repo": "electron-screen",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/delvedor/electron-screen/tarball/master",
    "clone_url": "https://github.com/delvedor/electron-screen",
    "https_url": "https://github.com/delvedor/electron-screen",
    "travis_url": "https://travis-ci.org/delvedor/electron-screen",
    "zip_url": "https://github.com/delvedor/electron-screen/archive/master.zip",
    "api_url": "https://api.github.com/repos/delvedor/electron-screen"
  },
  "os": [
    "win32"
  ],
  "keywords": [
    "electron",
    "monitor",
    "display",
    "screen",
    "Windows"
  ],
  "author": {
    "name": "Tomas Della Vedova - @delvedor",
    "url": "http://delved.org"
  },
  "license": "MIT",
  "homepage": "https://github.com/delvedor/electron-screen",
  "dependencies": {
    "bindings": "^1.2.1"
  },
  "scripts": {
    "install": "node-gyp rebuild"
  },
  "gypfile": true,
  "gitHead": "27d9c139680d9da0630e24c39698d2365c90d28c",
  "_npmVersion": "3.8.6",
  "_nodeVersion": "5.11.0",
  "dist": {
    "shasum": "ce59c0ef9cac90d49235fa013baaf8dab3ff26ef",
    "tarball": "http://registry.npmjs.org/electron-screen/-/electron-screen-1.0.3.tgz"
  },
  "stars": 1,
  "versions": [
    {
      "number": "1.0.0",
      "date": "2016-04-05T17:10:52.294Z"
    },
    {
      "number": "1.0.1",
      "date": "2016-04-05T17:43:38.369Z"
    },
    {
      "number": "1.0.2",
      "date": "2016-04-20T13:10:40.590Z"
    },
    {
      "number": "1.0.3",
      "date": "2016-04-24T08:44:08.228Z"
    }
  ],
  "created": "2016-04-05T17:10:52.294Z",
  "modified": "2016-04-24T08:44:08.228Z",
  "lastPublisher": {
    "name": "delvedor",
    "email": "tommydelved@gmail.com"
  },
  "owners": [
    {
      "name": "delvedor",
      "email": "tommydelved@gmail.com"
    }
  ],
  "readme": "# Electron Screen\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat)](http://standardjs.com/)\n\nSmall Module that returns an array with all the monitors connected to the pc with their resolution and position.  \nThe standard API of electron already do this, but under Windows the screen api suffers lot of issues.\n\n**Works only under Windows OS!**  \nIf you want to manage screens with other OS have a look [here](https://github.com/electron/electron/blob/master/docs/api/screen.md).\n\n## Usage\nDownload and install `electron-screen` through npm, then require it:\n```javascript\nconst screen = require('electron-screen')\n\nconsole.log(screen())\n```\nUnder **Windows** `electron-screen` returns the following array of objects, where every object is a different screen :\n```javascript\n[{\n  bounds: {\n    x: Number,\n    y: Number,\n    width: Number,\n    height: Number\n  }\n}]\n```\n\n## Build\n- For testing:\n```\n$ npm build .\n```\n- For use the module inside Electron:  \nFollow [this](http://electron.atom.io/docs/v0.37.6/tutorial/using-native-node-modules/#the-npm-way) instructions.\n\n## TODO\n- [ ] Wrap Electron's native screen API and use electron-screen only under Windows.\n- [ ] Add testing\n\n## Contributing\nIf you feel you can help in any way, be it with examples, extra testing, or new features please open a pull request or open an issue.\n\nI would make a special thanks to [@Corralx](https://github.com/Corralx) for helping me to improving the code.\n\nThe code follows the Standard code style.  \n[![js-standard-style](https://cdn.rawgit.com/feross/standard/master/badge.svg)](https://github.com/feross/standard)\n\n______________________________________________________________________________________________________________________\n## License\nThe code is released under the MIT license.\n\nThe software is provided \"as is\", without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and non infringement. In no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.\n"
}