{
  "name": "electron-opus",
  "description": "Electron native binding to OPUS",
  "version": "0.2.2",
  "author": {
    "name": "Mikko Rantanen",
    "email": "jubjub@jubjubnest.net"
  },
  "contributors": [
    {
      "name": "Justin Chase",
      "email": "justin@evolvelabs.com"
    }
  ],
  "homepage": "https://github.com/EvolveLabs/electron-opus",
  "license": "MIT",
  "repository": {
    "user": "EvolveLabs",
    "repo": "electron-opus",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/EvolveLabs/electron-opus/tarball/master",
    "clone_url": "https://github.com/EvolveLabs/electron-opus",
    "https_url": "https://github.com/EvolveLabs/electron-opus",
    "travis_url": "https://travis-ci.org/EvolveLabs/electron-opus",
    "zip_url": "https://github.com/EvolveLabs/electron-opus/archive/master.zip",
    "api_url": "https://api.github.com/repos/EvolveLabs/electron-opus"
  },
  "main": "index.js",
  "scripts": {
    "install": "bash ./node_modules/.bin/elinst"
  },
  "//": "Platform limitations is due to lack of config.h files. See README.md for more information.",
  "os": [
    "linux",
    "darwin",
    "win32"
  ],
  "cpu": [
    "x64",
    "arm",
    "ia86"
  ],
  "engines": {
    "node": ">=3.2.0",
    "electron": "~0.31.0"
  },
  "binaries": [
    "https://s3.amazonaws.com/evolve-bin/{name}/{name}-{version}-{platform}-{arch}-{configuration}.tgz"
  ],
  "dependencies": {
    "bindings": "*",
    "electron-updater-tools": "~0.2.0",
    "electron-ogg-packet": "^1.1.0"
  },
  "devDependencies": {
    "nan": "~2.0.0"
  },
  "gitHead": "3df79c8df5e92abff68ebf49b5cf3cb0ad23e61d",
  "bundleDependencies": [
    "electron-updater-tools"
  ],
  "_npmVersion": "2.13.3",
  "_nodeVersion": "3.2.0",
  "dist": {
    "shasum": "5dadf453f117fe3cfba9f35a2133a424d68e9199",
    "tarball": "http://registry.npmjs.org/electron-opus/-/electron-opus-0.2.2.tgz"
  },
  "versions": [
    {
      "number": "0.1.10",
      "date": "2015-06-25T18:58:55.559Z"
    },
    {
      "number": "0.1.11",
      "date": "2015-07-02T18:36:21.221Z"
    },
    {
      "number": "0.1.12",
      "date": "2015-08-06T20:20:44.178Z"
    },
    {
      "number": "0.2.0",
      "date": "2015-08-30T03:35:47.100Z"
    },
    {
      "number": "0.2.1",
      "date": "2015-09-01T19:41:55.013Z"
    },
    {
      "number": "0.2.2",
      "date": "2015-09-01T20:01:09.028Z"
    }
  ],
  "created": "2015-06-25T18:58:55.559Z",
  "modified": "2015-10-15T02:44:01.837Z",
  "lastPublisher": {
    "name": "justinmchase",
    "email": "justin.m.chase@outlook.com"
  },
  "owners": [
    {
      "name": "justinmchase",
      "email": "justin.m.chase@outlook.com"
    }
  ],
  "readme": "node-opus\n=========\n### NodeJS native bindings to libopus\n\nThis module implements bindings for Opus v1.1 for Node.js.\n\n    var opus = require('node-opus');\n\n    // Create the encoder.\n    // Specify 48kHz sampling rate and 10ms frame size.\n    // NOTE: The decoder must use the same values when decoding the packets.\n    var rate = 48000;\n    var encoder = new opus.OpusEncoder( rate );\n\n    // Encode and decode.\n    var frame_size = rate/100;\n    var encoded = encoder.encode( buffer, frame_size );\n    var decoded = encoder.decode( encoded, frame_size );\n\nPlatform support\n----------------\n\nSupported platforms:\n- Linux x64\n- Linux ARM (Raspberry Pi 1)\n- Mac OS X x64\n- Windows x64\n\n\nAdd new supported platforms by running ./autogen.sh and ./configure in\ndeps/opus and copying the resulting config.h to deps/config/opus/[os]/[arch].\n\nUse the following flags with configure:\n\n    ./configure --enable-static --disable-shared --with-pic\n\nOn a clean debian-based system, the full flow looks approximately like:\n\n\tsudo apt-get update\n\tsudo apt-get install autoconf\n\tsudo apt-get install libtool\n\tcd deps/opus\n\t./autogen.sh\n\t./configure --enable-static --disable-shared --with-pic\n\tmkdir -p ../config/opus/[os]/[arch]\n\tcp config.h ../config/opus/[os]/[arch]\n\nAnd, then, the last step is to add the OS/Arch to `package.json`.\n"
}