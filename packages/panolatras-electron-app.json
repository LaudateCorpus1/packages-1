{
  "name": "panolatras-electron-app",
  "productName": "Panolatras",
  "version": "0.10.1",
  "description": "Gerenciador do site panolatras",
  "main": "main.js",
  "scripts": {
    "test": "cross-env NODE_ENV=test BABEL_DISABLE_CACHE=1 mocha --compilers js:babel-register --recursive --require ./test/setup.js test/**/*.spec.js",
    "test-watch": "npm test -- --watch",
    "test-e2e": "cross-env NODE_ENV=test BABEL_DISABLE_CACHE=1 mocha --compilers js:babel-register --require ./test/setup.js ./test/e2e.js",
    "lint": "eslint app test *.js",
    "hot-server": "node -r babel-register server.js",
    "build-main": "cross-env NODE_ENV=production node -r babel-register ./node_modules/webpack/bin/webpack --config webpack.config.electron.js --progress --profile --colors",
    "build-renderer": "cross-env NODE_ENV=production node -r babel-register ./node_modules/webpack/bin/webpack --config webpack.config.production.js --progress --profile --colors",
    "build": "npm run build-main && npm run build-renderer",
    "start": "cross-env NODE_ENV=production electron ./",
    "start-hot": "cross-env HOT=1 NODE_ENV=development electron -r babel-register -r babel-polyfill ./main.development",
    "package": "cross-env NODE_ENV=production node -r babel-register -r babel-polyfill package.js",
    "package-all": "npm run package -- --all",
    "postinstall": "node node_modules/fbjs-scripts/node/check-dev-engines.js package.json",
    "dev": "concurrently --kill-others \"npm run hot-server\" \"npm run start-hot\""
  },
  "bin": {
    "electron": "./node_modules/.bin/electron"
  },
  "license": "MIT",
  "devDependencies": {
    "asar": "^0.12.2",
    "babel-core": "^6.14.0",
    "babel-eslint": "^6.1.2",
    "babel-loader": "^6.2.5",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-plugin-dev-expression": "^0.2.1",
    "babel-plugin-webpack-loaders": "^0.7.1",
    "babel-polyfill": "^6.13.0",
    "babel-preset-es2015": "^6.14.0",
    "babel-preset-react": "^6.11.1",
    "babel-preset-react-hmre": "^1.1.1",
    "babel-preset-react-optimize": "^1.0.1",
    "babel-preset-stage-0": "^6.5.0",
    "babel-register": "^6.14.0",
    "chai": "^3.5.0",
    "concurrently": "^2.2.0",
    "cross-env": "^2.0.1",
    "css-loader": "^0.25.0",
    "del": "^2.2.2",
    "devtron": "^1.3.0",
    "electron": "^1.3.4",
    "electron-devtools-installer": "^2.0.1",
    "electron-packager": "^7.7.0",
    "electron-rebuild": "^1.2.1",
    "eslint": "^3.3.1",
    "eslint-config-airbnb": "^10.0.1",
    "eslint-import-resolver-webpack": "^0.6.0",
    "eslint-plugin-import": "^1.14.0",
    "eslint-plugin-jsx-a11y": "^2.1.0",
    "eslint-plugin-react": "^6.1.2",
    "express": "^4.14.0",
    "extract-text-webpack-plugin": "^1.0.1",
    "fbjs-scripts": "^0.7.1",
    "jsdom": "^9.4.3",
    "json-loader": "^0.5.4",
    "minimist": "^1.2.0",
    "mocha": "^3.0.2",
    "node-libs-browser": "^1.0.0",
    "react-addons-test-utils": "^15.3.1",
    "redux-logger": "^2.6.1",
    "sinon": "^1.17.5",
    "spectron": "^3.3.0",
    "style-loader": "^0.13.1",
    "webpack": "^1.13.2",
    "webpack-dev-middleware": "^1.6.1",
    "webpack-hot-middleware": "^2.12.2",
    "webpack-merge": "^0.14.1"
  },
  "dependencies": {
    "css-modules-require-hook": "^4.0.2",
    "electron": "^1.4.2",
    "electron-debug": "^1.0.1",
    "electron-json-storage": "^2.0.0",
    "electron-plugins": "^0.1.0",
    "electron-updater": "^0.3.1",
    "font-awesome": "^4.6.3",
    "postcss": "^5.1.2",
    "react": "^15.3.1",
    "react-addons-shallow-compare": "^15.3.1",
    "react-dom": "^15.3.1",
    "react-redux": "^4.4.5",
    "react-router": "^2.8.0",
    "react-router-redux": "^4.0.5",
    "redux": "^3.5.2",
    "redux-thunk": "^2.1.0",
    "semantic-react": "^0.8.5",
    "source-map-support": "^0.4.2",
    "superagent": "^2.3.0",
    "superagent-prefix": "0.0.2",
    "superagent-suffix": "^0.1.0"
  },
  "devEngines": {
    "node": "4.x || 5.x || 6.x",
    "npm": "2.x || 3.x"
  },
  "gitHead": "335d85c9fd7eddbc0bea9623cba3e39653ce0357",
  "_npmVersion": "3.10.5",
  "_nodeVersion": "6.3.0",
  "dist": {
    "shasum": "ffdd2f759b59e3b6bc8ea83f7bca062d757fd82e",
    "tarball": "http://registry.npmjs.org/panolatras-electron-app/-/panolatras-electron-app-0.10.1.tgz"
  },
  "versions": [
    {
      "number": "0.10.0",
      "date": "2016-10-05T09:11:13.508Z"
    },
    {
      "number": "0.10.1",
      "date": "2016-10-05T09:20:20.181Z"
    }
  ],
  "created": "2016-10-05T09:11:13.508Z",
  "modified": "2016-10-05T09:20:20.181Z",
  "lastPublisher": {
    "name": "herenow",
    "email": "leonardoshiro@gmail.com"
  },
  "owners": [
    {
      "name": "herenow",
      "email": "leonardoshiro@gmail.com"
    }
  ],
  "readme": "# electron-react-boilerplate\n\n[![NPM version][npm-image]][npm-url]\n[![Build Status][travis-image]][travis-url]\n[![Appveyor Build Status][appveyor-image]][appveyor-url]\n[![Dependency Status][david_img]][david_site]\n\n![](./erb-logo.png)\n\n> Live editing development on desktop app\n\n[Electron](http://electron.atom.io/) application boilerplate based on [React](https://facebook.github.io/react/), [Redux](https://github.com/reactjs/redux), [React Router](https://github.com/reactjs/react-router), [Webpack](http://webpack.github.io/docs/), [React Transform HMR](https://github.com/gaearon/react-transform-hmr) for rapid application development\n\n## Screenshot\n\n![](https://cloud.githubusercontent.com/assets/3382565/10557547/b1f07a4e-74e3-11e5-8d27-79ab6947d429.gif)\n\n## Install\n\nFirst, clone the repo via git:\n\n```bash\ngit clone https://github.com/chentsulin/electron-react-boilerplate.git your-project-name\n```\n\nAnd then install dependencies.\n\n```bash\n$ cd your-project-name && npm install\n```\n\n\n## Run\n\nRun this two commands __simultaneously__ in different console tabs.\n\n```bash\n$ npm run hot-server\n$ npm run start-hot\n```\n\nor run two servers with one command\n\n```bash\n$ npm run dev\n```\n\n*Note: requires a node version >= 4 and an npm version >= 2.*\n\n\n## DevTools\n\n#### Toggle Chrome DevTools\n\n- OS X: <kbd>Cmd</kbd> <kbd>Alt</kbd> <kbd>I</kbd> or <kbd>F12</kbd>\n- Linux: <kbd>Ctrl</kbd> <kbd>Shift</kbd> <kbd>I</kbd> or <kbd>F12</kbd>\n- Windows: <kbd>Ctrl</kbd> <kbd>Shift</kbd> <kbd>I</kbd> or <kbd>F12</kbd>\n\n*See [electron-debug](https://github.com/sindresorhus/electron-debug) for more information.*\n\n#### DevTools extension\n\nThis boilerplate is included following DevTools extensions:\n\n* [Devtron](https://github.com/electron/devtron) - Install via [electron-debug](https://github.com/sindresorhus/electron-debug).\n* [React Developer Tools](https://github.com/facebook/react-devtools) - Install via [electron-devtools-installer](https://github.com/GPMDP/electron-devtools-installer).\n* [Redux DevTools](https://github.com/zalmoxisus/redux-devtools-extension) - Install via [electron-devtools-installer](https://github.com/GPMDP/electron-devtools-installer).\n\nYou can find the tabs on Chrome DevTools.\n\nIf you want to update extensions version, please set `UPGRADE_EXTENSIONS` env, just run:\n\n```bash\n$ UPGRADE_EXTENSIONS=1 npm run dev\n\n# For Windows\n$ set UPGRADE_EXTENSIONS=1 && npm run dev\n```\n\n## Externals\n\nIf you use any 3rd party libraries which can't or won't be built with webpack, you must list them in your `webpack.config.base.js`ï¼š\n\n```javascript\nexternals: [\n  // put your node 3rd party libraries which can't be built with webpack here (mysql, mongodb, and so on..)\n]\n```\n\nFor a common example, to install Bootstrap, `npm i --save bootstrap` and link them in the head of app.html\n\n```html\n<link rel=\"stylesheet\" href=\"../node_modules/bootstrap/dist/css/bootstrap.css\" />\n<link rel=\"image/svg+xml\" href=\"../node_modules/bootstrap/dist/fonts/glyphicons-halflings-regular.eot\" />\n...\n```\n\nMake sure to list bootstrap in externals in `webpack.config.base.js` or the app won't include them in the package:\n```js\nexternals: ['bootstrap']\n```\n \n\n\n## CSS Modules\n\nThis boilerplate out of the box is configured to use [css-modules](https://github.com/css-modules/css-modules).\n\nAll `.css` file extensions will use css-modules unless it has `.global.css`.\n\nIf you need global styles, stylesheets with `.global.css` will not go through the\ncss-modules loader. e.g. `app.global.css`\n\n\n## Package\n\n```bash\n$ npm run package\n```\n\nTo package apps for all platforms:\n\n```bash\n$ npm run package-all\n```\n\nTo package apps with options:\n\n```bash\n$ npm run package -- --[option]\n```\n\n#### Options\n\n- --name, -n: Application name (default: ElectronReact)\n- --version, -v: Electron version (default: latest version)\n- --asar, -a: [asar](https://github.com/atom/asar) support (default: false)\n- --icon, -i: Application icon\n- --all: pack for all platforms\n\nUse `electron-packager` to pack your app with `--all` options for darwin (osx), linux and win32 (windows) platform. After build, you will find them in `release` folder. Otherwise, you will only find one for your os.\n\n`test`, `tools`, `release` folder and devDependencies in `package.json` will be ignored by default.\n\n#### Default Ignore modules\n\nWe add some module's `peerDependencies` to ignore option as default for application size reduction.\n\n- `babel-core` is required by `babel-loader` and its size is ~19 MB\n- `node-libs-browser` is required by `webpack` and its size is ~3MB.\n\n> **Note:** If you want to use any above modules in runtime, for example: `require('babel/register')`, you should move them from `devDependencies` to `dependencies`.\n\n#### Building windows apps from non-windows platforms\n\nPlease checkout [Building windows apps from non-windows platforms](https://github.com/maxogden/electron-packager#building-windows-apps-from-non-windows-platforms).\n\n## Dispatching redux actions from main process\n\nsee discusses in [#118](https://github.com/chentsulin/electron-react-boilerplate/issues/118) and [#108](https://github.com/chentsulin/electron-react-boilerplate/issues/108)\n\n## How hot-reloading works on Electron\n\nWe use [webpack-target-electron-renderer](https://github.com/chentsulin/webpack-target-electron-renderer) to provide a build target for electron renderer process. Read more information [here](https://github.com/chentsulin/webpack-target-electron-renderer#how-this-module-works).\n\n> Note: webpack >= 1.12.15 has built-in support for `electron-main` and `electron-renderer` targets.\n\n## How to keep the boilerplate updated\n\nIf your application is a fork from this repo, you can add this repo to another git remote:\n\n```sh\ngit remote add upstream https://github.com/chentsulin/electron-react-boilerplate.git\n```\n\nThen, use git to merge some latest commits:\n\n```sh\ngit pull upstream master\n```\n\n## Native-like UI\n\nIf you want to have native-like User Interface (OS X El Capitan and Windows 10), [react-desktop](https://github.com/gabrielbull/react-desktop) may perfect suit for you.\n\n\n## Maintainers\n\n- [C. T. Lin](https://github.com/chentsulin)\n- [Jhen-Jie Hong](https://github.com/jhen0409)\n\n\n## License\nMIT Â© [C. T. Lin](https://github.com/chentsulin)\n\n[npm-image]: https://img.shields.io/npm/v/electron-react-boilerplate.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/electron-react-boilerplate\n[travis-image]: https://travis-ci.org/chentsulin/electron-react-boilerplate.svg?branch=master\n[travis-url]: https://travis-ci.org/chentsulin/electron-react-boilerplate\n[appveyor-image]: https://ci.appveyor.com/api/projects/status/github/chentsulin/electron-react-boilerplate?svg=true\n[appveyor-url]: https://ci.appveyor.com/project/chentsulin/electron-react-boilerplate/branch/master\n[david_img]: https://img.shields.io/david/chentsulin/electron-react-boilerplate.svg\n[david_site]: https://david-dm.org/chentsulin/electron-react-boilerplate\n"
}