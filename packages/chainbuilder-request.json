{
  "name": "chainbuilder-request",
  "version": "1.0.1",
  "description": "Request mixin for chainbuilder.",
  "main": "index.js",
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "user": "andrewpmckenzie",
    "repo": "chainbuilder-request",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/andrewpmckenzie/chainbuilder-request/tarball/master",
    "clone_url": "https://github.com/andrewpmckenzie/chainbuilder-request",
    "https_url": "https://github.com/andrewpmckenzie/chainbuilder-request",
    "travis_url": "https://travis-ci.org/andrewpmckenzie/chainbuilder-request",
    "zip_url": "https://github.com/andrewpmckenzie/chainbuilder-request/archive/master.zip",
    "api_url": "https://api.github.com/repos/andrewpmckenzie/chainbuilder-request"
  },
  "keywords": [
    "chainbuilder",
    "request",
    "rest",
    "promise",
    "chain"
  ],
  "author": {
    "name": "andrewpmckenzie@gmail.com"
  },
  "license": "MIT",
  "homepage": "https://github.com/andrewpmckenzie/chainbuilder-request#readme",
  "dependencies": {
    "request": "^2.67.0"
  },
  "devDependencies": {
    "chai": "^3.4.1",
    "chainbuilder": "^2.0.0",
    "mocha": "^2.3.4",
    "mockery": "^1.4.0",
    "nock": "^3.6.0",
    "sinon": "^1.17.2"
  },
  "gitHead": "b4864c5561f03a5ab23e180e87523899edd71168",
  "_npmVersion": "3.3.12",
  "_nodeVersion": "5.3.0",
  "dist": {
    "shasum": "0e8a7c9b51959fd30347f91325e73a78c7d01b48",
    "tarball": "http://registry.npmjs.org/chainbuilder-request/-/chainbuilder-request-1.0.1.tgz"
  },
  "versions": [
    {
      "number": "1.0.0",
      "date": "2015-12-26T07:33:39.603Z"
    },
    {
      "number": "1.0.1",
      "date": "2015-12-29T16:16:25.128Z"
    }
  ],
  "created": "2015-12-26T07:33:39.603Z",
  "modified": "2015-12-29T16:16:25.128Z",
  "lastPublisher": {
    "name": "andrewpmckenzie",
    "email": "andrew.mckenzie@electronifie.com"
  },
  "owners": [
    {
      "name": "andrewpmckenzie",
      "email": "andrewpmckenzie@gmail.com"
    }
  ],
  "readme": "# chainbuilder-request [![Build Status](https://travis-ci.org/andrewpmckenzie/chainbuilder-request.svg)](https://travis-ci.org/andrewpmckenzie/chainbuilder-request)\n\nA [request](https://github.com/request/request) mixin for [chainbuilder](https://www.npmjs.com/package/chainbuilder). \n\n**Installation** `npm install chainbuilder chainbuilder-request --save`\n\n**Usage**  \n```javascript\nvar chainBuilder = require('chainbuilder');\n\nvar myChain = chainBuilder({\n  methods: {/* ... your methods ... */},\n  mixins: [\n    require('chainbuilder-request')()\n  ]\n});\n```\n\n## Methods\n\n#### request(options)\nReturns the response object.\n\n```javascript\n  myChain()\n    .request('http://jsonip.com/')\n    .tap(function (err, response) {\n      console.log(response.statusCode); /* > 200 */\n      console.log(response.body); /* > '{\"ip\":\"123.45.67.89\",\"about\":\"/about\",\"Pro!\":\"http://getjsonip.com\"}' */\n    });\n\n  myChain()\n    .request({\n      url: 'http://jsonip.com/',\n      json: true\n    })\n    .tap(function (err, response) {\n      console.log(response.statusCode); /* > 200 */\n      console.log(response.body); /* > {ip: '123.45.67.89', about: '/about', 'Pro!': 'http://getjsonip.com' } */\n    });\n```\n\n**`@param {string|Object|Function|undefined} options`** options for the request. A string or object param is passed directly\n  to request.js. A function is executed with the chain as context (e.g. it has access to `this.previousResult()`), and the\n  returned value is passed to request.js. If no parameter is passed, the `previousResult()` is passed to request.js.\n\n#### requestBody(options)\nSame as `request(options)`, except returns the response body (or errors on a non-200 response).\n\n```javascript\n  myChain()\n    .requestBody('http://jsonip.com/')\n    .tap(function (err, response) {\n      console.log(response); /* > '{\"ip\":\"123.45.67.89\",\"about\":\"/about\",\"Pro!\":\"http://getjsonip.com\"}' */\n    });\n```\n\n#### requestJson(options)\nSame as `requestBody(options)`, except returns the body parsed as JSON.\n\n```javascript\n  myChain()\n    .requestJson('http://jsonip.com/')\n    .tap(function (err, response) {\n      console.log(response); /* > {ip: '123.45.67.89', about: '/about', 'Pro!': 'http://getjsonip.com' } */\n    });\n```\n"
}