{
  "name": "vrjs-axis",
  "version": "1.0.0",
  "description": "axis object for vrjs",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "user": "vrjs",
    "repo": "axis",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/vrjs/axis/tarball/master",
    "clone_url": "https://github.com/vrjs/axis",
    "https_url": "https://github.com/vrjs/axis",
    "travis_url": "https://travis-ci.org/vrjs/axis",
    "zip_url": "https://github.com/vrjs/axis/archive/master.zip",
    "api_url": "https://api.github.com/repos/vrjs/axis"
  },
  "keywords": [
    "vrjs-objects"
  ],
  "author": {
    "name": "Scott Frees",
    "email": "scott.frees@gmail.com",
    "url": "http://scottfrees.com/"
  },
  "license": "ISC",
  "homepage": "https://github.com/vrjs/axis#readme",
  "gitHead": "f8415a9ea5000964121f5cc8183c80b21d140009",
  "_npmVersion": "2.11.2",
  "_nodeVersion": "0.12.5",
  "dist": {
    "shasum": "8b414979ca0c77cabf8617717e02dc7f7530fd46",
    "tarball": "http://registry.npmjs.org/vrjs-axis/-/vrjs-axis-1.0.0.tgz"
  },
  "versions": [
    {
      "number": "1.0.0",
      "date": "2015-07-03T20:34:21.299Z"
    }
  ],
  "created": "2015-07-03T20:34:21.299Z",
  "modified": "2015-07-03T20:34:21.299Z",
  "lastPublisher": {
    "name": "freezer3",
    "email": "scott.frees@gmail.com"
  },
  "owners": [
    {
      "name": "freezer3",
      "email": "scott.frees@gmail.com"
    }
  ],
  "readme": "# vrjs/axis\nSimple utility to build a THREE.js 3D axis object.  The module uses node's require module pattern and is meant to be used within the [vrjs](http://vrjs.io) framework using [electron](http://electron.atom.io/).\n\n## Usage\nThe export is a constructor which accepts a reference to THREE.  The constructor\nreturns a single object that has a `make` functions which returns the axis.\n\n```js\n\nvar axis = require('..')(THREE);\nmesh.add(axis.make());\n\n```\nSee [example](example/) for more context.\n\n## Options\nThe `make` function can accept an options object.  The following properties are supported:\n\n- **neg**:  boolean value, indicating if negative dimensions (dashed) should be shown.  Default is false\n- **length**:  length (pixels) of axes.  Default is 250\n\n```js\nvar axis = require('..')(THREE);\nmesh.add(axis.make({neg:true, length:300}));\n```"
}