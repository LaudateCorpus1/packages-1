{
  "name": "electron-windows-inno-installer",
  "version": "0.3.0",
  "description": "build installer by inno-setup",
  "main": "./electron-inno-auto-update/inno-updater.js",
  "bin": {
    "electron-windows-inno-installer": "./cli.js"
  },
  "scripts": {},
  "repository": {
    "user": "Qquanwei",
    "repo": "electron-windows-inno-installer",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/Qquanwei/electron-windows-inno-installer/tarball/master",
    "clone_url": "https://github.com/Qquanwei/electron-windows-inno-installer",
    "https_url": "https://github.com/Qquanwei/electron-windows-inno-installer",
    "travis_url": "https://travis-ci.org/Qquanwei/electron-windows-inno-installer",
    "zip_url": "https://github.com/Qquanwei/electron-windows-inno-installer/archive/master.zip",
    "api_url": "https://api.github.com/repos/Qquanwei/electron-windows-inno-installer"
  },
  "keywords": [
    "electron",
    "inno",
    "inno-setup",
    "windows",
    "installer"
  ],
  "author": {
    "name": "Qquanwei"
  },
  "license": "ISC",
  "homepage": "https://github.com/Qquanwei/electron-windows-inno-installer#readme",
  "dependencies": {
    "follow-redirects": "^0.2.0",
    "gulp": "^3.9.1",
    "gulp-electron": "^0.1.3",
    "gulp-inno": "0.0.7",
    "http-signature": "^1.1.1",
    "js-downloader": "0.0.3",
    "semver": "^5.3.0",
    "underscore": "^1.8.3"
  },
  "gitHead": "cefc07206b50f8bff49139e548aa5083557e024e",
  "_npmVersion": "3.7.3",
  "_nodeVersion": "5.9.1",
  "dist": {
    "shasum": "2cac06b986fe855fc1611bbc469425e0f67d7c52",
    "tarball": "http://registry.npmjs.org/electron-windows-inno-installer/-/electron-windows-inno-installer-0.3.0.tgz"
  },
  "versions": [
    {
      "number": "0.0.1",
      "date": "2016-08-03T06:29:26.112Z"
    },
    {
      "number": "0.0.2",
      "date": "2016-08-03T07:13:50.947Z"
    },
    {
      "number": "0.0.3",
      "date": "2016-08-03T10:39:04.122Z"
    },
    {
      "number": "0.0.4",
      "date": "2016-08-04T06:00:51.323Z"
    },
    {
      "number": "0.0.5",
      "date": "2016-08-04T06:47:25.958Z"
    },
    {
      "number": "0.0.6",
      "date": "2016-08-09T04:00:43.502Z"
    },
    {
      "number": "0.0.7",
      "date": "2016-08-09T05:16:52.058Z"
    },
    {
      "number": "0.0.8",
      "date": "2016-08-09T10:26:31.417Z"
    },
    {
      "number": "0.0.9",
      "date": "2016-08-09T14:06:01.113Z"
    },
    {
      "number": "0.0.10",
      "date": "2016-08-19T09:59:17.839Z"
    },
    {
      "number": "0.0.11",
      "date": "2016-08-19T10:42:12.478Z"
    },
    {
      "number": "0.0.12",
      "date": "2016-08-22T03:36:48.078Z"
    },
    {
      "number": "0.1.1",
      "date": "2016-08-26T09:39:23.828Z"
    },
    {
      "number": "0.1.2",
      "date": "2016-08-28T06:32:33.578Z"
    },
    {
      "number": "0.1.3",
      "date": "2016-08-29T07:31:51.471Z"
    },
    {
      "number": "0.1.4",
      "date": "2016-08-29T08:42:55.465Z"
    },
    {
      "number": "0.1.5",
      "date": "2016-09-05T04:35:41.117Z"
    },
    {
      "number": "0.1.6",
      "date": "2016-09-09T10:06:10.456Z"
    },
    {
      "number": "0.2.7",
      "date": "2016-09-21T06:58:26.569Z"
    },
    {
      "number": "0.2.8",
      "date": "2016-09-23T02:51:26.453Z"
    },
    {
      "number": "0.3.0",
      "date": "2016-09-29T04:11:47.745Z"
    }
  ],
  "created": "2016-08-03T06:29:26.112Z",
  "modified": "2016-09-29T04:11:47.745Z",
  "lastPublisher": {
    "name": "quanwei",
    "email": "quanwei9958@126.com"
  },
  "owners": [
    {
      "name": "quanwei",
      "email": "quanwei9958@126.com"
    }
  ],
  "readme": "# Build Your Installer Easy to RELEASE & UPDATE\n\n## Installation\n\n* `npm install electron-windows-inno-installer -g`\n\n\n## Required\n\n* wine `brew install wine --devel`\n\n## Build Your Project\n\nneed your `*.iss` file in your work directory\n\nyou can using `electron-windows-inno-installer --make-iss` and then `vim example.iss` to make your setup.iss file\n\n```\nrm -rf release/\nelectron-windows-inno-installer ./setup.iss --platform win32-x64 --icon ./favicon.ico\n```\n\nelectron-windows-inno-installer will pack all you local file without directory , if you want customs pack files ,you can use 'sourceFiles' field in you `package.json`\nlike this \n```\n    ...\n\n    \"dependencies\": {\n          \"electron-windows-inno-installer\": \"^0.1.3\"\n    },\n    \"sourceFiles\":[ \"./index.js\",\"./favicon.ico\",\"./www/**/**\"],\n\n    ...\n```\n\n\n## AutoUpdater\n\n\n* npm install electron-windows-inno-installer --save\n\n```javascript\n(electron app.js)\n\nconst autoupdater = require('electron-windows-inno-installer');\n\n//support http/https \nautoupdater.setFeedURL('http://demo/releases.json'); \n\n//release.json:\n//{\n  //\"name\": \"demo1.1.2\",\n  //\"version\": \"1.1.2\",\n  //\"date\": \"2016-08-09\",\n  //\"changelog\": \"upgrade \\n\\n\\n\\n\\n?\",\n  //\"updateURL\": \"http://10.8.3.31:8000/setup.exe\"\n//}\n\nautoupdater.on('update-downloaded',function(releasefileJSON,fullpath){\n  console.log('release notes: ',releasefileJSON.changelog)\n  console.log('write to :',fullpath);\n  autoupdater.quitAndInstall(); // Upgrade\n});\n\nautoupdater.on('update-not-available',function(){\n  console.log('INFO: Update not available');\n});\n\nautoupdater.on('update-available',function(releasefileJSON,next){\n  console.log('INFO: Update available',releasefileJSON);\n  next(); //will be download\n});\n\nautoupdater.on('progress',function(progress){\n  console.log(progress);  // download progress\n});\n\n```\n\n\n## workflow:\n\n`(some html/js/css)` -> `electron-prebuild`  -> `gulp-inno` -> `installer.exe`\n\n\n## event\n\n### Event:`checking-for-update`\n\nEmmitted when updater starts checking update, after 'checkForupdates'\n\n### Event: `update-not-available`\n\nEmmitted when update unavailable,usually the version lowwer current version\nor server response is '204'\n\n### Event: `update-available`\n\nReturns:\n* releasejson : `object`\n* next : `function`\n\nEmmitted when update available, you will be invoke `next` tell updater to download this installer\n\n### Event: `update-downloaded`\n\nReturns:\n* releasejson: `object`\n* fullpath: `string`\n\nEmmitted when the installer package is downloaded. from then on , you can execute `updater.quitAndinstall()`\nto quit current process and install installer.\n\n### Event `error`\n\nReturns:\n* err : `object`\n\nEmmitted when throw a error\n\n### Event `done`\n\nEmmitted when updater stopped work\n\n### Event `progress`\n\nReturns: progress\n\nthe downloaded progress\n\n\n## Methods\n\n### `setFeedURL`\n\nParams:\n* url : `string`\n\nset feed url\n\n### `checkForUpdates`\n\nParams:\n* isForce : `bool`\n\nif `isForce` is `true` , updater will do not check version \n\nstart updater , updater will feed a update object from feedurl,\nupdater will checking this object that has field `version`\n\n### `quitAndinstall`\n\nwhen the event of `update-downloade` emmitted, thie method will quit-and-install\nthe new installer\n\n## FAQ\n\n  There are some case in your building.\n\n* Download electron-v{version}-win32-x64.zip is slowly or failure\n\ndownload the file from `https://github.com/electron/electron/releases` or `https://npm.taobao.org/mirrors/electron/` to directory `.cache/{version}/{platform}`.\n\nexample `wget https://npm.taobao.org/mirrors/electron/1.3.1/electron-v1.3.1-win32-ia32.zip -P /you/project/.cache/v1.3.1/`\n\n## Contribution\n\nI'm very pleased with anyone contribute code, if you want to change `cli program` please fork the project . if you want to modify `module` you can fork `https://github.com/Qquanwei/electron-inno-auto-update/` this project and modify on `develop branch`.\n"
}