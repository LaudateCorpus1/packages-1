{
  "name": "qtouch",
  "author": {
    "name": "Superchauzette"
  },
  "email": "kevin.tillot@gmail.com",
  "description": "interaction with qtouch component : AT42QT1070 Touch Sensor IC",
  "contributors": [
    {
      "name": "Romain"
    }
  ],
  "repository": {
    "user": "superchauzette",
    "repo": "QtouchLib",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/superchauzette/QtouchLib/tarball/master",
    "clone_url": "https://github.com/superchauzette/QtouchLib",
    "https_url": "https://github.com/superchauzette/QtouchLib",
    "travis_url": "https://travis-ci.org/superchauzette/QtouchLib",
    "zip_url": "https://github.com/superchauzette/QtouchLib/archive/master.zip",
    "api_url": "https://api.github.com/repos/superchauzette/QtouchLib"
  },
  "keywords": [
    "qtouch",
    "AT42QT1070",
    "capteur capacitif",
    "IC",
    "Touch Sensor"
  ],
  "dependencies": {},
  "version": "0.0.3",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "license": "BSD",
  "dist": {
    "shasum": "21aac5f39ee2cc5f3341e5be1115b7296851a645",
    "tarball": "http://registry.npmjs.org/qtouch/-/qtouch-0.0.3.tgz"
  },
  "_npmVersion": "1.3.2",
  "versions": [
    {
      "number": "0.0.0",
      "date": "2014-04-12T20:05:22.918Z"
    },
    {
      "number": "0.0.1",
      "date": "2014-04-13T11:39:42.527Z"
    },
    {
      "number": "0.0.2",
      "date": "2014-04-20T21:21:06.425Z"
    },
    {
      "number": "0.0.3",
      "date": "2014-04-20T21:29:24.371Z"
    }
  ],
  "created": "2014-04-12T20:05:17.616Z",
  "modified": "2014-04-20T21:29:24.371Z",
  "lastPublisher": {
    "name": "superchauzette",
    "email": "kevin.tillot@gmail.com"
  },
  "owners": [
    {
      "name": "superchauzette",
      "email": "kevin.tillot@gmail.com"
    }
  ],
  "readme": "Qtouch : AT42QT1070 Touch Sensor IC\r\n======\r\n## In English\r\n\r\n### description: \r\nnodejs QTouch library for component AT42QT1070 using the I2C bus on a raspberry pi B. This component is a capacitive touch sensor that is used as a button. This component connects to the I2C bus raspberry pi series b.This library provides interfaces that can read the I2C bus component, to detect different pressing the sensor (see examples). \r\nTo run the component must: \r\n- Enable the I2C bus \r\n- Install the i2c-tools program \r\n- Download this librairy via npm and nodejs link to your project \r\n\r\nactivate the I2C bus: \r\nhttp://skpang.co.uk/blog/archives/575 \r\nhttp://innovelectronique.fr/2013/03/02/utilisation-du-bus-i2c-sur-raspberrypi/ \r\n \r\ninstall i2c-tools tool: \r\n~~~~ sh \r\nsudo apt-get install i2c-tool\r\n~~~~\r\n\r\nDownload this librairy via npm and nodejs link to your project \r\n~~~~ sh\r\nnpm install qtouch\r\n~~~~ \r\n\r\nand in your project: \r\n~~~~ js\r\nvar qtouch = require(\"qtouch\");\r\n~~~~ \r\n\r\n\r\n## En Francais\r\n\r\n###description:\r\nlibrairie nodejs pour le composant qtouch AT42QT1070 utilisant le bus I2C sur un raspberry pi B. Ce composant est un capteur tactile capacitif qui s'utilise comme un bouton. Ce composant se branche sur le bus I2C du raspberry pi serie B.Cette librairie met à disposition des interfaces qui permet de lire le bus I2C du composant, de detecter differents appui sur le capteur (voir les exemples).\r\nPour faire marcher le composant il faut :\r\n- activer le bus I2C\r\n- installer le programme i2c-tools\r\n- telecharger cette librairy via npm et la lier à votre projet nodejs\r\n\r\nactiver le bus I2C :\r\nhttp://skpang.co.uk/blog/archives/575 \r\nhttp://innovelectronique.fr/2013/03/02/utilisation-du-bus-i2c-sur-raspberrypi/ \r\n\r\ninstaller le programme i2c-tools :\r\n~~~~ sh \r\nsudo apt-get install i2c-tool\r\n~~~~\r\n\r\ntelecharger cette librairy via npm et la lier à votre projet nodejs\r\n~~~~ sh\r\nnpm install qtouch\r\n~~~~ \r\n\r\net dans votre projet :\r\n~~~~js\r\nvar qtouch = require(\"qtouch\");\r\n~~~~ \r\n\r\n\r\n# Usage\r\n\r\nexample on/off on KEY0 :\r\n\r\n~~~~js\r\nvar qtouch = require(\"qtouch\");\r\n\r\nvar KEY0 = 0;\r\nvar on = true;\r\n\r\nqtouch.onPressUp(KEY0 , function(){\r\n     if(on){\r\n\t\tconsole.log(\" Light On \")\r\n\t\ton = false;\r\n \t}else{\r\n \t\tconsole.log(\" Light Off \");\r\n \t\ton = true;\r\n \t}\r\n});\r\n~~~~ \r\n\r\nyou can have more example on example.js file\r\n\r\n```js\r\nvar qtouch = require(\"qtouch\");\r\n\r\nvar KEY0=0 , KEY1=1;\r\n\r\n//lecture en continu des valeurs sur bus I2C\r\nqtouch.read(function(dataI2C){\r\n   console.log(dataI2C);\r\n\r\n  // sur le maintien du bouton 1 (KEY1)\r\n  if(qtouch.binaryMask(dataI2C,1)){  // binary mask \r\n    console.log(\"Button 1 on\");\r\n  }else{\r\n    console.log(\"Button 1 off\");\r\n  }\r\n});\r\n\r\n\r\nqtouch.onChange(function(newVal, oldVal){\r\n    console.log(\"The Old Value is : \"+ oldVal);\r\n    console.log(\"The new Value is : \"+ newVal);\r\n\r\n    if(qtouch.binaryMask(oldVal,KEY0)){\r\n      console.log(\"le bontton 0 vient d'etre relacher\");\r\n    }\r\n\r\n    if(qtouch.binaryMask(newVal,KEY1)){\r\n      console.log(\"le button 1 vient d'etre pressé\");\r\n    }\r\n});\r\n``` \r\n\r\n"
}