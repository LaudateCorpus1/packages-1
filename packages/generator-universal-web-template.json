{
  "name": "generator-universal-web-template",
  "version": "1.5.0",
  "description": "Yeoman generator for an universal web proejct template - let you quickly set up a project using Handlebars, sass and ReactJS for front-end templating. It can be adopted with most modern CMS.",
  "keywords": [
    "yeoman-generator",
    "font-end",
    "framework",
    "web template",
    "Sass",
    "Handlebars",
    "ReactJs",
    "browser-sync"
  ],
  "scripts": {
    "postinstall": "node bin/packages-install.js",
    "test": "node bin/test.js"
  },
  "engines": {
    "node": ">=5.0.0",
    "npm": ">=3.3.0"
  },
  "files": [
    "app",
    "bin"
  ],
  "main": "app/index.js",
  "repository": {
    "user": "haolongfan",
    "repo": "universal-web-template",
    "host": "bitbucket.org",
    "branch": "master",
    "apiHost": "bitbucket.org/api/v3",
    "tarball_url": "https://bitbucket.org/api/v3/repos/haolongfan/universal-web-template/tarball/master",
    "clone_url": "https://bitbucket.org/haolongfan/universal-web-template",
    "https_url": "https://bitbucket.org/haolongfan/universal-web-template",
    "travis_url": "https://travis-ci.org/haolongfan/universal-web-template",
    "zip_url": "https://bitbucket.org/haolongfan/universal-web-template/archive/master.zip",
    "api_url": "https://bitbucket.org/api/v3/repos/haolongfan/universal-web-template"
  },
  "author": {
    "name": "Henry Fan"
  },
  "license": "MIT",
  "homepage": "https://www.npmjs.com/package/generator-universal-web-template",
  "dependencies": {
    "shelljs": "^0.6.0",
    "yeoman-generator": "^0.22.5",
    "simple-git": "^1.26.2"
  },
  "gitHead": "eb6392ad595b7a5c78f14e77463c25a55aa1cdd7",
  "_npmVersion": "3.8.0",
  "_nodeVersion": "5.6.0",
  "dist": {
    "shasum": "313298ada9c67d8a7940788402a0d2dd206ae74f",
    "tarball": "http://registry.npmjs.org/generator-universal-web-template/-/generator-universal-web-template-1.5.0.tgz"
  },
  "versions": [
    {
      "number": "0.1.0",
      "date": "2016-01-25T01:14:15.513Z"
    },
    {
      "number": "0.1.1",
      "date": "2016-01-25T01:55:32.088Z"
    },
    {
      "number": "0.1.2",
      "date": "2016-01-25T06:28:04.401Z"
    },
    {
      "number": "1.0.3",
      "date": "2016-01-27T23:10:48.998Z"
    },
    {
      "number": "1.0.4",
      "date": "2016-01-27T23:13:29.623Z"
    },
    {
      "number": "1.0.5",
      "date": "2016-01-28T00:49:10.182Z"
    },
    {
      "number": "1.0.8",
      "date": "2016-01-29T01:10:23.276Z"
    },
    {
      "number": "1.0.9",
      "date": "2016-01-29T03:25:51.950Z"
    },
    {
      "number": "1.1.0",
      "date": "2016-01-29T06:01:21.164Z"
    },
    {
      "number": "1.1.1",
      "date": "2016-01-31T22:32:16.974Z"
    },
    {
      "number": "1.1.2",
      "date": "2016-01-31T23:06:04.510Z"
    },
    {
      "number": "1.1.3",
      "date": "2016-01-31T23:32:05.482Z"
    },
    {
      "number": "1.2.0",
      "date": "2016-02-01T06:03:56.569Z"
    },
    {
      "number": "1.2.1",
      "date": "2016-02-02T03:22:01.079Z"
    },
    {
      "number": "1.2.2",
      "date": "2016-02-02T05:11:21.871Z"
    },
    {
      "number": "1.2.3",
      "date": "2016-02-03T01:35:46.770Z"
    },
    {
      "number": "1.2.4",
      "date": "2016-02-03T02:34:13.493Z"
    },
    {
      "number": "1.2.5",
      "date": "2016-02-03T03:19:56.486Z"
    },
    {
      "number": "1.3.0",
      "date": "2016-02-03T03:45:29.829Z"
    },
    {
      "number": "1.3.1",
      "date": "2016-02-03T05:38:08.740Z"
    },
    {
      "number": "1.3.2",
      "date": "2016-02-03T06:24:59.752Z"
    },
    {
      "number": "1.3.3",
      "date": "2016-02-04T06:45:59.612Z"
    },
    {
      "number": "1.3.4",
      "date": "2016-02-05T05:57:51.794Z"
    },
    {
      "number": "1.3.5",
      "date": "2016-03-01T05:30:02.749Z"
    },
    {
      "number": "1.3.6",
      "date": "2016-03-01T05:50:06.609Z"
    },
    {
      "number": "1.3.7",
      "date": "2016-03-01T05:53:11.388Z"
    },
    {
      "number": "1.3.8",
      "date": "2016-03-01T05:58:34.215Z"
    },
    {
      "number": "1.3.9",
      "date": "2016-03-01T06:05:39.227Z"
    },
    {
      "number": "1.3.10",
      "date": "2016-03-01T06:07:40.468Z"
    },
    {
      "number": "1.3.11",
      "date": "2016-03-01T06:10:34.597Z"
    },
    {
      "number": "1.3.12",
      "date": "2016-03-01T06:32:54.255Z"
    },
    {
      "number": "1.3.13",
      "date": "2016-03-01T06:36:15.984Z"
    },
    {
      "number": "1.3.14",
      "date": "2016-03-01T06:38:14.456Z"
    },
    {
      "number": "1.3.15",
      "date": "2016-03-01T06:40:14.521Z"
    },
    {
      "number": "1.3.16",
      "date": "2016-03-01T06:41:18.924Z"
    },
    {
      "number": "1.3.17",
      "date": "2016-03-01T11:27:02.225Z"
    },
    {
      "number": "1.3.18",
      "date": "2016-03-01T11:30:05.629Z"
    },
    {
      "number": "1.3.19",
      "date": "2016-03-01T11:51:22.458Z"
    },
    {
      "number": "1.3.20",
      "date": "2016-03-01T11:59:40.674Z"
    },
    {
      "number": "1.3.21",
      "date": "2016-03-01T12:09:00.361Z"
    },
    {
      "number": "1.3.22",
      "date": "2016-03-01T12:26:01.734Z"
    },
    {
      "number": "1.3.24",
      "date": "2016-03-01T12:27:16.410Z"
    },
    {
      "number": "1.3.25",
      "date": "2016-03-01T12:28:47.120Z"
    },
    {
      "number": "1.3.26",
      "date": "2016-03-01T12:34:58.294Z"
    },
    {
      "number": "1.3.27",
      "date": "2016-03-01T12:40:09.846Z"
    },
    {
      "number": "1.3.28",
      "date": "2016-03-01T12:49:45.227Z"
    },
    {
      "number": "1.3.29",
      "date": "2016-03-01T23:19:22.989Z"
    },
    {
      "number": "1.3.30",
      "date": "2016-03-01T23:28:55.003Z"
    },
    {
      "number": "1.3.31",
      "date": "2016-03-01T23:36:00.036Z"
    },
    {
      "number": "1.3.32",
      "date": "2016-03-02T00:52:37.734Z"
    },
    {
      "number": "1.3.33",
      "date": "2016-03-02T01:13:16.629Z"
    },
    {
      "number": "1.3.35",
      "date": "2016-03-02T03:58:11.138Z"
    },
    {
      "number": "1.3.36",
      "date": "2016-03-02T04:06:12.080Z"
    },
    {
      "number": "1.3.37",
      "date": "2016-03-02T04:47:06.314Z"
    },
    {
      "number": "1.4.1",
      "date": "2016-03-02T10:39:22.207Z"
    },
    {
      "number": "1.5.0",
      "date": "2016-06-07T01:02:38.588Z"
    }
  ],
  "created": "2016-01-25T01:14:15.513Z",
  "modified": "2016-06-07T01:02:38.588Z",
  "lastPublisher": {
    "name": "henryfan",
    "email": "FHL-VP@hotmail.com"
  },
  "owners": [
    {
      "name": "henryfan",
      "email": "FHL-VP@hotmail.com"
    }
  ],
  "readme": "[![Build status][ci-image]][ci-url]\n\n# Universal Web Template\nYeoman generator for an universal web project template - let you quickly set up a project using Handlebars, sass and ReactJS for front-end templating. It can be adopted with most modern CMS.\n\n## Directory Layout\n\n```\n.\n├── /build/                     # The folder for compiled output\n├── /gulp/                      # All gulp tasks\n├── /node_modules/              # 3rd-party libraries and utilities\n├── /public/                    # The folder for template output\n├── /release/                   # The folder for app package\n├── /src/                       # The source code of the application\n│   ├── /favicons/              # All favicons generated\n│   ├── /fonts/                 # TTF/OTF font files\n│   ├── /images/                # All images for the template\n│   ├── /misc/                  # Some files which will be deployed to the root of CMS\n│   ├── /pages/                 # HTML template files and data\n│   ├── /sass/                  # Sass files\n│   ├── /scripts/               # javascript files and ReactJs components\n├── /web/                       # The folder for CMS project\n│── gulpfile.js                 # The list of core gulp tasks\n│── package.json                # The list of 3rd party libraries and utilities\n```\n\n## Features\n\n### HTML\n- [Handlebars Javascript Template](http://handlebarsjs.com/) is using HTML with JavaScript-based features embedded\n- Minify HTML code with [Gulp Htmlmin](https://www.npmjs.com/package/gulp-htmlmin)\n- Support to generate static HTML pages\n\n### CSS\n- Use [Sass](http://sass-lang.com/) CSS extension language\n- Map compiled CSS to source stylesheets with source maps with [Gulp Sourcemaps](https://www.npmjs.com/package/gulp-sourcemaps)\n- CSS Autoprefixing using [Gulp Autoprefixer](https://www.npmjs.com/package/gulp-autoprefixer)\n- Minify CSS file with [Gulp Cssnano](https://www.npmjs.com/package/gulp-cssnano)\n- Support Bootstrap, flexbox, Reponsive Design\n- Allow to create multiple css themes\n\n### Javascript\n- [ReactJS](https://facebook.github.io/react/) provides a flexible and efficient view coming with [Gulp React Render](https://www.npmjs.com/package/gulp-react-render)\n- Flexible ReactJS rendering via React JSON array and React components\n- Process javascript file with ESLint using [Gulp Eslint](https://www.npmjs.com/package/gulp-eslint)\n- Generate custom Modernizr builds to improve browser compatibility with [Gulp Modernizr](https://www.npmjs.com/package/gulp-modernizr)  \n- Support next generation Javascript ES6 code with [Gulp Babel](https://www.npmjs.com/package/gulp-babel)\n- Obfuscate project plugins with [Gulp Obfuscator](https://www.npmjs.com/package/gulp-obfuscator)\n- Support to build project plugins for external sites to import\n\n### Font\n- Generate web fonts from TTF/OTF font files using [Gulp Fontgen](https://www.npmjs.com/package/gulp-fontgen)\n- Create icon fonts from SVG icons with [Gulp Iconfont](https://www.npmjs.com/package/gulp-iconfont) and generate css for icon fonts with [Gulp Iconfont Css](https://www.npmjs.com/package/gulp-iconfont-css)\n- Provide scss template for custom font\n\n### Favicons\n- Generate a range of favicons for web site, android, apple, windows and social shares with [Gulp Favicons](https://www.npmjs.com/package/gulp-favicons)\n\n### Images\n- Minify and optimize PNG, JPEG and GIF images with [Gulp Image Optimization](https://www.npmjs.com/package/gulp-image-optimization)\n\n### Audit & Testing\n- Support to run audit on the project via [Gulp Webstandards](https://www.npmjs.com/package/gulp-webstandards)\n- Able to run Qunit test on pages. Through setting **test_enabled** as true, Qunit will run on each page.\n\n### Building System\n- Support to enable/disable each module from **package.json** configuration file.\n- [Yeoman](http://yeoman.io/) is a generic scaffolding system allowing the creation any kind of app. It allows for rapidly getting started on new projects and streamlines the maintenance of existing projects.\n- Using [Gulp](http://gulpjs.com/) streaming building system to render CSS, javascript and HTML pages. Configuration file is also provided, as you can update settings via the **config.js** file.\n- Live server to run template and support browser syncing [Browser Sync](https://www.npmjs.com/package/browser-sync)\n- Build cross platform desktop apps with web technologies using [Electron](http://electron.atom.io/)\n- Place miscellaneous items in **src/misc**. e.g. .htaccess, web configure and Docker files. They will be copied to release.\n\n\n## Getting Started\n\n### Requirements\n- Mac OS X, Windows, or Linux\n- [Node.js](https://nodejs.org/) v5.0 or newer\n- `npm` v3.3 or newer (new to [npm](https://docs.npmjs.com/)?)\n\n### 1. Get the template via Yeoman generator\nYou can start the latest version of Universal Web Template on your local machine by running:\n\n```shell\nsudo npm install generator-universal-web-template\nsudo yo universal-web-template\n```\n\nThis command will automatically install both run-time project dependencies and developer tools listed in `package.json` file. If the project dependencies haven't been installed correctly, please run the following command:\n\n```shell\n$ npm install -g npm-check-updates\n$ brew install fontforge ttfautohint ttf2eot batik\n$ sudo npm install\n```\n\n\n### 2. Run Template\n\n```shell\n$ npm start\n```\n\nor\n\n```shell\n$ gulp run\n```\n\nThis command will build the app from the source files (`/src`) into the dev output `/dist` folder. As soon as the initial build completes, it will start the Node.js server (`node build/server.js`) and [Browsersync](https://browsersync.io/) on top of it.\n\nNow you can see your web app in a browser, on mobile devices and start hacking. Whenever you modify any of the source files inside the `/src` folder, it will recompile the app on the fly and refresh all the connected browsers.\n\n### 3. Build Template\n\n```shell\n$ gulp\n```\n\nor\n\n```shell\n$ gulp build\n```\n\nThese two command will build the app from the source files (`/src`) into the dev output `/dist` folder.\n\n### 4. Watch Template\n\n```shell\n$ gulp watch\n```\n\nThis command will watch any code change from the source files (`/src`) and re-build the app once modification happens.\n\n### 5. Deploy Template\n\n```shell\n$ gulp deploy\n```\n\nThis command will generate final files to the public folder (`/public`) for template publishing and also your CMS folder (`/web`) for CMS integration. If you want to change the destination of CMS folder, please update 'cmsDir' in `/gulp/config.js` file.\n\n### 6. Test Template\n\n```shell\n$ gulp test\n```\n\nThis command will run Qunit testing based on test scripts which are generated from test script folder (`/src/scripts/tests`).  \n\n\n### 6. Release Project as Executables\n\n```shell\n$ gulp release\n```\n\nThis command will generate OS-specific bundles (.app and .exe) for the web app. Supports building Windows, Linux or Mac executables.\n\n\n### 7. Clean All Compiled Files\n\n```shell\n$ gulp clean\n```\n\nThis command will clean all files from build folder (`/dist`), public folder (`/public`) and CMS folder (`/web`).\n\n\n\n### How to Update\nIf you need to keep your project up to date with the recent changes, you can always run Yeoman update via:\n\n```shell\n$ npm install -g generator-universal-web-template\n```\n\nIf you want to update packages, please run:\n```shell\n$ sudo ncu -u\n$ npm update\n```\n\n## Issues and New Features\n\nIf you found any issues or hope to add new features in, please record them in [here](https://bitbucket.org/haolongfan/universal-web-template/issues?status=new&status=open). I'll response you as soon as possible. Many thanks!\n\n\n## License\nCopyright (c) 2016 Haolong Fan Licensed under the MIT license.\n\n[ci-image]: https://travis-ci.org/bahmutov/qunit-promises.png?branch=master\n[ci-url]: https://bitbucket.org/haolongfan/universal-web-template\n"
}