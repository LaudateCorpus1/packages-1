{
  "name": "bel",
  "version": "4.5.0",
  "description": "A simple extension to native elements",
  "main": "index.js",
  "scripts": {
    "start": "wzrd test/index.js:bundle.js",
    "test": "standard && node test/server.js && browserify test/index.js | testron",
    "bench": "wzrd bench/index.js:bundle.js"
  },
  "repository": {
    "user": "shama",
    "repo": "bel",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/shama/bel/tarball/master",
    "clone_url": "https://github.com/shama/bel",
    "https_url": "https://github.com/shama/bel",
    "travis_url": "https://travis-ci.org/shama/bel",
    "zip_url": "https://github.com/shama/bel/archive/master.zip",
    "api_url": "https://api.github.com/repos/shama/bel"
  },
  "keywords": [
    "virtual-dom",
    "element",
    "diffhtml"
  ],
  "files": [
    "index.js",
    "create.js"
  ],
  "author": {
    "name": "Kyle Robinson Young",
    "email": "kyle@dontkry.com",
    "url": "http://dontkry.com"
  },
  "license": "MIT",
  "homepage": "https://github.com/shama/bel",
  "dependencies": {
    "global": "^4.3.0",
    "hyperx": "^2.0.2",
    "on-load": "^3.2.0"
  },
  "devDependencies": {
    "browser-process-hrtime": "^0.1.2",
    "browserify": "^13.0.0",
    "electron-prebuilt": "^0.36.9",
    "morphdom": "^2.1.1",
    "standard": "^8.3.0",
    "tape": "^4.6.0",
    "testron": "^1.2.0",
    "wzrd": "^1.4.0"
  },
  "gitHead": "180fbfa935b2f002d1d4d7ea963351d8e8aa5b2c",
  "_npmVersion": "2.15.9",
  "_nodeVersion": "4.6.0",
  "dist": {
    "shasum": "c269f674a3d07bb8df8fb74551a79108c71fd9aa",
    "tarball": "http://registry.npmjs.org/bel/-/bel-4.5.0.tgz"
  },
  "stars": 8,
  "versions": [
    {
      "number": "1.0.0",
      "date": "2016-02-27T05:31:23.554Z"
    },
    {
      "number": "2.0.0",
      "date": "2016-03-02T20:45:22.578Z"
    },
    {
      "number": "3.0.0",
      "date": "2016-03-07T17:16:56.082Z"
    },
    {
      "number": "4.0.0",
      "date": "2016-03-11T20:32:45.039Z"
    },
    {
      "number": "4.1.0",
      "date": "2016-03-14T16:26:18.410Z"
    },
    {
      "number": "4.2.0",
      "date": "2016-03-16T16:16:50.934Z"
    },
    {
      "number": "4.3.0",
      "date": "2016-03-18T15:41:44.828Z"
    },
    {
      "number": "4.3.1",
      "date": "2016-03-30T02:34:04.056Z"
    },
    {
      "number": "4.3.2",
      "date": "2016-06-19T06:13:26.364Z"
    },
    {
      "number": "4.4.0",
      "date": "2016-06-30T21:22:28.676Z"
    },
    {
      "number": "4.4.1",
      "date": "2016-06-30T22:19:37.201Z"
    },
    {
      "number": "4.4.2",
      "date": "2016-07-06T07:04:24.013Z"
    },
    {
      "number": "4.4.3",
      "date": "2016-07-10T18:00:53.728Z"
    },
    {
      "number": "4.5.0",
      "date": "2016-10-02T19:05:20.311Z"
    }
  ],
  "created": "2016-02-27T05:31:23.554Z",
  "modified": "2016-10-24T15:03:09.376Z",
  "lastPublisher": {
    "name": "shama",
    "email": "kyle@dontkry.com"
  },
  "owners": [
    {
      "name": "chromakode",
      "email": "npm@chromakode.com"
    },
    {
      "name": "shama",
      "email": "kyle@dontkry.com"
    },
    {
      "name": "yoshuawuyts",
      "email": "i@yoshuawuyts.com"
    }
  ],
  "readme": "# [bel](https://en.wikipedia.org/wiki/Bel_(mythology))\r\n\r\n[![NPM version][npm-image]][npm-url]\r\n[![build status][travis-image]][travis-url]\r\n[![Downloads][downloads-image]][downloads-url]\r\n[![js-standard-style][standard-image]][standard-url]\r\n![experimental][experimental-image]\r\n\r\nA simple library for composable DOM elements using [tagged template strings](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals).\r\n\r\nIf you're looking for a higher level front end framework, try\r\n[yo-yo](https://github.com/maxogden/yo-yo). Or even higher than that, try\r\n[choo](https://github.com/yoshuawuyts/choo).\r\n\r\n## usage\r\n\r\nFor a more in depth tutorial on getting started, please [check out the wiki](https://github.com/shama/bel/wiki).\r\n\r\n## note\r\n\r\nPlease use [yo-yoify](https://github.com/shama/yo-yoify) which will transform any `Function.caller` into plain strings until an alternative solution to identify element creators is implemented.\r\n\r\nyo-yoify can resolve the error like below:\r\n\r\n`TypeError: Function.caller used to retrieve strict caller`\r\n\r\nor\r\n\r\n`TypeError: access to strict mode caller function is censored`\r\n\r\n\r\n### A Simple Element\r\n\r\nCreate an element:\r\n\r\n```js\r\n// list.js\r\nvar bel = require('bel')\r\n\r\nmodule.exports = function (items) {\r\n  return bel`<ul>\r\n    ${items.map(function (item) {\r\n      return bel`<li>${item}</li>`\r\n    })}\r\n  </ul>`\r\n}\r\n```\r\n\r\nThen pass data to it and add to the DOM:\r\n\r\n```js\r\n// app.js\r\nvar createList = require('./list.js')\r\nvar list = createList([\r\n  'grizzly',\r\n  'polar',\r\n  'brown'\r\n])\r\ndocument.body.appendChild(list)\r\n```\r\n\r\n### Data Down, Actions Up\r\n\r\n```js\r\n// list.js\r\nvar bel = require('bel')\r\n\r\n// The DOM is built by the data passed in\r\nmodule.exports = function (items, onselected) {\r\n  function render () {\r\n    return bel`<ul>\r\n    ${items.map(function (item) {\r\n      return bel`<li>${button(item.id, item.label)}</li>`\r\n    })}\r\n    </ul>`\r\n  }\r\n  function button (id, label) {\r\n    return bel`<button onclick=${function () {\r\n      // Then action gets sent up\r\n      onselected(id)\r\n    }}>${label}</button>`\r\n  }\r\n  var element = render()\r\n  return element\r\n}\r\n```\r\n\r\n```js\r\n// app.js\r\nvar bel = require('bel')\r\nvar morphdom = require('morphdom')\r\nvar list = require('./list.js')\r\n\r\nmodule.exports = function (bears) {\r\n  function onselected (id) {\r\n    // When a bear is selected, rerender with the newly selected item\r\n    // This will use DOM diffing to render, sending the data back down again\r\n    morphdom(element, render(id))\r\n  }\r\n  function render (selected) {\r\n    return bel`<div className=\"app\">\r\n      <h1>Selected: ${selected}</h1>\r\n      ${list(bears, onselected)}\r\n    </div>`\r\n  }\r\n  // On first render, we haven't selected anything\r\n  var element = render('none')\r\n  return element\r\n}\r\n```\r\n\r\n### lifecycle events\r\n\r\nUse the `onload` and `onunload` properties to call a function when the element\r\nis inserted and removed from the DOM respectively.\r\n\r\n```js\r\nvar bel = require('bel')\r\n\r\nvar modal = bel`<div onload=${function (element) {\r\n  console.log('Hello DOM!')\r\n}} onunload=${function (element) {\r\n  console.log('Goodbye DOM!')\r\n}}>hello!</div>`\r\n\r\ndocument.body.appendChild(modal)\r\ndocument.body.removeChild(modal)\r\n```\r\n\r\n### use with/without [hyperx](https://www.npmjs.com/package/hyperx)\r\n\r\n`hyperx` is built into `bel` but there may be times when you wish to use your\r\nown version or implementation of `hyperx`. Or if you prefer to create elements\r\nusing `bel` without using tagged template literals:\r\n\r\n```js\r\nvar createElement = require('bel').createElement\r\nvar hyperx = require('hyperx')\r\nvar bel = hyperx(createElement)\r\n\r\nvar element = bel`<div class=\"heading\">Hello!</div>`\r\n\r\n// ...\r\n\r\nvar sameElement = createElement('div', { className: 'heading' }, ['Hello!'])\r\n```\r\n\r\n## security\r\n\r\nbel sets attributes with `element.setAttribute()` and `element.setAttributeNS()`, and creates text nodes with `document.createTextNode()`.  These approaches mitigate some [Cross-Site Scripting (XSS)](https://www.owasp.org/index.php/Cross-site_Scripting_%28XSS%29) attacks.  You should still code carefully every time you put content from users in the DOM.\r\n\r\n## similar projects\r\n\r\n* [vel](https://github.com/yoshuawuyts/vel)  \r\n  minimal virtual-dom library\r\n* [base-element](https://github.com/shama/base-element)  \r\n  An element authoring library for creating standalone and performant elements\r\n* [virtual-dom](https://github.com/Matt-Esch/virtual-dom)  \r\n  A Virtual DOM and diffing algorithm\r\n* [hyperscript](https://github.com/dominictarr/hyperscript)  \r\n  Create HyperText with JavaScript.\r\n\r\n# license\r\n(c) 2016 Kyle Robinson Young. MIT License\r\n\r\n[npm-image]: https://img.shields.io/npm/v/bel.svg?style=flat-square\r\n[npm-url]: https://npmjs.org/package/bel\r\n[travis-image]: https://img.shields.io/travis/shama/bel/master.svg?style=flat-square\r\n[travis-url]: https://travis-ci.org/shama/bel\r\n[downloads-image]: http://img.shields.io/npm/dm/vel.svg?style=flat-square\r\n[downloads-url]: https://npmjs.org/package/bel\r\n[standard-image]: https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square\r\n[standard-url]: https://github.com/feross/standard\r\n[experimental-image]: https://img.shields.io/badge/stability-experimental-orange.svg?style=flat-square\r\n"
}