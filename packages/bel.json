{
  "name": "bel",
  "version": "4.4.3",
  "description": "A simple extension to native elements",
  "main": "index.js",
  "scripts": {
    "start": "wzrd test/index.js:bundle.js",
    "test": "standard && node test/server.js && browserify test/index.js | testron",
    "bench": "wzrd bench/index.js:bundle.js"
  },
  "repository": {
    "user": "shama",
    "repo": "bel",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/shama/bel/tarball/master",
    "clone_url": "https://github.com/shama/bel",
    "https_url": "https://github.com/shama/bel",
    "travis_url": "https://travis-ci.org/shama/bel",
    "zip_url": "https://github.com/shama/bel/archive/master.zip",
    "api_url": "https://api.github.com/repos/shama/bel"
  },
  "keywords": [
    "virtual-dom",
    "element",
    "diffhtml"
  ],
  "files": [
    "index.js",
    "create.js"
  ],
  "author": {
    "name": "Kyle Robinson Young",
    "email": "kyle@dontkry.com",
    "url": "http://dontkry.com"
  },
  "license": "MIT",
  "homepage": "https://github.com/shama/bel",
  "dependencies": {
    "global": "^4.3.0",
    "hyperx": "^2.0.2",
    "on-load": "^3.2.0"
  },
  "devDependencies": {
    "browser-process-hrtime": "^0.1.2",
    "browserify": "^13.0.0",
    "electron-prebuilt": "^0.36.9",
    "morphdom": "^1.4.5",
    "standard": "^6.0.7",
    "tape": "^4.6.0",
    "testron": "^1.2.0",
    "wzrd": "^1.4.0"
  },
  "gitHead": "a74afb918a09000ff2713942ebd98966af109429",
  "_npmVersion": "2.15.2",
  "_nodeVersion": "4.4.1",
  "dist": {
    "shasum": "17ecb8164640738934c5bf77981d177bd44a7733",
    "tarball": "http://registry.npmjs.org/bel/-/bel-4.4.3.tgz"
  },
  "stars": 4,
  "versions": [
    {
      "number": "1.0.0",
      "date": "2016-02-27T05:31:23.554Z"
    },
    {
      "number": "2.0.0",
      "date": "2016-03-02T20:45:22.578Z"
    },
    {
      "number": "3.0.0",
      "date": "2016-03-07T17:16:56.082Z"
    },
    {
      "number": "4.0.0",
      "date": "2016-03-11T20:32:45.039Z"
    },
    {
      "number": "4.1.0",
      "date": "2016-03-14T16:26:18.410Z"
    },
    {
      "number": "4.2.0",
      "date": "2016-03-16T16:16:50.934Z"
    },
    {
      "number": "4.3.0",
      "date": "2016-03-18T15:41:44.828Z"
    },
    {
      "number": "4.3.1",
      "date": "2016-03-30T02:34:04.056Z"
    },
    {
      "number": "4.3.2",
      "date": "2016-06-19T06:13:26.364Z"
    },
    {
      "number": "4.4.0",
      "date": "2016-06-30T21:22:28.676Z"
    },
    {
      "number": "4.4.1",
      "date": "2016-06-30T22:19:37.201Z"
    },
    {
      "number": "4.4.2",
      "date": "2016-07-06T07:04:24.013Z"
    },
    {
      "number": "4.4.3",
      "date": "2016-07-10T18:00:53.728Z"
    }
  ],
  "created": "2016-02-27T05:31:23.554Z",
  "modified": "2016-07-10T18:00:53.728Z",
  "lastPublisher": {
    "name": "shama",
    "email": "kyle@dontkry.com"
  },
  "owners": [
    {
      "name": "chromakode",
      "email": "npm@chromakode.com"
    },
    {
      "name": "shama",
      "email": "kyle@dontkry.com"
    },
    {
      "name": "yoshuawuyts",
      "email": "i@yoshuawuyts.com"
    }
  ],
  "readme": "# [bel](https://en.wikipedia.org/wiki/Bel_(mythology))\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Downloads][downloads-image]][downloads-url]\n[![js-standard-style][standard-image]][standard-url]\n![experimental][experimental-image]\n\nA simple library for composable DOM elements using [tagged template strings](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals).\n\nIf you're looking for a higher level front end framework, try\n[yo-yo](https://github.com/maxogden/yo-yo). Or even higher than that, try\n[choo](https://github.com/yoshuawuyts/choo).\n\n## usage\n\nFor a more in depth tutorial on getting started, please [check out the wiki](https://github.com/shama/bel/wiki).\n\n### A Simple Element\n\nCreate an element:\n\n```js\n// list.js\nvar bel = require('bel')\n\nmodule.exports = function (items) {\n  return bel`<ul>\n    ${items.map(function (item) {\n      return bel`<li>${item}</li>`\n    })}\n  </ul>`\n}\n```\n\nThen pass data to it and add to the DOM:\n\n```js\n// app.js\nvar createList = require('./list.js')\nvar list = createList([\n  'grizzly',\n  'polar',\n  'brown'\n])\ndocument.body.appendChild(list)\n```\n\n### Data Down, Actions Up\n\n```js\n// list.js\nvar bel = require('bel')\n\n// The DOM is built by the data passed in\nmodule.exports = function (items, onselected) {\n  function render () {\n    return bel`<ul>\n    ${items.map(function (item) {\n      return bel`<li>${button(item.id, item.label)}</li>`\n    })}\n    </ul>`\n  }\n  function button (id, label) {\n    return bel`<button onclick=${function () {\n      // Then action gets sent up\n      onselected(id)\n    }}>${label}</button>`\n  }\n  var element = render()\n  return element\n}\n```\n\n```js\n// app.js\nvar bel = require('bel')\nvar morphdom = require('morphdom')\nvar list = require('./list.js')\n\nmodule.exports = function (bears) {\n  function onselected (id) {\n    // When a bear is selected, rerender with the newly selected item\n    // This will use DOM diffing to render, sending the data back down again\n    morphdom(element, render(id))\n  }\n  function render (selected) {\n    return bel`<div className=\"app\">\n      <h1>Selected: ${selected}</h1>\n      ${list(bears, onselected)}\n    </div>`\n  }\n  // On first render, we haven't selected anything\n  var element = render('none')\n  return element\n}\n```\n\n### lifecycle events\n\nUse the `onload` and `onunload` properties to call a function when the element\nis inserted and removed from the DOM respectively.\n\n```js\nvar bel = require('bel')\n\nvar modal = bel`<div onload=${function (element) {\n  console.log('Hello DOM!')\n}} onunload=${function (element) {\n  console.log('Goodbye DOM!')\n}}>hello!</div>`\n\ndocument.body.appendChild(modal)\ndocument.body.removeChild(modal)\n```\n\n### use with/without [hyperx](https://www.npmjs.com/package/hyperx)\n\n`hyperx` is built into `bel` but there may be times when you wish to use your\nown version or implementation of `hyperx`. Or if you prefer to create elements\nusing `bel` without using tagged template literals:\n\n```js\nvar createElement = require('bel').createElement\nvar hyperx = require('hyperx')\nvar bel = hyperx(createElement)\n\nvar element = bel`<div class=\"heading\">Hello!</div>`\n\n// ...\n\nvar sameElement = createElement('div', { className: 'heading' }, ['Hello!'])\n```\n\n## similar projects\n\n* [vel](https://github.com/yoshuawuyts/vel)  \n  minimal virtual-dom library\n* [base-element](https://github.com/shama/base-element)  \n  An element authoring library for creating standalone and performant elements\n* [virtual-dom](https://github.com/Matt-Esch/virtual-dom)  \n  A Virtual DOM and diffing algorithm\n* [hyperscript](https://github.com/dominictarr/hyperscript)  \n  Create HyperText with JavaScript.\n\n# license\n(c) 2016 Kyle Robinson Young. MIT License\n\n[npm-image]: https://img.shields.io/npm/v/bel.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/bel\n[travis-image]: https://img.shields.io/travis/shama/bel/master.svg?style=flat-square\n[travis-url]: https://travis-ci.org/shama/bel\n[downloads-image]: http://img.shields.io/npm/dm/vel.svg?style=flat-square\n[downloads-url]: https://npmjs.org/package/bel\n[standard-image]: https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square\n[standard-url]: https://github.com/feross/standard\n[experimental-image]: https://img.shields.io/badge/stability-experimental-orange.svg?style=flat-square\n"
}