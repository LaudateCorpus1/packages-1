{
  "name": "karma-electron",
  "description": "Karma launcher and preprocessor for Electron",
  "version": "4.0.0",
  "homepage": "https://github.com/twolfson/karma-electron",
  "author": {
    "name": "Todd Wolfson",
    "email": "todd@twolfson.com",
    "url": "http://twolfson.com/"
  },
  "repository": {
    "user": "twolfson",
    "repo": "karma-electron",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/twolfson/karma-electron/tarball/master",
    "clone_url": "https://github.com/twolfson/karma-electron",
    "https_url": "https://github.com/twolfson/karma-electron",
    "travis_url": "https://travis-ci.org/twolfson/karma-electron",
    "zip_url": "https://github.com/twolfson/karma-electron/archive/master.zip",
    "api_url": "https://api.github.com/repos/twolfson/karma-electron"
  },
  "main": "lib/index",
  "engines": {
    "node": ">= 0.10.0"
  },
  "license": "Unlicense",
  "scripts": {
    "precheck": "twolfson-style precheck lib/ test/",
    "lint": "twolfson-style lint lib/ test/",
    "test": "npm run test-karma-all && npm run lint",
    "test-karma-all": "npm run test-karma-single-run && npm run test-karma-failure && npm run test-karma-uncaught-exception && npm run test-karma-karma && npm run test-karma-phantomjs && npm run test-karma-eof-comment && npm run test-karma-source-map",
    "test-karma-continuous": "karma start test/integration-test/karma.conf.js --no-single-run",
    "test-karma-eof-comment": "cross-env TEST_TYPE=EOF_COMMENT karma start test/integration-test/karma.conf.js --single-run",
    "test-karma-karma-comment": "# DEV: We run `test-karma-karma` twice to verify no user-data-dir is leaking",
    "test-karma-karma": "cross-env TEST_TYPE=KARMA karma start test/integration-test/karma.conf.js --single-run && cross-env TEST_TYPE=KARMA karma start test/integration-test/karma.conf.js --single-run",
    "test-karma-failure": "node bin/verify-failure.js TEST_TYPE=FAILURE karma start test/integration-test/karma.conf.js --single-run",
    "test-karma-phantomjs": "cross-env TEST_TYPE=PHANTOMJS karma start test/integration-test/karma.conf.js --single-run --browsers PhantomJS",
    "test-karma-single-run": "karma start test/integration-test/karma.conf.js --single-run",
    "test-karma-source-map": "cross-env TEST_TYPE=SOURCE_MAP karma start test/integration-test/karma.conf.js --single-run",
    "test-karma-uncaught-exception": "node bin/verify-failure.js TEST_TYPE=UNCAUGHT_EXCEPTION karma start test/integration-test/karma.conf.js --single-run",
    "test-windows": "npm run test-karma-all"
  },
  "dependencies": {
    "commander": "~2.9.0",
    "convert-source-map": "~1.2.0",
    "js-string-escape": "~1.0.0",
    "minstache": "~1.2.0",
    "xtend": "~4.0.1"
  },
  "devDependencies": {
    "collections": "~3.0.0",
    "cross-env": "~1.0.7",
    "electron-prebuilt": "~0.37.4",
    "foundry": "~4.0.3",
    "foundry-release-git": "~2.0.2",
    "foundry-release-npm": "~2.0.2",
    "jscs": "~1.7.3",
    "jshint": "~2.5.10",
    "karma": "~1.1.0",
    "karma-mocha": "~0.2.2",
    "karma-phantomjs-launcher": "~1.0.0",
    "mocha": "~1.11.0",
    "phantomjs-prebuilt": "~2.1.5",
    "request": "~2.72.0",
    "twolfson-style": "~1.6.0"
  },
  "keywords": [
    "karma-plugin",
    "karma-launcher",
    "karma-preprocessor",
    "electron"
  ],
  "foundry": {
    "releaseCommands": [
      "foundry-release-git",
      "foundry-release-npm"
    ]
  },
  "gitHead": "68db2e81d078a88134c0faad87a1b5fea6223823",
  "_npmVersion": "2.15.3",
  "_nodeVersion": "4.4.3",
  "dist": {
    "shasum": "67780b1d1daed012b9bc9704fc89d84a4430269a",
    "tarball": "http://registry.npmjs.org/karma-electron/-/karma-electron-4.0.0.tgz"
  },
  "versions": [
    {
      "number": "2.0.2",
      "date": "2016-03-05T03:59:14.601Z"
    },
    {
      "number": "3.0.0",
      "date": "2016-03-07T00:58:49.101Z"
    },
    {
      "number": "3.0.1",
      "date": "2016-03-09T05:55:00.856Z"
    },
    {
      "number": "3.0.2",
      "date": "2016-03-11T19:56:48.198Z"
    },
    {
      "number": "3.0.3",
      "date": "2016-03-11T20:05:38.416Z"
    },
    {
      "number": "3.0.4",
      "date": "2016-04-07T17:46:56.787Z"
    },
    {
      "number": "3.0.5",
      "date": "2016-04-07T17:48:12.202Z"
    },
    {
      "number": "3.1.0",
      "date": "2016-04-27T02:33:27.390Z"
    },
    {
      "number": "3.1.1",
      "date": "2016-04-27T02:47:14.761Z"
    },
    {
      "number": "3.2.0",
      "date": "2016-04-27T05:32:25.751Z"
    },
    {
      "number": "3.2.1",
      "date": "2016-05-13T00:30:20.369Z"
    },
    {
      "number": "4.0.0",
      "date": "2016-06-26T20:26:22.864Z"
    }
  ],
  "created": "2016-03-05T03:59:14.601Z",
  "modified": "2016-06-26T20:26:22.864Z",
  "lastPublisher": {
    "name": "twolfson",
    "email": "todd@twolfson.com"
  },
  "owners": [
    {
      "name": "twolfson",
      "email": "todd@twolfson.com"
    }
  ],
  "readme": "# karma-electron [![Build status](https://travis-ci.org/twolfson/karma-electron.svg?branch=master)](https://travis-ci.org/twolfson/karma-electron) [![Build status](https://ci.appveyor.com/api/projects/status/urgpvcip7kl9q2ih/branch/master?svg=true)](https://ci.appveyor.com/project/twolfson/karma-electron-launcher/branch/master)\n\n[Karma][] launcher and preprocessor for [Electron][]\n\nThis was written to allow for directly testing in [Electron][] where we might want `require` to work automatically\n\n[Karma]: https://github.com/karma-runner/karma\n[Electron]: https://github.com/atom/electron\n\n**Features:**\n\n- Tested via CI on Linux and Windows\n- Support for Node.js integration in the renderer process (e.g. `process`, `require`, `__filename`)\n- Support for hidden browser windows\n- Support for isolated test runs to prevent cookie/localStorage pollution\n\n## Getting Started\nOn a project that has been set up with `karma init` already, install the module via:\n\n```bash\n# Install our module and `electron-prebuilt`\nnpm install karma-electron electron-prebuilt\n```\n\nThen, configure the module:\n\n```js\n// Inside `karma.conf.js`\nbrowsers: ['Electron']\n\n// If you would like Node integration support (e.g. `require`)\n//   then, you must include this in `preprocessors` and `client`\n// DEV: preprocessors is for backfilling `__filename` and local `require` paths\npreprocessors: {\n  '**/*.js': ['electron']\n},\n// DEV: `useIframe: false` is for launching a new window instead of using an iframe\n//   In Electron, iframes don't get `nodeIntegration` priveleges yet windows do\nclient: {\n  useIframe: false\n}\n```\n\nThen, we can run Karma:\n\n```bash\nkarma start\n```\n\n## Documentation\n### Environment variables\n- ELECTRON_BIN - Override path to use for `electron`\n    - By default, we will use path given by `electron-prebuilt`\n\n**Example:**\n\n```bash\nELECTRON_BIN=/usr/bin/electron karma start\n```\n\n### Configuration\nWe support configuration via Karma's custom launcher inheritance:\n\n- flags `Array` - List of Chromium flags to alter Electron's behavior\n    - https://github.com/atom/electron/blob/v0.36.9/docs/api/chrome-command-line-switches.md\n    - We added support for a `--show` to allow making the Karma window visible\n- userDataDir `String` - Directory to store cookies/localStorage information\n    - By default, this is a random directory generated by Karma (e.g. `/tmp/karma-5355024`)\n\n**Example:**\n\n```js\nmodule.exports = function (config) {\n  config.set({\n    // Specify usage of our custom launcher\n    browsers: ['CustomElectron'],\n\n    // Define a custom launcher which inherits from `Electron`\n    customLaunchers: {\n      CustomElectron: {\n        base: 'Electron',\n        userDataDir: __dirname + '/.electron',\n        flags: ['--show']\n      }\n    }\n};\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint via `npm run lint` and test via `npm test`.\n\n## Donating\nSupport this project and [others by twolfson][gratipay] via [gratipay][].\n\n[![Support via Gratipay][gratipay-badge]][gratipay]\n\n[gratipay-badge]: https://cdn.rawgit.com/gratipay/gratipay-badge/2.x.x/dist/gratipay.svg\n[gratipay]: https://www.gratipay.com/twolfson/\n\n## Unlicense\nAs of Mar 03 2016, Todd Wolfson has released this repository and its contents to the public domain.\n\nIt has been released under the [UNLICENSE][].\n\n[UNLICENSE]: UNLICENSE\n"
}