{
  "name": "electron-packager",
  "version": "8.1.0",
  "description": "Package and distribute your Electron app with OS-specific bundles (.app, .exe etc) via JS or CLI",
  "main": "index.js",
  "bin": {
    "electron-packager": "cli.js"
  },
  "repository": {
    "user": "electron-userland",
    "repo": "electron-packager",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/electron-userland/electron-packager/tarball/master",
    "clone_url": "https://github.com/electron-userland/electron-packager",
    "https_url": "https://github.com/electron-userland/electron-packager",
    "travis_url": "https://travis-ci.org/electron-userland/electron-packager",
    "zip_url": "https://github.com/electron-userland/electron-packager/archive/master.zip",
    "api_url": "https://api.github.com/repos/electron-userland/electron-packager"
  },
  "author": {
    "name": "max ogden"
  },
  "license": "BSD-2-Clause",
  "homepage": "https://github.com/electron-userland/electron-packager",
  "dependencies": {
    "asar": "^0.12.3",
    "debug": "^2.2.0",
    "electron-download": "^3.0.0",
    "electron-osx-sign": "^0.3.0",
    "extract-zip": "^1.0.3",
    "fs-extra": "^0.30.0",
    "get-package-info": "^0.1.0",
    "minimist": "^1.1.1",
    "plist": "^2.0.0",
    "rcedit": "^0.7.0",
    "resolve": "^1.1.6",
    "run-series": "^1.1.1",
    "sanitize-filename": "^1.6.0",
    "semver": "^5.3.0"
  },
  "devDependencies": {
    "buffer-equal": "^1.0.0",
    "coveralls": "^2.11.6",
    "eslint": "^3.2.0",
    "eslint-config-standard": "^6.0.0",
    "eslint-plugin-promise": "^2.0.0",
    "eslint-plugin-standard": "^2.0.0",
    "is-admin": "^2.0.0",
    "nyc": "^8.0.0",
    "rcinfo": "^0.1.3",
    "rimraf": "^2.3.2",
    "run-waterfall": "^1.1.1",
    "tape": "^4.0.0"
  },
  "engines": {
    "node": ">= 4.0"
  },
  "scripts": {
    "coveralls": "nyc report --reporter=text-lcov | coveralls",
    "pretest": "rimraf test/work",
    "test": "eslint . && nyc --cache tape test"
  },
  "keywords": [],
  "eslintConfig": {
    "extends": "standard",
    "parserOptions": {
      "sourceType": "script"
    },
    "rules": {
      "strict": [
        "error"
      ]
    }
  },
  "gitHead": "8b31af7e7c4a12434bd0c40c597ed0940ec8c4d2",
  "_npmVersion": "3.8.6",
  "_nodeVersion": "5.12.0",
  "dist": {
    "shasum": "90979bd870709ec4537a81ed6d6e6922968f878c",
    "tarball": "http://registry.npmjs.org/electron-packager/-/electron-packager-8.1.0.tgz"
  },
  "stars": 58,
  "versions": [
    {
      "number": "3.0.0",
      "date": "2015-04-27T19:10:10.368Z"
    },
    {
      "number": "3.1.0",
      "date": "2015-04-27T19:14:27.438Z"
    },
    {
      "number": "3.2.0",
      "date": "2015-05-05T17:00:15.802Z"
    },
    {
      "number": "3.3.0",
      "date": "2015-05-06T16:36:41.475Z"
    },
    {
      "number": "3.4.0",
      "date": "2015-05-10T19:23:08.264Z"
    },
    {
      "number": "4.0.0",
      "date": "2015-05-10T20:57:59.503Z"
    },
    {
      "number": "4.0.1",
      "date": "2015-05-10T23:46:14.685Z"
    },
    {
      "number": "4.0.2",
      "date": "2015-05-11T19:11:57.841Z"
    },
    {
      "number": "4.0.3",
      "date": "2015-05-18T21:10:29.507Z"
    },
    {
      "number": "4.1.0",
      "date": "2015-05-18T23:42:35.581Z"
    },
    {
      "number": "4.1.1",
      "date": "2015-05-22T04:06:52.285Z"
    },
    {
      "number": "4.1.2",
      "date": "2015-05-27T20:13:00.192Z"
    },
    {
      "number": "4.1.3",
      "date": "2015-06-16T17:40:46.445Z"
    },
    {
      "number": "4.2.0",
      "date": "2015-06-28T01:08:54.506Z"
    },
    {
      "number": "5.0.0",
      "date": "2015-07-01T20:05:08.537Z"
    },
    {
      "number": "5.0.1",
      "date": "2015-07-08T17:26:12.209Z"
    },
    {
      "number": "5.0.2",
      "date": "2015-08-20T08:24:45.085Z"
    },
    {
      "number": "5.1.0",
      "date": "2015-09-08T19:24:28.293Z"
    },
    {
      "number": "5.1.1",
      "date": "2015-10-29T19:15:24.464Z"
    },
    {
      "number": "5.2.0",
      "date": "2015-12-16T19:17:26.757Z"
    },
    {
      "number": "5.2.1",
      "date": "2016-01-17T22:32:15.653Z"
    },
    {
      "number": "6.0.0",
      "date": "2016-03-28T14:55:48.591Z"
    },
    {
      "number": "6.0.1",
      "date": "2016-04-08T07:38:21.219Z"
    },
    {
      "number": "6.0.2",
      "date": "2016-04-10T01:10:27.923Z"
    },
    {
      "number": "7.0.0",
      "date": "2016-04-18T03:18:18.659Z"
    },
    {
      "number": "7.0.1",
      "date": "2016-04-21T15:41:17.983Z"
    },
    {
      "number": "7.0.2",
      "date": "2016-05-18T16:21:29.933Z"
    },
    {
      "number": "7.0.3",
      "date": "2016-06-01T04:26:01.025Z"
    },
    {
      "number": "7.0.4",
      "date": "2016-06-14T17:07:01.990Z"
    },
    {
      "number": "7.1.0",
      "date": "2016-06-24T14:36:29.639Z"
    },
    {
      "number": "7.2.0",
      "date": "2016-07-04T01:08:21.509Z"
    },
    {
      "number": "7.3.0",
      "date": "2016-07-10T19:29:20.816Z"
    },
    {
      "number": "7.4.0",
      "date": "2016-07-31T19:16:30.067Z"
    },
    {
      "number": "7.5.0",
      "date": "2016-08-04T23:48:22.537Z"
    },
    {
      "number": "7.5.1",
      "date": "2016-08-06T18:48:55.550Z"
    },
    {
      "number": "7.6.0",
      "date": "2016-08-14T22:25:14.167Z"
    },
    {
      "number": "7.7.0",
      "date": "2016-08-20T15:54:03.443Z"
    },
    {
      "number": "8.0.0",
      "date": "2016-09-03T19:53:33.103Z"
    },
    {
      "number": "8.1.0",
      "date": "2016-09-30T15:34:27.878Z"
    }
  ],
  "created": "2015-04-27T19:10:10.368Z",
  "modified": "2016-09-30T15:34:27.878Z",
  "lastPublisher": {
    "name": "malept",
    "email": "nodejs.npm.nospam@lazymalevolence.com"
  },
  "owners": [
    {
      "name": "feross",
      "email": "feross@feross.org"
    },
    {
      "name": "jlord",
      "email": "to.jlord@gmail.com"
    },
    {
      "name": "jsdnxx",
      "email": "jason@denizac.org"
    },
    {
      "name": "kfranqueiro",
      "email": "kenneth.franqueiro@gmail.com"
    },
    {
      "name": "malept",
      "email": "nodejs.npm.nospam@lazymalevolence.com"
    },
    {
      "name": "maxogden",
      "email": "max@maxogden.com"
    },
    {
      "name": "sindresorhus",
      "email": "sindresorhus@gmail.com"
    },
    {
      "name": "stefanbuck",
      "email": "web@broud.de"
    },
    {
      "name": "zeke",
      "email": "zeke@sikelianos.com"
    }
  ],
  "readme": "# electron-packager\n\nPackage your [Electron](http://electron.atom.io) app into OS-specific bundles (`.app`, `.exe`, etc.) via JavaScript or the command line.\n\n[![Travis CI Build Status](https://travis-ci.org/electron-userland/electron-packager.svg?branch=master)](https://travis-ci.org/electron-userland/electron-packager)\n[![AppVeyor Build status](https://ci.appveyor.com/api/projects/status/m51mlf6ntd138555?svg=true)](https://ci.appveyor.com/project/electron-userland/electron-packager)\n[![Coverage Status](https://coveralls.io/repos/github/electron-userland/electron-packager/badge.svg?branch=master)](https://coveralls.io/github/electron-userland/electron-packager?branch=master)\n\n## About\n\nElectron Packager is a command line tool and Node.js library that bundles Electron-based application\nsource code with a renamed Electron executable and supporting files into folders ready for distribution.\n\nNote that packaged Electron applications can be relatively large. A zipped barebones OS X Electron application is around 40MB.\n\n### Electron Packager is an [OPEN Open Source Project](http://openopensource.org/)\n\nIndividuals making significant and valuable contributions are given commit-access to the project to contribute as they see fit. This project is more like an open wiki than a standard guarded open source project.\n\nSee [CONTRIBUTING.md](https://github.com/electron-userland/electron-packager/blob/master/CONTRIBUTING.md) and [openopensource.org](http://openopensource.org/) for more details.\n\n### [Release Notes](https://github.com/electron-userland/electron-packager/blob/master/NEWS.md)\n\n## Supported Platforms\n\nElectron Packager is known to run on the following **host** platforms:\n\n* Windows (32/64 bit)\n* OS X\n* Linux (x86/x86_64)\n\nIt generates executables/bundles for the following **target** platforms:\n\n* Windows (also known as `win32`, for both 32/64 bit)\n* OS X (also known as `darwin`) / [Mac App Store](http://electron.atom.io/docs/v0.36.0/tutorial/mac-app-store-submission-guide/) (also known as `mas`)<sup>*</sup>\n* Linux (for x86, x86_64, and armv7l architectures)\n\n<sup>*</sup> *Note for OS X / MAS target bundles: the `.app` bundle can only be signed when building on a host OS X platform.*\n\n## Installation\n\nThis module requires Node.js 4.0 or higher to run.\n\n```sh\n# for use in npm scripts\nnpm install electron-packager --save-dev\n\n# for use from cli\nnpm install electron-packager -g\n```\n\n### Building Windows apps from non-Windows platforms\n\nBuilding an Electron app for the Windows target platform requires editing the `Electron.exe` file.\nCurrently, Electron Packager uses [node-rcedit](https://github.com/atom/node-rcedit) to accomplish\nthis. A Windows executable is bundled in that Node package and needs to be run in order for this\nfunctionality to work, so on non-Windows host platforms, [Wine](https://www.winehq.org/) 1.6 or\nlater needs to be installed. On OS X, it is installable via [Homebrew](http://brew.sh/).\n\n## Usage\n\n### From the Command Line\n\nRunning electron-packager from the command line has this basic form:\n\n```\nelectron-packager <sourcedir> <appname> --platform=<platform> --arch=<arch> [optional flags...]\n```\n\nThis will:\n\n- Find or download the correct release of Electron\n- Use that version of Electron to create a app in `<out>/<appname>-<platform>-<arch>` *(this can be customized via an optional flag)*\n\n`--platform` and `--arch` can be omitted, in two cases:\n\n* If you specify `--all` instead, bundles for all valid combinations of target\n  platforms/architectures will be created.\n* Otherwise, a single bundle for the host platform/architecture will be created.\n\nFor an overview of the other optional flags, run `electron-packager --help` or see\n[usage.txt](https://github.com/electron-userland/electron-packager/blob/master/usage.txt). For\ndetailed descriptions, see the [API documentation](https://github.com/electron-userland/electron-packager/blob/master/docs/api.md).\n\nIf `appname` is omitted, this will use the name specified by \"productName\" or \"name\" in the nearest package.json.\n\n**Characters in the Electron app name which are not allowed in all target platforms' filenames\n(e.g., `/`), will be replaced by hyphens (`-`).**\n\nYou should be able to launch the app on the platform you built for. If not, check your settings and try again.\n\n**Be careful** not to include `node_modules` you don't want into your final app. If you put them in\nthe `devDependencies` section of `package.json`, by default none of the modules related to those\ndependencies will be copied in the app bundles. (This behavior can be turned off with the\n`--no-prune` flag.) In addition, folders like `.git` and `node_modules/.bin` will be ignored by\ndefault. You can use `--ignore` to ignore files and folders via a regular expression (*not* a\n[glob pattern](https://en.wikipedia.org/wiki/Glob_%28programming%29)). Examples include\n`--ignore=\\.gitignore` or `--ignore=\"\\.git(ignore|modules)\"`.\n\n#### Example\n\nLet's assume that you have made an app based on the [electron-quick-start](https://github.com/electron/electron-quick-start) repository on a OS X or Linux host platform with the following file structure:\n\n```\nfoobar\n├── package.json\n├── index.html\n├── […other files, like LICENSE…]\n└── script.js\n```\n\n…and that the following is true:\n\n* `electron-packager` is installed globally\n* `productName` in `package.json` has been set to `Foo Bar`\n* `npm install` for the `Foo Bar` app has been run at least once\n\nWhen one runs the following command for the first time in the `foobar` directory:\n\n```\nelectron-packager . --all\n```\n\n`electron-packager` will do the following:\n\n* Use the current directory for the `sourcedir`\n* Infer the `appname` from the `productName` in `package.json`\n* Infer the `app-version` from the `version` in `package.json`\n* Download [all supported target platforms and arches](#supported-platforms) of Electron\nusing the installed `electron` or `electron-prebuilt` version (and cache the downloads in `~/.electron`)\n* For the `darwin` build, as an example:\n  * build the OS X `Foo Bar.app`\n  * place `Foo Bar.app` in `foobar/Foo Bar-darwin-x64/` (since an `out` directory was not specified, it used the current working directory)\n\nThe file structure now looks like:\n\n```\nfoobar\n├── Foo Bar-darwin-x64\n│   ├── Foo Bar.app\n│   │   └── […Mac app contents…]\n│   ├── LICENSE\n│   └── version\n├── […other application bundles, like \"Foo Bar-win32-x64\" (sans quotes)…]\n├── package.json\n├── index.html\n├── […other files, like LICENSE…]\n└── script.js\n```\n\nThe `Foo Bar.app` folder generated can be executed by a system running OS X, which will start the packaged Electron app. This is also true of the Windows x64 build on a system running a new enough version of Windows for a 64-bit system (via `Foo Bar-win32-x64/Foo Bar.exe`), and so on.\n\n### [Programmatic API](https://github.com/electron-userland/electron-packager/blob/master/docs/api.md)\n\n## Related\n\n- [electron-builder](https://www.npmjs.com/package/electron-builder) - for creating installer wizards\n- [grunt-electron](https://github.com/sindresorhus/grunt-electron) - grunt plugin for electron-packager\n- [electron-packager-interactive](https://github.com/Urucas/electron-packager-interactive) - an interactive CLI for electron-packager\n- [electron-packager-plugin-non-proprietary-codecs-ffmpeg](https://www.npmjs.com/package/electron-packager-plugin-non-proprietary-codecs-ffmpeg) - replaces the normal version of FFmpeg in Electron with a version without proprietary codecs\n"
}