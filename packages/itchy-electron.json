{
  "name": "itchy-electron",
  "version": "0.2.1",
  "description": "Package your Electron games for itch.io",
  "repository": {
    "user": "erbridge",
    "repo": "itchy-electron",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/erbridge/itchy-electron/tarball/master",
    "clone_url": "https://github.com/erbridge/itchy-electron",
    "https_url": "https://github.com/erbridge/itchy-electron",
    "travis_url": "https://travis-ci.org/erbridge/itchy-electron",
    "zip_url": "https://github.com/erbridge/itchy-electron/archive/master.zip",
    "api_url": "https://api.github.com/repos/erbridge/itchy-electron"
  },
  "author": {
    "name": "Felix Laurie von Massenbach",
    "email": "felix@erbridge.co.uk",
    "url": "http://erbridge.co.uk/"
  },
  "license": "MIT",
  "bin": {
    "itchy": "./bin/itchy.js"
  },
  "scripts": {
    "test": "npm run lint",
    "lint": "eslint ."
  },
  "dependencies": {
    "chalk": "^1.1.3",
    "electron-packager": "^7.0.1",
    "liftoff": "^2.2.1",
    "meow": "^3.7.0",
    "semver-regex": "^1.0.0",
    "shelljs": "^0.7.0",
    "update-notifier": "^0.7.0",
    "winston": "^2.2.0"
  },
  "devDependencies": {
    "eslint": "^2.10.1"
  },
  "gitHead": "4ee86d8d7252f4b03635a36ab6d741bc3b8fa1db",
  "homepage": "https://github.com/erbridge/itchy-electron#readme",
  "_npmVersion": "3.9.5",
  "_nodeVersion": "6.2.2",
  "dist": {
    "shasum": "95e0f9f4559dc1dc8136ce1684b784ad283a2dba",
    "tarball": "http://registry.npmjs.org/itchy-electron/-/itchy-electron-0.2.1.tgz"
  },
  "versions": [
    {
      "number": "0.1.0",
      "date": "2016-05-14T23:10:18.537Z"
    },
    {
      "number": "0.1.1",
      "date": "2016-05-15T00:14:53.627Z"
    },
    {
      "number": "0.2.0",
      "date": "2016-05-15T02:27:21.406Z"
    },
    {
      "number": "0.2.1",
      "date": "2016-06-25T10:54:14.976Z"
    }
  ],
  "created": "2016-05-14T23:10:18.537Z",
  "modified": "2016-06-25T10:54:14.976Z",
  "lastPublisher": {
    "name": "erbridge",
    "email": "felix@erbridge.co.uk"
  },
  "owners": [
    {
      "name": "erbridge",
      "email": "felix@erbridge.co.uk"
    }
  ],
  "readme": "# Itchy Electron\n\n> Package your [Electron](http://electron.atom.io/) games for [itch.io](https://itch.io/)\n\n\n## About\n\nThis is a CLI app for building and publishing games and tools built using [Electron](http://electron.atom.io/) to [itch.io](https://itch.io/). It aims to handle everything from packaging your Electron app into distributables, to publishing it on itch.io. It wraps other tools into a single unified interface, with sensible defaults and simple commands that can easily be called manually or added as `package.json` scripts.\n\nBug reports, feature requests, and pull requests are welcome!\n\n\n## Installation\n\nInstall into a project using `npm`:\n\n```\n$ npm install --save-dev itchy-electron\n```\n\nor globally:\n\n```\n$ npm install -g itchy-electron\n```\n\nPublishing also relies on [`butler`](https://github.com/itchio/butler), which needs to be manually installed.\n\n\n## Usage\n\nOnce installed, *Itch Electron* is used through the CLI tool `itchy`.\n\nRefer to the help for an up to date command reference:\n\n```\n$ itchy help\n```\n\n\n### Configuration\n\n*Itchy Electron* uses configuration files over command line arguments. To configure it, either add an object to your `package.json` called `itchyElectron`, or create a JavaScript or JSON file called `.itchyelectronrc`, `.itchyelectron.js`, or `.itchyelectron.json` (whatever takes your preference).\n\nThe only \"required\" options are `electronVersion` (which is inherited from the `package.json` if possible - see below for more details) and `itchTargets`.\n\nA minimal `package.json` configuration looks like this:\n\n```json\n{\n  \"name\": \"example\",\n  \"version\": \"0.1.0\",\n  \"itchyElectron\": {\n    \"productName\": \"Example\",\n    \"appDir\": \"./app\",\n    \"itchTargets\": {\n      \"release\": \"erbridge/example\"\n    }\n  },\n  \"devDependencies\": {\n    \"electron-prebuilt\": \"1.0.2\",\n    \"itchy-electron\": \"^0.1.0\"\n  }\n}\n```\n\nor `.itchyelectron.json`:\n\n```json\n{\n  \"productName\": \"Example\",\n  \"appVersion\": \"0.1.0\",\n  \"electronVersion\": \"1.0.2\",\n  \"itchTargets\": {\n    \"beta\": \"erbridge/example-beta\",\n    \"release\": \"erbridge/example\"\n  }\n}\n```\n\n\n#### Options\n\n##### `appDir`\n\nThe app source directory. Defaults to the current directory.\n\n\n##### `appVersion`\n\nThe release version of the application. Maps to the `ProductVersion` metadata property on Windows, and `CFBundleShortVersionString` on OS X. Defaults to the `version` from the `package.json`.\n\n\n##### `buildDir`\n\nThe directory to save builds into. Defaults to `./build`.\n\n\n##### `buildVersion`\n\nThe build version of the application. Maps to the `FileVersion` metadata property on Windows, and `CFBundleVersion` on OS X. Defaults to `appVersion`.\n\n\n##### `electronVersion`\n\nThe version of Electron to build against. If omitted, the pinned version in the `package.json` dependencies will be used. If there is no locally pinned version number, the build will fail.\n\nAccepted packages are:\n\n - `electron`\n - `electron-prebuilt`\n - `electron-prebuilt-compile`\n\n\n##### `itchTargets`\n\nAn object of key value pairs of target to project, used for publishing.\n\n\n##### `productName`\n\nThe application name. If omitted, `name` from the `package.json` will be used instead. If no name is present, it will default to `untitled`.\n\n\n### Project Structure\n\nIt is suggested that you structure your app in the following way, so as to minimize the overheads caused by packaging the `devDependencies`.\n\n```\nproject/\n\n  app/\n        The entire app source is contained within here.\n\n    package.json\n          A minimal package.json containing a reference to the\n          app entry point in \"main\" along with the runtime\n          dependencies in \"dependencies\". Other values are optional.\n\n  build/\n\n  dist/\n\n  package.json\n        A more complete package.json with the development dependencies\n        and other values. This is where the \"itchyElectron\"\n        configuration belongs, if using the package.json option.\n```\n\nSetting `appDir` to `./app` in this case will enable building packages with only the runtime dependencies. It also has the bonus effect of excluding the various configuration files often found in a project's root.\n"
}