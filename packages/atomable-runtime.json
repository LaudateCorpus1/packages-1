{
  "name": "atomable-runtime",
  "version": "1.0.0-alpha.6",
  "homepage": "https://github.com/atomable/runtime",
  "description": "Runtime for atomable's serverless microservice framework.",
  "main": "dist/runtime.js",
  "scripts": {
    "prepublish": "webpack",
    "pretest": "webpack",
    "test": "eslint . && mocha --recursive --require babel-register",
    "lint": "eslint ."
  },
  "author": {
    "name": "gumarm, atomable"
  },
  "license": "MIT",
  "repository": {
    "user": "atomable",
    "repo": "runtime",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/atomable/runtime/tarball/master",
    "clone_url": "https://github.com/atomable/runtime",
    "https_url": "https://github.com/atomable/runtime",
    "travis_url": "https://travis-ci.org/atomable/runtime",
    "zip_url": "https://github.com/atomable/runtime/archive/master.zip",
    "api_url": "https://api.github.com/repos/atomable/runtime"
  },
  "devDependencies": {
    "babel-cli": "^6.18.0",
    "babel-core": "^6.18.2",
    "babel-loader": "^6.2.7",
    "babel-plugin-transform-runtime": "^6.15.0",
    "babel-preset-latest": "^6.16.0",
    "babel-preset-stage-0": "^6.16.0",
    "babel-register": "^6.18.0",
    "babel-runtime": "^6.18.0",
    "liftjs": "^1.1.4",
    "mocha": "^3.1.2",
    "should": "^11.1.1",
    "webpack": "^1.13.3",
    "eslint": "3.9.1",
    "eslint-config-airbnb": "^13.0.0",
    "eslint-plugin-import": "^2.1.0",
    "eslint-plugin-jsx-a11y": "^2.2.3",
    "eslint-plugin-react": "^6.6.0"
  },
  "gitHead": "4438094342909968cd81640c11c93a83bd7a55ca",
  "_npmVersion": "3.9.3",
  "_nodeVersion": "6.2.1",
  "dist": {
    "shasum": "c7cd8a30e3a79c54373258cf84b0cf439e0b95fd",
    "tarball": "http://registry.npmjs.org/atomable-runtime/-/atomable-runtime-1.0.0-alpha.6.tgz"
  },
  "versions": [
    {
      "number": "1.0.0",
      "date": "2016-11-05T20:56:54.497Z"
    },
    {
      "number": "1.0.1",
      "date": "2016-11-05T21:11:41.825Z"
    },
    {
      "number": "1.0.2",
      "date": "2016-11-05T21:30:55.266Z"
    },
    {
      "number": "1.0.2-beta",
      "date": "2016-11-06T23:29:52.817Z"
    },
    {
      "number": "1.0.3-beta",
      "date": "2016-11-06T23:31:01.003Z"
    },
    {
      "number": "1.0.4-beta",
      "date": "2016-11-07T00:26:23.078Z"
    },
    {
      "number": "1.0.5-beta",
      "date": "2016-11-07T01:31:46.845Z"
    },
    {
      "number": "1.0.0-alpha.1",
      "date": "2016-11-07T19:35:59.594Z"
    },
    {
      "number": "1.0.0-alpha.2",
      "date": "2016-11-08T03:27:01.264Z"
    },
    {
      "number": "1.0.0-alpha.3",
      "date": "2016-11-08T03:39:23.444Z"
    },
    {
      "number": "1.0.0-alpha.4",
      "date": "2016-11-08T03:44:06.310Z"
    },
    {
      "number": "1.0.0-alpha.5",
      "date": "2016-11-08T14:27:34.058Z"
    },
    {
      "number": "1.0.0-alpha.6",
      "date": "2016-11-11T01:59:38.484Z"
    }
  ],
  "created": "2016-11-05T20:56:54.497Z",
  "modified": "2016-11-11T01:59:38.484Z",
  "lastPublisher": {
    "name": "gumarm",
    "email": "guillaume@atomable.io"
  },
  "owners": [
    {
      "name": "gumarm",
      "email": "guillaume@atomable.io"
    },
    {
      "name": "pre63",
      "email": "sd@pre63.com"
    }
  ],
  "readme": "[![atomable](https://img.shields.io/badge/atomable.io--blue.svg)](http://atomable.io)\n[![npm](https://img.shields.io/badge/npm-atomable-lightgrey.svg)](https://www.npmjs.com/package/atomable-runtime)\n[![Build Status](https://travis-ci.org/atomable/runtime.svg?branch=master)](https://travis-ci.org/atomable/runtime)\n[![Join the chat at https://gitter.im/atomable/atomable](https://badges.gitter.im/atomable/atomable.svg)](https://gitter.im/atomable/atomable?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n## atomable runtime\n\nThis is the runtime for the atomable serverless microservices framework. Our goal is to make your serverless life easier!\n\nThe best way to use this runtime is by using our insanely powerful [atomable cli.](https://github.com/atomable/atomable)\n\nIf using command line tools is not your thing, well we still got your covered! Check out the code examples below to get started!\n\n## Documentation\nhttps://github.com/atomable/atomable\n\n## Source code | fork | pull request | issues\nhttps://github.com/atomable/runtime\n\n## Installation\n\n### [npm](https://www.npmjs.com/package/atomable-runtime)\n```\nnpm install atomable-runtime\n```\n### [yarn](https://yarnpkg.com/)\n```\nyarn add atomable-runtime\n```\n\n## Importing\n\n```javascript\nconst runtime = require('atomable-runtime');\n\nimport { register, handle } from 'atomable-runtime';\n```\n\n## Usage\n\nTo use the runtime you need to create an AWS lambda that will be the main entry point of your project. Once this is done, you never have to think about configuring more lambdas.\n\n`handler.js`\n\n```javascript\nconst runtime = require('atomable-runtime');\n\n/**\n * () registers the function and the\n * callback to handle the aws event\n */\n(() => {\n  const protonHandler = require('./proton/proton.js').proton;\n  const protonConf = { name: 'proton', https: { path: 'proton', method: 'get', parameters: [{ in: 'query', name: 'firstName' }, { in: 'query', name: 'lastName', required: false }] }};\n  runtime.register(protonHandler, protonConf);\n\n  const electronHandler = require('./electron/electron.js').electron;\n  const electronConf = { name: 'electron', https: { path: 'electron', method: 'post', parameters: [{ in: 'body', name: '*' }, { in: 'headers', name: 'authorization' }] }};\n  runtime.register(electronHandler, electronConf);\n})();\n\n\n/**\n * handler() handles aws lambda events\n */\nexport const handler = runtime.handle;\n```\n\n`proton.js`\n\n```javascript\n// firstName is guaranteed not to be null since it is required by default\n// since we configured lastName to not be required, it may be undefined here\nmodule.exports.proton = (firstName, lastName) {\n  // you can also return a promise, we will handle the result correctly.\n  return { statusCode : 200, body: `Hello ${firstName} ${lastName}` };\n};\n```\n\n## Tests\n\nTo run the tests, simply checkout the code and run `npm test`.\n\n## Contributing\n\n1. Fork it!\n2. Create your feature branch: `git checkout -b my-new-feature`\n3. Commit your changes: `git commit -am 'Add some feature'`\n4. Push to the branch: `git push origin my-new-feature`\n5. Submit a pull request!\n\nIf you find issues with the runtime, log them here in our [issues.](https://github.com/atomable/runtime/issues)\n\nIf you feel like contributing, one thing you have to know is we hate classes, the keyword `new` and we like to use our Monad library, [lift.js](https://github.com/atomable/lift.js), as often as possible :)\n\n## Roadmap\n\nHere is a list of things we want to do in this project, feel free to help us out!\n- Add parameter validators (stringNotEmpty, stringLength, intBetween, etc. That sort of thing...)\n- Better error messages when things are not configured as they should.\n- Support multiple cloud providers\n\n## Links\n- [atomable.io](http://atomable.io)\n- [atomable cli](https://github.com/atomable/atomable)\n- [npm](https://www.npmjs.com/package/atomable-runtime)\n- [travis](https://travis-ci.org/atomable)\n\n## License\n\nMIT\n"
}