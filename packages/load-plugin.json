{
  "name": "load-plugin",
  "version": "1.1.0",
  "description": "Load a submodule / plugin",
  "license": "MIT",
  "keywords": [
    "load",
    "submodule",
    "package",
    "plugin"
  ],
  "files": [
    "index.js"
  ],
  "repository": {
    "user": "wooorm",
    "repo": "load-plugin",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/wooorm/load-plugin/tarball/master",
    "clone_url": "https://github.com/wooorm/load-plugin",
    "https_url": "https://github.com/wooorm/load-plugin",
    "travis_url": "https://travis-ci.org/wooorm/load-plugin",
    "zip_url": "https://github.com/wooorm/load-plugin/archive/master.zip",
    "api_url": "https://api.github.com/repos/wooorm/load-plugin"
  },
  "author": {
    "name": "Titus Wormer",
    "email": "tituswormer@gmail.com",
    "url": "http://wooorm.com"
  },
  "contributors": [
    {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "http://wooorm.com"
    }
  ],
  "dependencies": {
    "array-unique": "^0.2.1",
    "find-root": "^1.0.0",
    "npm-prefix": "^1.2.0"
  },
  "devDependencies": {
    "eslint": "^2.0.0",
    "istanbul": "^0.4.0",
    "jscs": "^3.0.0",
    "jscs-jsdoc": "^2.0.0",
    "remark-cli": "^1.0.0",
    "remark-comment-config": "^4.0.0",
    "remark-github": "^5.0.0",
    "remark-lint": "^4.0.0",
    "remark-validate-links": "^4.0.0",
    "tape": "^4.0.0"
  },
  "scripts": {
    "build-md": "remark . --quiet --frail",
    "build": "npm run build-md",
    "lint-api": "eslint .",
    "lint-style": "jscs --reporter inline .",
    "lint": "npm run lint-api && npm run lint-style",
    "test-api": "node test/index.js",
    "test-coverage": "istanbul cover test/index.js",
    "test": "npm run build && npm run lint && npm run test-coverage"
  },
  "gitHead": "1baa2ef74c00d692b5cddb7da8f7f1985b0179dc",
  "homepage": "https://github.com/wooorm/load-plugin#readme",
  "_npmVersion": "3.9.5",
  "_nodeVersion": "6.1.0",
  "dist": {
    "shasum": "506879b31456846009bf11b5c785fa00dc8dccf6",
    "tarball": "http://registry.npmjs.org/load-plugin/-/load-plugin-1.1.0.tgz"
  },
  "versions": [
    {
      "number": "1.0.0",
      "date": "2016-05-26T12:58:09.898Z"
    },
    {
      "number": "1.1.0",
      "date": "2016-06-14T13:25:59.404Z"
    }
  ],
  "created": "2016-05-26T12:58:09.898Z",
  "modified": "2016-06-14T13:25:59.404Z",
  "lastPublisher": {
    "name": "wooorm",
    "email": "tituswormer@gmail.com"
  },
  "owners": [
    {
      "name": "wooorm",
      "email": "tituswormer@gmail.com"
    }
  ],
  "readme": "# load-plugin [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\n<!-- lint disable heading-increment -->\n\nLoad a submodule / plugin.  Accepts a string and looks for files,\ndirectories, node modules, optionally global packages too.\n\n## Installation\n\n[npm][npm-install]:\n\n```bash\nnpm install load-plugin\n```\n\n## Usage\n\nSay we have the following project:\n\n```txt\nproject\n|-- node_modules\n|   |-- load-plugin\n|-- package.json\n|-- example\n    |-- index.js\n```\n\nWhere `example/index.js` looks as follows:\n\n```javascript\nvar loadPlugin = require('load-plugin');\n\nconsole.log(loadPlugin('foo', {prefix: 'bar'}));\n```\n\nAnd the script is run:\n\n```sh\ncd example\nnode index.js\n```\n\nThe following paths are checked, in order:\n\n```txt\nproject/node_modules/bar-foo\nproject/example/node_modules/bar-foo\nproject/foo\nproject/foo.js\nproject/node_modules/foo\nproject/example/node_modules/foo\n```\n\nAnd an error is throw because `foo` isn’t found :worried:\n\n```txt\nmodule.js:440\n    throw err;\n    ^\n\nError: Cannot find module 'foo'\n    at Function.Module._resolveFilename (module.js:438:15)\n    at Function.Module._load (module.js:386:25)\n    at Module.require (module.js:466:17)\n    at require (internal/module.js:20:19)\n    at loadPlugin (~/project/node_modules/load-plugin/index.js:126:12)\n    at Object.<anonymous> (~/project/example/index.js:3:13)\n    at Module._compile (module.js:541:32)\n    at Object.Module._extensions..js (module.js:550:10)\n    at Module.load (module.js:456:32)\n    at tryModuleLoad (module.js:415:12)\n```\n\n## API\n\n### `loadPlugin(name[, options])`\n\nTry to load `name`. [See how »][algorithm].\n\n###### Options\n\n*   `prefix` (`string`, optional)\n    — Prefix to search for;\n\n*   `cwd` (`string`, optional, defaults to `process.cwd()`)\n    — Place to search in;\n\n*   `global` (`boolean`, optional, defaults to whether global is detected)\n    — Whether to look for `name` in [global places][global].\n    If this is nully, `load-plugin` will detect if it’s currently\n    running in global mode: either because it’s in Electron, or because\n    a globally installed package is running it.\n\n###### Returns\n\nThe results of `require`ing the first path that exists.\n\n###### Throws\n\nIf `require`ing an existing path fails, or if no existing path exists.\n\n### `loadPlugin.resolve(name[, options])`\n\nSearch for `name`.  Accepts the same parameters as [`loadPlugin`][load-plugin]\nbut returns an absolute path for `name` instead of requiring it,\nand `null` if it cannot be found.\n\n## Algorithm\n\nLooks in the following paths:\n\n*   `$root/node_modules/$plugin` — If `prefix` is given;\n*   `$cwd/node_modules/$plugin` — If `prefix` is given;\n*   `$modules/$plugin` — If `prefix` is given and in `global` mode;\n*   `$root/$name`;\n*   `$root/$name.js`;\n*   `$root/node_modules/$name`;\n*   `$cwd/node_modules/$name`;\n*   `$modules/$name` — If in `global` mode.\n\nWhere:\n\n*   `$cwd` — Directory to search from (configurable);\n\n*   `$root` — Ancestral directory of `$cwd`, with a `package.json`;\n\n*   `$name` — Given `name`;\n\n*   `$plugin` — When `prefix` is given, `prefix` and `name`\n    joined together with a hyphen;\n\n*   `$modules` — Location of globally installed npm packages.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/wooorm/load-plugin.svg\n\n[travis]: https://travis-ci.org/wooorm/load-plugin\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/wooorm/load-plugin.svg\n\n[codecov]: https://codecov.io/github/wooorm/load-plugin\n\n[npm-install]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[global]: https://docs.npmjs.com/files/folders#node-modules\n\n[algorithm]: #algorithm\n\n[load-plugin]: #loadpluginname-options\n"
}