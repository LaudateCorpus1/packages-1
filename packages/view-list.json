{
  "name": "view-list",
  "version": "2.1.0",
  "description": "An infinite scrolling list view element built on a virtual DOM.",
  "main": "index.js",
  "scripts": {
    "start": "budo example.js:bundle.js --live",
    "gh": "browserify example.js -o bundle.js",
    "test": "standard --format && browserify test.js | testron"
  },
  "author": {
    "name": "Kyle Robinson Young",
    "email": "kyle@dontkry.com",
    "url": "http://dontkry.com"
  },
  "license": "MIT",
  "repository": {
    "user": "shama",
    "repo": "view-list",
    "branch": "master",
    "host": "github.com",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/shama/view-list/tarball/master",
    "clone_url": "https://github.com/shama/view-list",
    "https_url": "https://github.com/shama/view-list",
    "travis_url": "https://travis-ci.org/shama/view-list",
    "zip_url": "https://github.com/shama/view-list/archive/master.zip",
    "api_url": "https://api.github.com/repos/shama/view-list"
  },
  "files": [
    "index.js"
  ],
  "dependencies": {
    "attach-css": "^1.0.0",
    "base-element": "^3.0.1",
    "inherits": "^2.0.1",
    "xtend": "^4.0.0"
  },
  "devDependencies": {
    "browserify": "^13.0.0",
    "budo": "^4.0.0",
    "electron-prebuilt": "^0.36.3",
    "lodash.debounce": "^3.0.3",
    "standard": "^5.4.1",
    "tape": "^4.4.0",
    "testron": "^1.2.0",
    "through2": "^0.6.5",
    "virtual-dom": "^2.0.1"
  },
  "gitHead": "b0269886142ace13aa0854e83365391fc772d0eb",
  "homepage": "https://github.com/shama/view-list",
  "_npmVersion": "2.1.1",
  "_nodeVersion": "4.0.0",
  "dist": {
    "shasum": "a2bd55df63b4f0009cbd177f2fc50ce3648733a5",
    "tarball": "http://registry.npmjs.org/view-list/-/view-list-2.1.0.tgz"
  },
  "versions": [
    {
      "number": "1.0.0",
      "date": "2015-04-26T23:44:23.603Z"
    },
    {
      "number": "1.1.0",
      "date": "2015-04-27T02:50:34.387Z"
    },
    {
      "number": "1.2.0",
      "date": "2015-04-27T04:28:15.786Z"
    },
    {
      "number": "1.2.1",
      "date": "2015-04-27T07:52:09.884Z"
    },
    {
      "number": "1.3.0",
      "date": "2015-04-27T22:44:29.314Z"
    },
    {
      "number": "1.4.0",
      "date": "2015-05-14T21:35:24.868Z"
    },
    {
      "number": "2.0.0",
      "date": "2015-06-17T18:05:49.660Z"
    },
    {
      "number": "2.1.0",
      "date": "2016-01-14T19:57:34.146Z"
    }
  ],
  "created": "2015-04-26T23:44:23.603Z",
  "modified": "2016-01-14T19:57:34.146Z",
  "lastPublisher": {
    "name": "shama",
    "email": "kyle@dontkry.com"
  },
  "owners": [
    {
      "name": "shama",
      "email": "kyle@dontkry.com"
    },
    {
      "name": "sethvincent",
      "email": "sethvincent@gmail.com"
    }
  ],
  "readme": "# view-list [![Build Status](http://img.shields.io/travis/shama/view-list.svg)](https://travis-ci.org/shama/view-list)\n\nAn infinite scrolling list view element built on a virtual DOM.\n\n## Example\n\nView a live example displaying 200k rows: [http://shama.github.io/view-list](http://shama.github.io/view-list)\n\nRender the ViewList using virtual-dom:\n\n```js\nvar ViewList = require('view-list')\n\n// Create an instance of our view list in document.body\nvar viewlist = new ViewList({\n  appendTo: document.body\n})\n\n// Create some data to add to the list\nvar data = ['one', 'two', 'three']\n\n// Render the data\nviewlist.render(data)\n\n// Listen for scroll events coming up\nviewlist.addEventListener('scroll', function (element) {\n  console.log('List was scrolled to ' + element.scrollTop)\n})\n\n// Every second, append a new row\nvar i = 0\nsetInterval(function() {\n  data.push('row ' + i++)\n  viewlist.render(data)\n}, 1000)\n```\n\n## API\n\n### `var list = new ViewList(params)`\n\n`params` can be (in addition to the `virtual-dom` parameters):\n\n* `tagName`: The tag to use. Default `'ul'`.\n* `childTagName`: The tag to use for child elements. Default `'li'`.\n* `className`: The classes to use on main element. Default `'view-list'`.\n* `topClassName`: The classes to use on top element. Default `'.top'`.\n* `bottomClassName`: The classes to use on bottom element. Default `'.bottom'`.\n* `element`: The DOM element of the list.\n* `height`: The total height of the container. Default `500`.\n* `rowHeight`: The height of each row. Default `30`.\n* `eachrow`: A function that gets called for each row to return a custom element per row. Default:\n\n  ```\n  function (row) {\n    return this.html(this.childTagName, {\n      style: {\n        height: this.rowHeight\n      }\n    }, [row])\n  }\n  ```\n\n#### Events\n\nListen for events with `list.addEventListener(name, function () {})`.\n\n* `load`: Called when element has loaded.\n* `scroll`: Called when element has been scrolled.\n\n# license\n(c) 2016 Kyle Robinson Young. MIT License\n"
}