{
  "name": "p-s",
  "version": "3.0.3",
  "description": "All the benefits of npm scripts without the cost of a bloated package.json and limits of json",
  "main": "dist/index",
  "scripts": {
    "start": "nps",
    "test": "nps test",
    "localstart": "npm start build && node ./dist/bin/nps.js",
    "commitmsg": "opt --in commit-msg --exec \"validate-commit-msg\"",
    "precommit": "opt --in pre-commit --exec \"npm start validate\""
  },
  "bin": {
    "nps": "./dist/bin/nps.js",
    "p-s": "./dist/bin/nps.js"
  },
  "files": [
    "dist"
  ],
  "keywords": [],
  "author": {
    "name": "Kent C. Dodds",
    "email": "kent@doddsfamily.us",
    "url": "http://kentcdodds.com/"
  },
  "license": "MIT",
  "dependencies": {
    "arrify": "1.0.1",
    "bluebird": "3.4.6",
    "colors": "1.1.2",
    "commander": "2.9.0",
    "find-up": "1.1.2",
    "js-yaml": "3.6.1",
    "lodash": "4.14.0",
    "manage-path": "2.0.0",
    "omelette": "0.3.1",
    "prefix-matches": "0.0.9",
    "shell-escape": "0.2.0",
    "spawn-command-with-kill": "1.0.0"
  },
  "devDependencies": {
    "all-contributors-cli": "3.0.6",
    "babel-cli": "6.11.4",
    "babel-eslint": "6.1.2",
    "babel-jest": "15.0.0",
    "babel-plugin-module-resolver": "2.3.0",
    "babel-preset-es2015": "6.9.0",
    "babel-preset-stage-2": "6.11.0",
    "babel-register": "6.11.5",
    "cli-tester": "1.0.0",
    "codecov": "1.0.1",
    "commitizen": "2.8.2",
    "condition-node-version": "1.3.0",
    "cross-env": "2.0.0",
    "cz-conventional-changelog": "1.1.6",
    "eslint": "3.4.0",
    "eslint-config-kentcdodds": "10.1.0",
    "husky": "0.11.7",
    "jest-cli": "15.1.1",
    "opt-cli": "1.5.1",
    "p-s": "*",
    "rimraf": "2.5.4",
    "semantic-release": "4.3.5",
    "sinon": "1.17.4",
    "validate-commit-msg": "2.6.1"
  },
  "eslintConfig": {
    "extends": [
      "kentcdodds",
      "kentcdodds/jest"
    ]
  },
  "jest": {
    "cacheDirectory": "./node_modules/.cache",
    "coverageThreshold": {
      "global": {
        "branches": 100,
        "functions": 100,
        "lines": 100,
        "statements": 100
      }
    }
  },
  "release": {
    "verifyConditions": {
      "path": "condition-node-version",
      "node": "^6"
    }
  },
  "config": {
    "commitizen": {
      "path": "node_modules/cz-conventional-changelog"
    }
  },
  "repository": {
    "user": "kentcdodds",
    "repo": "p-s",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/kentcdodds/p-s/tarball/master",
    "clone_url": "https://github.com/kentcdodds/p-s",
    "https_url": "https://github.com/kentcdodds/p-s",
    "travis_url": "https://travis-ci.org/kentcdodds/p-s",
    "zip_url": "https://github.com/kentcdodds/p-s/archive/master.zip",
    "api_url": "https://api.github.com/repos/kentcdodds/p-s"
  },
  "homepage": "https://github.com/kentcdodds/p-s#readme",
  "gitHead": "acfe77e328dc1691607321771d7961c70924e3ed",
  "_npmVersion": "3.10.9",
  "_nodeVersion": "6.9.1",
  "dist": {
    "shasum": "d4b6e481f3fb48e819415c667739b5958e33c1b7",
    "tarball": "http://registry.npmjs.org/p-s/-/p-s-3.0.3.tgz"
  },
  "stars": 8,
  "versions": [
    {
      "number": "0.0.0-beta.0",
      "date": "2016-04-25T20:20:44.704Z"
    },
    {
      "number": "0.0.0-beta.1",
      "date": "2016-04-25T21:17:37.666Z"
    },
    {
      "number": "0.0.0-beta.3",
      "date": "2016-04-25T21:21:01.160Z"
    },
    {
      "number": "0.0.0-beta.4",
      "date": "2016-04-25T21:59:33.618Z"
    },
    {
      "number": "0.0.0",
      "date": "2016-04-25T22:19:02.173Z"
    },
    {
      "number": "0.0.1",
      "date": "2016-04-26T02:14:01.405Z"
    },
    {
      "number": "0.0.2",
      "date": "2016-04-26T02:32:25.211Z"
    },
    {
      "number": "0.0.3",
      "date": "2016-04-26T03:08:22.674Z"
    },
    {
      "number": "0.1.0",
      "date": "2016-04-26T04:23:23.979Z"
    },
    {
      "number": "0.2.0",
      "date": "2016-04-26T21:50:26.281Z"
    },
    {
      "number": "0.3.0",
      "date": "2016-04-27T01:48:04.276Z"
    },
    {
      "number": "0.4.0",
      "date": "2016-05-01T03:25:19.399Z"
    },
    {
      "number": "0.4.1",
      "date": "2016-05-02T13:04:06.163Z"
    },
    {
      "number": "0.5.0",
      "date": "2016-05-04T02:36:34.927Z"
    },
    {
      "number": "0.5.1",
      "date": "2016-05-06T17:43:23.067Z"
    },
    {
      "number": "0.6.0",
      "date": "2016-05-16T14:58:55.041Z"
    },
    {
      "number": "0.7.0",
      "date": "2016-05-16T20:47:22.632Z"
    },
    {
      "number": "0.7.1",
      "date": "2016-05-16T20:58:52.709Z"
    },
    {
      "number": "0.8.0",
      "date": "2016-05-20T01:53:54.650Z"
    },
    {
      "number": "0.9.0",
      "date": "2016-05-20T16:31:39.930Z"
    },
    {
      "number": "1.0.0",
      "date": "2016-05-24T04:09:31.079Z"
    },
    {
      "number": "1.0.1",
      "date": "2016-05-31T23:29:05.947Z"
    },
    {
      "number": "1.0.2",
      "date": "2016-06-08T21:39:40.308Z"
    },
    {
      "number": "1.0.3",
      "date": "2016-07-08T10:48:13.386Z"
    },
    {
      "number": "1.0.4",
      "date": "2016-07-08T17:34:16.876Z"
    },
    {
      "number": "2.0.0",
      "date": "2016-07-26T18:01:04.229Z"
    },
    {
      "number": "2.0.1",
      "date": "2016-07-26T20:15:31.409Z"
    },
    {
      "number": "2.0.2",
      "date": "2016-07-26T20:49:48.659Z"
    },
    {
      "number": "2.1.0",
      "date": "2016-07-27T22:05:48.083Z"
    },
    {
      "number": "2.2.0",
      "date": "2016-07-29T18:54:39.068Z"
    },
    {
      "number": "2.3.0-beta.0",
      "date": "2016-07-29T20:35:25.452Z"
    },
    {
      "number": "2.3.0",
      "date": "2016-07-29T20:39:33.159Z"
    },
    {
      "number": "2.3.0-beta.1",
      "date": "2016-07-29T20:58:15.673Z"
    },
    {
      "number": "2.4.0",
      "date": "2016-08-28T03:32:00.186Z"
    },
    {
      "number": "2.4.1",
      "date": "2016-08-28T09:18:12.727Z"
    },
    {
      "number": "2.4.2",
      "date": "2016-08-29T15:31:21.140Z"
    },
    {
      "number": "2.4.3",
      "date": "2016-08-29T16:09:40.818Z"
    },
    {
      "number": "2.5.0-beta.0",
      "date": "2016-09-02T23:52:50.584Z"
    },
    {
      "number": "2.5.0-beat.1",
      "date": "2016-09-03T07:07:52.399Z"
    },
    {
      "number": "2.5.0-beta.1",
      "date": "2016-09-03T07:08:02.816Z"
    },
    {
      "number": "2.5.0-beta.2",
      "date": "2016-09-03T07:36:20.213Z"
    },
    {
      "number": "2.5.0-beta.3",
      "date": "2016-09-03T08:01:50.275Z"
    },
    {
      "number": "2.5.0-beta.4",
      "date": "2016-09-04T02:08:57.653Z"
    },
    {
      "number": "2.4.4",
      "date": "2016-09-04T04:41:26.237Z"
    },
    {
      "number": "3.0.0",
      "date": "2016-09-12T15:49:28.727Z"
    },
    {
      "number": "3.0.1",
      "date": "2016-09-12T16:21:04.618Z"
    },
    {
      "number": "3.1.0-beta.0",
      "date": "2016-10-30T03:08:15.312Z"
    },
    {
      "number": "3.0.2",
      "date": "2016-11-09T10:38:24.746Z"
    },
    {
      "number": "3.0.3",
      "date": "2016-11-11T05:39:15.972Z"
    }
  ],
  "created": "2016-04-25T20:20:44.704Z",
  "modified": "2016-11-11T05:39:15.972Z",
  "lastPublisher": {
    "name": "kentcdodds",
    "email": "kent@doddsfamily.us"
  },
  "owners": [
    {
      "name": "kentcdodds",
      "email": "kent@doddsfamily.us"
    }
  ],
  "readme": "# p-s\n\n> aka npm-package-scripts or `nps` for short\n\nAll the benefits of npm scripts without the cost of a bloated package.json and limits of json\n\n[![Build Status][build-badge]][build]\n[![Code Coverage][coverage-badge]][coverage]\n[![Dependencies][dependencyci-badge]][dependencyci]\n[![version][version-badge]][package]\n[![downloads][downloads-badge]][npm-stat]\n[![MIT License][license-badge]][LICENSE]\n\n[![All Contributors](https://img.shields.io/badge/all_contributors-17-orange.svg?style=flat-square)](#contributors)\n[![PRs Welcome][prs-badge]][prs]\n[![Donate][donate-badge]][donate]\n[![Code of Conduct][coc-badge]][coc]\n[![Roadmap][roadmap-badge]][roadmap]\n[![Examples][examples-badge]][examples]\n\n## Quick Video Intro :tv:\n\n<a href=\"http://kcd.im/p-s-video\" title=\"Simplify and empower npm scripts with p-s\">\n  <img src=\"other/video-screenshot.png\" alt=\"Video Screenshot\" title=\"Video Screenshot\" width=\"700\" />\n</a>\n\n[Simplify and empower npm scripts with p-s][video] 11:19\n\n## The problem\n\nEven though npm scripts have a ton of advantages ([learn more][scripts-advantages]), it can grow into an\n[unmaintainable mess][mess] in your `package.json` file. Part of the problem is we're configuring scripts in `json`\nwhich has fundamental issues (like no comments).\n\n## This solution\n\n`p-s` is a package that solves this problem by allowing you to move your scripts to a `package-scripts.js` file. Because\nthis file is a JavaScript file, you can do a lot more with your project scripts. Here's an example of a\n`package-scripts.js` file:\n\n```javascript\nmodule.exports = {\n  scripts: {\n    default: 'node index.js',\n    lint: 'eslint .',\n    test: {\n      // learn more about Jest here: https://kcd.im/egghead-jest\n      default: 'jest',\n      watch: {\n        script: 'jest --watch',\n        description: 'run in the amazingly intelligent Jest watch mode'\n      }\n    },\n    build: {\n      default: 'webpack',\n      prod: 'webpack -p',\n    },\n    validate: 'nps --parallel lint,test,build',\n  },\n}\n```\n\nOr in case you prefer YAML, here's an example of how that would look in a `package-scripts.yml` file:\n\n```yml\nscripts:\n    default: node index.js\n    lint: eslint .\n    test:\n        # learn more about Jest here: https://kcd.im/egghead-jest\n        default: jest\n        watch:\n            script: jest --watch\n            description: run in the amazingly intelligent Jest watch mode\n    build:\n        default: webpack\n        prod: webpack -p\n    validate: nps --parallel lint,test,build\n```\n\nTo use `p-s`, it's recommended that you either install it globally (`npm i -g p-s`) or add `./node_modules/bin` to your\n`$PATH` (be careful that you know what you're doing when doing this).\n\nThen you can run:\n\n```console\np-s --help\n```\n\nWhich will output:\n\n```console\n  Usage: nps [options]\n\n  Options:\n\n    -h, --help                                  output usage information\n    -V, --version                               output the version number\n    -s, --silent                                Silent nps output\n    -p, --parallel <script-name1,script-name2>  Scripts to run in parallel (comma seprated)\n    -c, --config <filepath>                     Config file to use (defaults to nearest package-scripts.yml or package-scripts.js)\n    -l, --log-level <level>                     The log level to use (error, warn, info [default])\n    -r, --require <module>                      Module to preload\n\nAvailable scripts (camel or kebab case accepted)\n\nlint - eslint .\ntest - jest\ntest.watch - run in the amazingly intelligent Jest watch mode - jest --watch\nbuild - webpack\nbuild.prod - webpack -p\nvalidate - nps --parallel lint,test,build\n```\n\n**Because `p-s` is harder to type, it is recommended that you use the alias `nps` to interact with `p-s`, which is much\neasier to type and the rest of the documentation will use `nps`**\n\nNow, to run a script, you can run:\n\n```console\nnps lint\nnps test.watch\n# etc.\n```\n\nBut the fun doesn't end there! You can use a prefix:\n\n```console\nnps b # will run the build script\n```\n\nAnd these prefixes can go as deep as you like!\n\n```console\nnps b.p # will run the production build script\n```\n\nCool stuff right? And there's more on [the roadmap][roadmap].\n\n**Also** check out the [examples][examples]. You'll find some good stuff in there (including how to deal with windows\nand other cross-platform issues).\n\n**Note:** If you don't like installing things globally and don't want to muck with your `$PATH` (or don't want to\nrequire that your co-workers or project contributors to do so), then you can add a single script to your `package.json`.\nWe recommend that you use the `start` script because it requires less typing:\n\n**package.json**\n\n```json\n{\n  \"scripts\": {\n    \"start\": \"nps\"\n  }\n}\n```\n\nYou don't have to use the `start` script if you don't want. Note that if you're writing a node application, you're\nlikely using `nps` for starting your server. In that case, you can create a `default` script which will be run\nwhen `nps` is run without arguments (so effectively it'll work just the same). But if you'd prefer, you can use whatever\nyou wish. For example you could easily create a `nps` script and do: `npm run nps b`.\n\n## Installation\n\nThis module is distributed via [npm][npm] which is bundled with [node][node] and should\nbe installed as one of your project's `devDependencies`:\n\n```\nnpm install --save-dev p-s\n```\n\n### global installation\n\nYou can install this module globally also (this is recommended):\n\n```\nnpm install --global p-s\n```\n\nFrom here you can use `p-s` on the command line via one of the installed aliases: `nps` or `p-s`.\n\nIf you do this, you may also be interested in installing the shell autocompletion script. Do so by running:\n\n```\nnps completion <optionally-your-bash-profile-file>\n```\n\nThe bash profile file defaults to `~/.bash_profile` for bash and `~/.zshrc` for zsh. Special thanks to the\n[`omelette`][omelette] package for making this so easy.\n\n## Getting started\n\nIf you're already using npm scripts, you can get up and going really quickly with the `init` command:\n\n```\n./node_modules/.bin/nps init\n```\nor\n```\n./node_modules/.bin/nps init --type yaml\n```\n\nThis will use your `package.json` `scripts` to generate a `package-scripts.js` (respectively a `package-scripts.yml`)\nfile and update your `scripts` to utilize the `nps` binary.\n\n## API\n\n### CLI\n\n#### Commands\n\n##### help\n\nIf you have a `help` script, then your `help` script will be run. Otherwise, this will output the help.\n\n> Note: you can do this with `nps --help`, but if you're using the `start` script in your `package.json` this allows you\n> to run `npm start help` rather than `npm start -- --help`\n\n##### init\n\nAs indicated above, this will migrate your npm scripts to package-scripts.\n\n##### completion\n\nInstalls autocompletion functionality into your default bash or zsh configuration. You can override the default by\nproviding a specific file:\n\n```console\nnps completion ~/.bashrc\n```\n\nNote: you should probably only do this if you have the package installed globally. In that case you should probably also\nnormally use the `nps` alias rather than `p-s` because it's easier to type.\n\n#### CLI options\n\n##### -h, --help\n\nWill print out the help you see above (the available scripts are colored 🌈 and come from the config specified/default\nconfig).\n\n##### -s, --silent\n\nBy default, `nps` will log out to the console before running the command. You can add `-s` to your command to silence\nthis.\n\n##### -p, --parallel\n\nRun the given scripts in parallel. This enables handy workflows like this:\n\n```console\nnps -p lint,build,cover && nps check-coverage && nps report-coverage\n```\n\n##### -c, --config\n\nUse a different config\n\n```\nnps -c ./other/package-scripts.js lint\n```\n\nNormally, `npss` will look for a `package-scripts.js` file and load that to get the scripts. Generally you'll want to\nhave this at the root of your project (next to the `package.json`). But by specifying `-c` or `--config`, `nps` will\nuse that file instead.\n\n\n##### -l, --log-level\n\nSpecify the log level to use\n\n##### -r, --require\n\nYou can specify a module which will be loaded before the config file is loaded. This allows you to preload for example\nbabel-register so you can use all babel presets you like.\n\n##### args\n\nYou can pass additional arguments to the script(s) that are being spawned:\n\n```console\nnps lint --fix # --fix will be passed on to the lint script\n```\n\n##### scripts\n\nIf you don't use `-p` (because you don't need parallelism) then you can simply provide the name of the script like so:\n\n```console\nnps cover\n```\n\nAnd you can run multiple scripts in series by providing a comma-separated list:\n\n```console\nnps cover,check-coverage\n```\n\nThat's all for the CLI.\n\n### package-scripts.js\n\n`nps` expects to your `package-scripts.js` file to `module.exports` an object with the following properties:\n\n#### scripts\n\nThis can be an object or a function that returns an object. See the annotated example below for what this object can\nlook like (and different ways to run them):\n\n```javascript\nmodule.exports = {\n  scripts: {\n    default: 'echo \"This runs on `nps`\"', // nps\n    // you can assign a script property to a string\n    simple: 'echo \"this is easy\"', // nps simple\n    // you can specify whether some scripts should be excluded from the help list\n    hidden: {\n      script: 'debugging script',\n      hiddenFromHelp: true,\n    },\n    test: {\n      default: {\n        script: 'jest', // nps test\n        description: 'Run tests with jest',\n        // your scripts will be run with node_modules/.bin in the PATH, so you can use locally installed packages.\n        // this is done in a cross-platform way, so your scripts will work on Mac and Windows :)\n        // NOTE: if you need to set environment variables, I recommend you check out the cross-env package, which works\n        // great with p-s\n      },\n      otherStuff: {\n        // this one can be executed two different ways:\n        // 1. nps test.otherStuff\n        // 2. nps test.other-stuff\n        script: 'echo \"testing other things\"',\n        description: 'this is a handy description',\n      },\n    },\n    // this one can be executed a few different ways:\n    // 1. nps k\n    // 2. nps kebab-case\n    // 3. nps kebabCase\n    'kebab-case': 'echo \"kebab-case\"',\n    series: 'nps simple,test,kebabCase', // runs these other scripts in series\n  },\n}\n```\n\n```console\nnps k # runs nps kebab-case\n```\n\n#### options\n\nThis object is used to configure `nps` with the following options:\n\n##### silent\n\nSetting this to `true` will prevent `nps` from outputting anything for your script (normally you'll get simple output\nindicating the command that's being executed). This effectively sets the `logLevel` to `disable`.\n\n##### logLevel\n\nThis sets the logLevel of `nps`.\n\n## ENV variables\n\n### LOG_LEVEL\n\nBy setting `LOG_LEVEL` environment variable you can control the log level for `nps`\n\n## Log level\n\nLog levels available:\n\n- `error` - errors only\n- `warn` - errors and warnings only\n- `info` - info, errors, and warnings (default)\n\n## FAQ\n\n### Why `npm start`?\n\n_Just to be clear:_ You do **not** have to use the `start` script. You can use whatever you like. But I recommend using\nthe `start`. [npm scripts][npm scripts] are generally run with `npm run <script-name>`. There are some exceptions to\nthis. For example:\n\n1. `npm run test` === `npm test` === `npm t`\n2. `npm run start` === `nps`\n\nSo, while you could use a script called `script` and run `npm run script build`, I just think it reads more clearly to\njust use the `start` script and run `nps build`. It's also nice that it's fewer things to type. You could also use\nthe `test` script and then type even less: `npm t build`, but thats just... odd.\n\nNote, often servers are configured to run `npm start` by default to start the server. To allow for this case, you can\nprovide a `default` script at the root of your scripts which will be run when `npm start` is run without any arguments.\nEffectively this will allow you to have a script run when `npm start` is executed.\n\n## Inspiration\n\nThis was inspired by [a tweet][tweet] by [@sindresorhus][sindre].\n\n## Other Solutions\n\n- [scripty][scripty] has a solution for this problem as well. The reason I didn't go with that though is you still need\na line for every script (one of the pains I'm trying to solve) and a each script requires its own file (one of the\nbenefits of npm scripts I wanted to keep).\n\n## In the wild\n\n- [react-component-template](https://github.com/nkbt/react-component-template) uses `p-s` to implement shareable npm\nscripts. See then how dependent [react-swap](https://github.com/nkbt/react-swap) can reuse them.\n\nGOTCHAS:\n  - use `process.cwd()` as the base for all paths\n\n- [Hypercubed/EventsSpeedTests](https://github.com/Hypercubed/EventsSpeedTests) uses `p-s` to automate benchmark running\nand reporting in node and the browser.  `package-scripts.js` enables us to keep our scripts DRY.  Combined with\n[grunion](https://github.com/Hypercubed/grunion) allows benchmarks to be run, serially or concurrently, on glob\npatterns.\n\n- [SmithersAssistant/Smithers](https://github.com/SmithersAssistant/smithers) is an [electron](https://electron.atom.io)\nbased personal assistant. Smithers works on multiple platforms. Smithers uses `p-s` to dynamically find the current\nplatform and execute the dev environment. Now we don't have to manually update the `package.json` scripts when you are\non a different platform!\n\n## Contributors\n\nThanks goes to these people ([emoji key][emojis]):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n| [<img src=\"https://avatars.githubusercontent.com/u/1500684?v=3\" width=\"100px;\"/><br /><sub>Kent C. Dodds</sub>](http://kent.doddsfamily.us)<br />[💻](https://github.com/kentcdodds/p-s/commits?author=kentcdodds) [📖](https://github.com/kentcdodds/p-s/commits?author=kentcdodds) 🚇 💡 📹 👀 | [<img src=\"https://avatars.githubusercontent.com/u/532272?v=3\" width=\"100px;\"/><br /><sub>David Wells</sub>](http://davidwells.io)<br />[💻](https://github.com/kentcdodds/p-s/commits?author=DavidWells) | [<img src=\"https://avatars.githubusercontent.com/u/802242?v=3\" width=\"100px;\"/><br /><sub>Abhishek Shende</sub>](https://twitter.com/abhishekisnot)<br />[💻](https://github.com/kentcdodds/p-s/commits?author=abhishekisnot) [⚠️](https://github.com/kentcdodds/p-s/commits?author=abhishekisnot) | [<img src=\"https://avatars.githubusercontent.com/u/185649?v=3\" width=\"100px;\"/><br /><sub>Rowan Oulton</sub>](http://travelog.io)<br />[💻](https://github.com/kentcdodds/p-s/commits?author=rowanoulton) [📖](https://github.com/kentcdodds/p-s/commits?author=rowanoulton) [⚠️](https://github.com/kentcdodds/p-s/commits?author=rowanoulton) | [<img src=\"https://avatars.githubusercontent.com/u/1915716?v=3\" width=\"100px;\"/><br /><sub>Gilad Goldberg</sub>](https://github.com/giladgo)<br />[💻](https://github.com/kentcdodds/p-s/commits?author=giladgo) | [<img src=\"https://avatars.githubusercontent.com/u/14267457?v=3\" width=\"100px;\"/><br /><sub>Tim McGee</sub>](https://github.com/tim-mcgee)<br />[💻](https://github.com/kentcdodds/p-s/commits?author=tim-mcgee) [📖](https://github.com/kentcdodds/p-s/commits?author=tim-mcgee) | [<img src=\"https://avatars.githubusercontent.com/u/175264?v=3\" width=\"100px;\"/><br /><sub>Nik Butenko</sub>](http://butenko.me)<br />💡 [💻](https://github.com/kentcdodds/p-s/commits?author=nkbt) |\n| :---: | :---: | :---: | :---: | :---: | :---: | :---: |\n| [<img src=\"https://avatars.githubusercontent.com/u/1972567?v=3\" width=\"100px;\"/><br /><sub>Tommy</sub>](http://www.tommyleunen.com)<br />[🐛](https://github.com/kentcdodds/p-s/issues?q=author%3Atleunen) [💻](https://github.com/kentcdodds/p-s/commits?author=tleunen) [⚠️](https://github.com/kentcdodds/p-s/commits?author=tleunen) 👀 | [<img src=\"https://avatars.githubusercontent.com/u/509946?v=3\" width=\"100px;\"/><br /><sub>Jayson Harshbarger</sub>](http://www.hypercubed.com)<br />💡 👀 | [<img src=\"https://avatars.githubusercontent.com/u/1355481?v=3\" width=\"100px;\"/><br /><sub>JD Isaacks</sub>](http://www.jisaacks.com)<br />[💻](https://github.com/kentcdodds/p-s/commits?author=jisaacks) [⚠️](https://github.com/kentcdodds/p-s/commits?author=jisaacks) | [<img src=\"https://avatars.githubusercontent.com/u/924465?v=3\" width=\"100px;\"/><br /><sub>Christopher Hiller</sub>](https://boneskull.com)<br />👀 | [<img src=\"https://avatars.githubusercontent.com/u/1834413?v=3\" width=\"100px;\"/><br /><sub>Robin Malfait</sub>](https://robinmalfait.com)<br />💡 | [<img src=\"https://avatars.githubusercontent.com/u/622118?v=3\" width=\"100px;\"/><br /><sub>Eric McCormick</sub>](https://ericmccormick.io)<br />👀 [📖](https://github.com/kentcdodds/p-s/commits?author=edm00se) | [<img src=\"https://avatars.githubusercontent.com/u/1913805?v=3\" width=\"100px;\"/><br /><sub>Sam Verschueren</sub>](https://twitter.com/SamVerschueren)<br />👀 |\n| [<img src=\"https://avatars.githubusercontent.com/u/1155589?v=3\" width=\"100px;\"/><br /><sub>Sorin Muntean</sub>](https://github.com/sxn)<br />[💻](https://github.com/kentcdodds/p-s/commits?author=sxn) [⚠️](https://github.com/kentcdodds/p-s/commits?author=sxn) [📖](https://github.com/kentcdodds/p-s/commits?author=sxn) | [<img src=\"https://avatars.githubusercontent.com/u/1970063?v=3\" width=\"100px;\"/><br /><sub>Keith Gunn</sub>](https://github.com/gunnx)<br />[🐛](https://github.com/kentcdodds/p-s/issues?q=author%3Agunnx) [💻](https://github.com/kentcdodds/p-s/commits?author=gunnx) [⚠️](https://github.com/kentcdodds/p-s/commits?author=gunnx) | [<img src=\"https://avatars.githubusercontent.com/u/1019478?v=3\" width=\"100px;\"/><br /><sub>Joe Martella</sub>](http://martellaj.github.io)<br />[🐛](https://github.com/kentcdodds/p-s/issues?q=author%3Amartellaj) [💻](https://github.com/kentcdodds/p-s/commits?author=martellaj) [⚠️](https://github.com/kentcdodds/p-s/commits?author=martellaj) |\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors][all-contributors] specification.\nContributions of any kind welcome!\n\n## LICENSE\n\nMIT\n\n[scripts-advantages]: https://medium.freecodecamp.com/why-i-left-gulp-and-grunt-for-npm-scripts-3d6853dd22b8#.9qghcfdr9\n[mess]: https://github.com/ReactiveX/rxjs/blob/a3ec89605a24a6f54e577d21773dad11f22fdb14/package.json#L14-L96\n[roadmap]: https://github.com/kentcdodds/p-s/blob/master/other/ROADMAP.md\n[examples]: https://github.com/kentcdodds/p-s/blob/master/other/EXAMPLES.md\n[quick-run]: https://npmjs.com/package/npm-quick-run\n[npm]: https://www.npmjs.com/\n[node]: https://nodejs.org\n[build-badge]: https://img.shields.io/travis/kentcdodds/p-s/master.svg?style=flat-square\n[build]: https://travis-ci.org/kentcdodds/p-s\n[coverage-badge]: https://img.shields.io/codecov/c/github/kentcdodds/p-s.svg?style=flat-square\n[coverage]: https://codecov.io/github/kentcdodds/p-s\n[dependencyci-badge]: https://dependencyci.com/github/kentcdodds/p-s/badge?style=flat-square\n[dependencyci]: https://dependencyci.com/github/kentcdodds/p-s\n[version-badge]: https://img.shields.io/npm/v/p-s.svg?style=flat-square\n[package]: https://www.npmjs.com/package/p-s\n[downloads-badge]: https://img.shields.io/npm/dm/p-s.svg?style=flat-square\n[npm-stat]: http://npm-stat.com/charts.html?package=p-s&from=2016-04-01\n[license-badge]: https://img.shields.io/npm/l/p-s.svg?style=flat-square\n[license]: https://github.com/kentcdodds/p-s/blob/master/LICENSE\n[prs-badge]: https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\n[prs]: http://makeapullrequest.com\n[donate-badge]: https://img.shields.io/badge/%EF%BC%84-support-green.svg?style=flat-square\n[donate]: http://kcd.im/donate\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/kentcdodds/p-s/blob/master/other/CODE_OF_CONDUCT.md\n[roadmap-badge]: https://img.shields.io/badge/%F0%9F%93%94-roadmap-CD9523.svg?style=flat-square\n[examples-badge]: https://img.shields.io/badge/%F0%9F%92%A1-examples-8C8E93.svg?style=flat-square\n[tweet]: https://twitter.com/sindresorhus/status/724259780676575232\n[sindre]: https://github.com/sindresorhus\n[emojis]: https://github.com/kentcdodds/all-contributors#emoji-key\n[all-contributors]: https://github.com/kentcdodds/all-contributors\n[clarity]: https://github.com/kentcdodds/p-s/issues/1\n[scripty]: https://npmjs.com/package/scripty\n[npm scripts]: https://docs.npmjs.com/misc/scripts\n[video]: http://kcd.im/p-s-video\n[omelette]: https://npmjs.com/package/omelette\n"
}