{
  "name": "selfup-rejs",
  "version": "1.0.20",
  "description": "Event based, key value store on the file system. Basic server side db in js for node developers. Geared towards NodeBots/IoT.",
  "main": "re.js",
  "scripts": {
    "test": "mocha"
  },
  "keywords": [
    "db",
    "rejs",
    "regis",
    "js",
    "es6",
    "es7",
    "database",
    "event based",
    "event base",
    "key value store",
    "key",
    "value",
    "store",
    "nodebots",
    "raspberry pi",
    "arduino",
    "electron"
  ],
  "author": {
    "name": "selfup"
  },
  "license": "MIT",
  "homepage": "https://github.com/selfup/rejs",
  "dependencies": {
    "lodash": "^4.9.0"
  },
  "devDependencies": {
    "chai": "^3.5.0",
    "istanbul": "^0.4.3",
    "mocha": "^2.4.5"
  },
  "gitHead": "9560bc4ee73eda9bb5702f682f8c71c19b8a05f4",
  "_npmVersion": "3.8.6",
  "_nodeVersion": "5.11.0",
  "dist": {
    "shasum": "eac7c09d3c81d7429e27f3597d86c55ea51e1bcd",
    "tarball": "http://registry.npmjs.org/selfup-rejs/-/selfup-rejs-1.0.20.tgz"
  },
  "stars": 0,
  "versions": [
    {
      "number": "1.0.0",
      "date": "2016-04-10T01:11:43.893Z"
    },
    {
      "number": "1.0.1",
      "date": "2016-04-10T01:18:37.184Z"
    },
    {
      "number": "1.0.2",
      "date": "2016-04-10T02:19:45.938Z"
    },
    {
      "number": "1.0.3",
      "date": "2016-04-10T02:24:49.237Z"
    },
    {
      "number": "1.0.4",
      "date": "2016-04-10T02:26:46.499Z"
    },
    {
      "number": "1.0.5",
      "date": "2016-04-10T02:29:55.434Z"
    },
    {
      "number": "1.0.6",
      "date": "2016-04-10T20:37:02.183Z"
    },
    {
      "number": "1.0.7",
      "date": "2016-04-10T21:19:18.722Z"
    },
    {
      "number": "1.0.8",
      "date": "2016-04-10T21:38:17.074Z"
    },
    {
      "number": "1.0.9",
      "date": "2016-04-10T21:42:50.494Z"
    },
    {
      "number": "1.0.10",
      "date": "2016-04-10T21:44:49.157Z"
    },
    {
      "number": "1.0.11",
      "date": "2016-04-10T21:46:08.031Z"
    },
    {
      "number": "1.0.12",
      "date": "2016-04-10T21:47:55.923Z"
    },
    {
      "number": "1.0.13",
      "date": "2016-04-11T05:46:59.596Z"
    },
    {
      "number": "1.0.14",
      "date": "2016-04-12T02:52:56.629Z"
    },
    {
      "number": "1.0.16",
      "date": "2016-04-12T22:45:53.303Z"
    },
    {
      "number": "1.0.17",
      "date": "2016-04-13T21:17:26.906Z"
    },
    {
      "number": "1.0.18",
      "date": "2016-04-15T00:23:15.637Z"
    },
    {
      "number": "1.0.19",
      "date": "2016-04-17T00:12:27.611Z"
    },
    {
      "number": "1.0.20",
      "date": "2016-04-25T22:07:36.936Z"
    }
  ],
  "created": "2016-04-10T01:11:43.893Z",
  "modified": "2016-04-25T22:07:36.936Z",
  "lastPublisher": {
    "name": "selfup",
    "email": "git@selfup.me"
  },
  "owners": [
    {
      "name": "selfup",
      "email": "git@selfup.me"
    }
  ],
  "readme": "# Selfup - Rejs\n\n### File based database! Built for developer freedom. Geared for NodeBots/IoT\n\n#### Event Based Key Value Store:\n\nMade to store hardware data on the filesystem!\n\n**Installation:**\n\n`npm install selfup-rejs --save`\n\n\n**Warning**\n\nThis was built with node 5.10 +\n\nPlease make sure your node version supports ES6!\n\n**Ensure your data is safe and not in version control:**\n\n`echo 'selfup-rejs/*' >> .gitignore`\n\n**Load package:**\n\n    const Selfup = require('selfup-rejs')\n    const rejs = new Selfup\n\n**Official DOCS:**\n\nDocumentation: [right here!](https://github.com/selfup/rejs/blob/master/DOCS.md)\n\n### Example Use Case Repos:\n\n**Raspberry Pi**\n\n`NodeBots/JohnnyFive` and logging event data: [Repo](https://github.com/selfup/rpi-rejs)\n\n**Arduino**\n\n`NodeBots/JohnnyFive` and logging event data: [Repo](https://github.com/selfup/arduino-rejs)\n\n### Video on how to use selfup-rejs:\n\n[Link to Youtube Vid](https://www.youtube.com/watch?v=dVTePMkw9EE&feature=youtu.be&a)\n\n### How to Use:\n\nUsing RESTful verbs to help explain from a high level what is happening.\n\nThis is not a server.\n\nThis is a database that writes and reads files on the server.\n\n**Verbs/Methods**\n\n* (POST)   Create a table: `rejs.createTable('tablename')`\n* (POST)   Create Multiple Tables: `rejs.createTables('one', 'two', 'three')`\n* (POST)   Add data to table: `rejs.newData('tablename', dataObject)`\n* **(POST)   Add data to Multiple Tables:**\n```\nrejs.newDatas(\n    ['firstTable', {test: \"data\"}],\n    ['secondTable', {test: \"data\"}],\n    ['thirdTable', {test: \"data\"}]\n)\n```\n* (DELETE) Delete data by ID in a table: `rejs.deleteById('tablename', '2')`\n* (DELETE) Drop a table: `rejs.dropTable('tablename')`\n* (DELETE) Multi-Table Drop: `rejs.dropTables('firstTable', 'secondTable')`\n* (PUT)    Replace/Overwrite a table: `rejs.updateTable('tablename', dataObject)`\n* **(PUT)    Replace/Overwrite Multiple tables:**\n```\nrejs.updateTables(\n    ['firstTable', {test: \"new data\"}],\n    ['secondTable', {test: \"new data\"}],\n    ['thirdTable', {test: \"new data\"}]\n)\n```\n* (GET)    Table Object Query: `rejs.getTable('tablename')`\n* (GET)    Multi-Table Query: `rejs.getTables('table', 'table2', 'table3')`\n* (GET)    Find by ID: `rejs.findId('tablename', 'id')`\n* (GET)    Where/Select: `rejs.where('tablename', 'any value in a flat object')`\n\n### Potential use Cases:\n\n#### JohnnyFive/NodeBots/IoT\n\n* Store temperature data over time\n* Store how many times a door has been opened\n* Store telemetry data\n* Store Data on a Raspberry Pi\n* Store Data on a server hooked up to an Arduino\n* Store Data on an Arduino Yun/BeagleBone/etc...\n* Many possibilities for IoT\n\n#### Electron OSX/Windows Apps\n\n* Store file paths to load files needed on load\n* Store small notes for a twitter like notes app\n* Store image url's\n* Store any data that you need to persist from app shutdown back to open\n\n#### VPS\n\n* Use it as a small DB for a low volume production app\n* Use it to get quickly set up, and then move on to Mongo/Postgres once your app is mature and MVP is proven\n\n### Test Coverage\n\n#### To get 100% coverage:\n\nIf the `selfup-rejs` folder is in your directory:\n\n```\nnpm install\nrm -rf selfup-rejs\n```\n\nThen you can run:\n\n`./node_modules/.bin/istanbul cover _mocha`\n\nNow the selfup-rejs folder will be in your directory again!\n\n![](http://i.imgur.com/CAEz4uU.png)\n\n#### To run tests without coverage:\n\n`npm test`\n"
}