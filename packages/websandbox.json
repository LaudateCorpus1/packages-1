{
  "name": "websandbox",
  "version": "0.0.4",
  "description": "A sandbox library for runnung javascript inside HTML5 sandboxed iframe",
  "main": "dist/websandbox.js",
  "scripts": {
    "build": "rm -rf dist && webpack -p --devtool sourcemap",
    "lint": "eslint lib test",
    "test": "karma start",
    "start": "webpack-dev-server --config webpack-examples.config.js --devtool inline-source-map --port 9544 --colors --progress"
  },
  "keywords": [
    "sandbox",
    "web",
    "untrusted",
    "widget",
    "security",
    "restricted"
  ],
  "author": {
    "name": "Andrey Skladchikov"
  },
  "license": "MIT",
  "devDependencies": {
    "babel-core": "6.4.0",
    "babel-eslint": "4.1.6",
    "babel-loader": "6.2.1",
    "babel-plugin-transform-object-assign": "6.3.13",
    "babel-preset-es2015": "6.3.13",
    "chai": "3.4.1",
    "electron-prebuilt": "0.36.3",
    "es6-promise-polyfill": "1.2.0",
    "eslint": "1.10.3",
    "eslint-config-defaults": "8.0.2",
    "html-webpack-plugin": "1.7.0",
    "karma": "0.13.19",
    "karma-chai": "0.1.0",
    "karma-chrome-launcher": "0.2.2",
    "karma-electron-launcher": "0.1.0",
    "karma-mocha": "0.2.1",
    "karma-sinon": "1.0.4",
    "karma-sinon-chai": "1.1.0",
    "karma-sourcemap-loader": "0.3.6",
    "karma-webpack": "1.7.0",
    "mocha": "2.3.4",
    "sinon": "1.17.2",
    "webpack": "1.12.11",
    "webpack-config-merger": "0.0.5",
    "webpack-dev-server": "1.14.1"
  },
  "dependencies": {
    "an-uuid": "1.0.0",
    "file-loader": "0.8.5",
    "html-loader": "0.4.0",
    "compile-code-loader": "0.0.2"
  },
  "gitHead": "5c8682b1a8d1645679cf6faace1e2b804d9e2249",
  "_npmVersion": "2.14.9",
  "_nodeVersion": "0.12.9",
  "dist": {
    "shasum": "e401661a16ff7fe3793560cc0f24bd9a10c86dbe",
    "tarball": "http://registry.npmjs.org/websandbox/-/websandbox-0.0.4.tgz"
  },
  "versions": [
    {
      "number": "0.0.1",
      "date": "2016-01-18T14:24:39.404Z"
    },
    {
      "number": "0.0.2",
      "date": "2016-01-18T14:28:51.821Z"
    },
    {
      "number": "0.0.3",
      "date": "2016-01-19T17:32:32.932Z"
    },
    {
      "number": "0.0.4",
      "date": "2016-01-20T10:55:56.909Z"
    }
  ],
  "created": "2016-01-18T14:24:39.404Z",
  "modified": "2016-01-20T10:55:56.909Z",
  "lastPublisher": {
    "name": "huston007",
    "email": "andrey.skladchikov@gmail.com"
  },
  "owners": [
    {
      "name": "huston007",
      "email": "andrey.skladchikov@gmail.com"
    }
  ],
  "readme": "# Websandbox [![Build Status](https://travis-ci.org/huston007/websandbox.svg?branch=master)](https://travis-ci.org/huston007/websandbox)\n\nWebsandbox library provides a way to execute unsafe js code inside HTML5 sandbox - iframe with sandbox attribute.\nIt is usable to host user provided widgets and similar cases.\n\n## Simple usage (see [examples folder](examples) to more information): \n\n```js\nimport Sandbox from 'websandbox';\n\nSandbox.create({}).promise\n    .then(function(sandbox) {\n        sandbox.run('console.log(\"Hello from sandbox!\")');\n    });\n```\n\n## Function run (will be stringified and called inside sandbox)\n\nFunction **should** has \"name\" property to be able to run.\n\n```js\nimport Sandbox from 'websandbox';\n\nvar localApi = {\n    testApiFn: function (message) {\n        console.log('Host function called from iframe with: ' + message);\n    }\n};\n\nSandbox.create(localApi).promise\n    .then(function(sandbox) {\n        sandbox.run(function functionName() {\n            Websandbox.connection.remote.testApiFn(\"some argument\");\n        });\n    });\n```\n\n## Communication with sandboxed code\n```js\nimport Sandbox from 'websandbox';\n\nvar localApi = {\n    testApiFn: function (message) {\n        console.log('Host function called from iframe with: ' + message);\n    }\n};\n\nconst sandbox = Sandbox.create(localApi, {frameContainer: '.iframe__container', frameClassName: 'simple__iframe'});\nsandbox.promise\n    .then(() => {\n        console.log('Sandbox is created. Trying to run code inside');\n\n        return sandbox.run(`\n            console.info(\"Sandboxed code initialized successfully\");\n            var title = document.createElement('h3');\n            title.innerHTML = \"Content is generated from the sandbox\";\n            document.body.appendChild(title);\n            Websandbox.connection.remote.testApiFn(\"some argument\");\n\n            Websandbox.connection.setLocalApi({\n                sandboxedMethod: function(message) {\n                    console.info('sandboxedMethod called successfully:', message);\n                    return 'this is sandboxedMethod result';\n                }\n            });\n        `);\n    })\n    .then(() => console.log('Code has been ran'))\n    .then(() => {\n        console.log('Calling sandboxedMethod...');\n        return sandbox.connection.remote.sandboxedMethod('hello from host');\n    })\n    .then(res => console.log('Call was successful:', res));\n```\n\n## Import styles\n\n```js\nimport Sandbox from 'websandbox';\n\nSandbox.create({}).promise\n    .then(function(sandbox) {\n        sandbox.injectStyle(`\n            html, body {\n                background-color: blue;\n            }\n        `);\n    });\n```\n"
}