{
  "name": "serial-worker",
  "version": "1.0.5",
  "description": "Run node-serial module in another node thread",
  "repository": {
    "user": "weiway",
    "repo": "node-serialport-worker",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/weiway/node-serialport-worker/tarball/master",
    "clone_url": "https://github.com/weiway/node-serialport-worker",
    "https_url": "https://github.com/weiway/node-serialport-worker",
    "travis_url": "https://travis-ci.org/weiway/node-serialport-worker",
    "zip_url": "https://github.com/weiway/node-serialport-worker/archive/master.zip",
    "api_url": "https://api.github.com/repos/weiway/node-serialport-worker"
  },
  "scripts": {
    "test": "grunt basic --verbose"
  },
  "main": "./serialport",
  "author": {
    "name": "weizhi wang",
    "email": "weizhi.station.wang@gmail.com"
  },
  "license": "MIT",
  "dependencies": {
    "serialport": "^2.0.5"
  },
  "devDependencies": {
    "chai": "^3.5.0",
    "grunt": "^0.4.5",
    "grunt-cli": "^0.1.13",
    "grunt-contrib-jshint": "^1.0.0",
    "grunt-mocha-test": "^0.12.7",
    "mocha": "^2.4.5",
    "sandboxed-module": "^2.0.3",
    "sinon": "^1.17.3",
    "sinon-chai": "^2.8.0",
    "time-grunt": "^1.3.0"
  },
  "gitHead": "2a64ae694915d80e5390f3f31ff1c80977a6b43c",
  "homepage": "https://github.com/weiway/node-serialport-worker#readme",
  "_npmVersion": "3.7.3",
  "_nodeVersion": "5.8.0",
  "dist": {
    "shasum": "30d76aad27056d6c652405e664b8b7251e5e2905",
    "tarball": "http://registry.npmjs.org/serial-worker/-/serial-worker-1.0.5.tgz"
  },
  "versions": [
    {
      "number": "1.0.0",
      "date": "2016-02-23T23:43:25.350Z"
    },
    {
      "number": "1.0.1",
      "date": "2016-02-25T00:03:29.850Z"
    },
    {
      "number": "1.0.2",
      "date": "2016-03-09T18:53:02.247Z"
    },
    {
      "number": "1.0.3",
      "date": "2016-03-10T22:43:01.762Z"
    },
    {
      "number": "1.0.4",
      "date": "2016-03-25T18:55:26.898Z"
    },
    {
      "number": "1.0.5",
      "date": "2016-03-25T22:31:48.134Z"
    }
  ],
  "created": "2016-02-23T23:43:25.350Z",
  "modified": "2016-03-25T22:31:48.134Z",
  "lastPublisher": {
    "name": "weiway",
    "email": "weizhi.station.wang@gmail.com"
  },
  "owners": [
    {
      "name": "weiway",
      "email": "weizhi.station.wang@gmail.com"
    }
  ],
  "readme": "[![Build Status](https://travis-ci.org/weiway/node-serialport-worker.svg?branch=master)](https://travis-ci.org/weiway/node-serialport-worker)\n[![Dependency Status](https://david-dm.org/weiway/node-serialport-worker.svg)](https://david-dm.org/weiway/node-serialport-worker)\n\n## Node-Serialport-Worker ##\n\n### Run Node-serialport in a separate thread!###\n\nExtremely high CPU usage inside Electron? https://github.com/atom/electron/issues/2928\n\nTry this module. Electron + SerialPort = better IOT\n\nThis module is aimed for creating a interface for using node-serialport in a seperate node thread\n\nMy goal is to have the same api as the original node-serialport https://github.com/voodootikigod/node-serialport.\n\n\n### API ###\nI'm trying to create a uniform api to make using serial-worker as easy as re-writting          ```require(\"serialport\")``` to  ```require(\"serial-worker\")```\n\nCurrent Supported API:\n\n-  ```Serial.SerialPort``` SerialPort Constructor\n-  ```Serial.list``` List current available ports\n-  ```Serial.parser``` Original serialport parsers\n-  ```SerialPort.isOpen(callback)``` Note this method is Async, which is different than the original ```serialport.isOpen```\n-  ```SerialPort.on('open')``` SerialPort Open Event\n-  ```SerialPort.on('data')``` SerialPort Data Event\n-  ```SerialPort.on('close')``` SerialPort Close Event\n- ```SerialPort.on('error')```\n- ```SerialPort.pause()``` Pause Connection\n- ```SerialPort.resume()``` Resume Connection\n-  ```SerialPort.close(callback)``` Close port\n-  ```SerialPort.open(callback)``` Open port\n-  ```SerialPort.set(options,callback)```\n-  ```SerialPort.write(buffer,callback)``` Writes data to the SerialPort.\n- ```SerialPort.flush(callback)```\n- ```SerialPort.drain(callback)```\n\n\n\n\n### Usage ###\n```\n$ npm install serial-worker\n```\n\nUse serial worker just like the original node-serialport\n\n```\nconst serial = require('serialport-worker');\nvar port = new serial.SerialPort(path, options, immediate, callback);\n\nserial.list((e,ports)=>{\n    console.log(ports)\n});\n\nport.on('data',(data)=>{\n  console.log(data);\n});\n\nport.open(()=>{\n    port.write(new Buffer('Hello!','utf8'),()=>{\n        console.log('Written!');\n    });\n})\n```\n\n###Known Issue###\n\nPlease let Me know any problem/issues\n\n\nFor ```serialport``` API https://github.com/voodootikigod/node-serialport\n\n###Testing###\n\nI'm trying to figure out how to test port connection on ```travis-ci```\nRight now I'm testing locally with a Arduino Uno\n\nIf you want to test locally, please set ```noTravis``` to ```true``` in ```test/serialport-0.js```\n\n\n\n\n\n\nCurrently some tests are copied from node-serialport ( https://github.com/voodootikigod/node-serialport ), in the future, hope serialport worker will pass all node-serialport tests\n"
}