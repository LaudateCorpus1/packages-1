{
  "name": "electron-heapdump",
  "main": "./lib/main",
  "version": "0.3.7",
  "description": "Make a dump of the V8 heap for later inspection.",
  "homepage": "https://github.com/appetizermonster/electron-heapdump",
  "author": {
    "name": "Heejin Lee",
    "email": "monster@teamappetizer.com"
  },
  "repository": {
    "user": "appetizermonster",
    "repo": "electron-heapdump",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/appetizermonster/electron-heapdump/tarball/master",
    "clone_url": "https://github.com/appetizermonster/electron-heapdump",
    "https_url": "https://github.com/appetizermonster/electron-heapdump",
    "travis_url": "https://travis-ci.org/appetizermonster/electron-heapdump",
    "zip_url": "https://github.com/appetizermonster/electron-heapdump/archive/master.zip",
    "api_url": "https://api.github.com/repos/appetizermonster/electron-heapdump"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "license": "ISC",
  "scripts": {
    "test": "tap test/test-*",
    "install": "node-gyp rebuild"
  },
  "devDependencies": {
    "shelljs": "~0.3.0",
    "tap": "~0.4.12"
  },
  "gypfile": true,
  "gitHead": "3e308b302fb2d7beba5b1c4a6eaf92caba51cbf2",
  "_npmVersion": "3.6.0",
  "_nodeVersion": "5.7.0",
  "dist": {
    "shasum": "ab8056a9d2e7019c6074c45ff44e0c08dd2a2182",
    "tarball": "http://registry.npmjs.org/electron-heapdump/-/electron-heapdump-0.3.7.tgz"
  },
  "versions": [
    {
      "number": "0.3.7",
      "date": "2016-04-13T11:00:12.354Z"
    }
  ],
  "created": "2016-04-13T11:00:12.354Z",
  "modified": "2016-04-13T11:00:12.354Z",
  "lastPublisher": {
    "name": "appetizermonster",
    "email": "monster@teamappetizer.com"
  },
  "owners": [
    {
      "name": "appetizermonster",
      "email": "monster@teamappetizer.com"
    }
  ],
  "readme": "node-heapdump\r\n===\r\n\r\nMake a dump of the V8 heap for later inspection.\r\n\r\n### Install\r\n\r\n    npm install heapdump\r\n\r\nOr, if you are running node.js v0.6 or v0.8:\r\n\r\n    npm install heapdump@0.1.0\r\n\r\n### Build\r\n\r\n    node-gyp configure build\r\n\r\n### Usage\r\n\r\nLoad the add-on in your application:\r\n\r\n    var heapdump = require('heapdump');\r\n\r\nThe module exports a single `writeSnapshot([filename], [callback])` function\r\nthat writes out a snapshot.  `filename` defaults to\r\n`heapdump-<sec>.<usec>.heapsnapshot` when omitted.\r\n\r\n    heapdump.writeSnapshot('/var/local/' + Date.now() + '.heapsnapshot');\r\n\r\nThe function also takes an optional callback function which is called upon\r\ncompletion of the heap dump.\r\n\r\n    heapdump.writeSnapshot(function(err, filename) {\r\n      console.log('dump written to', filename);\r\n    });\r\n\r\nThe snapshot is written synchronously to disk.  When the JS heap is large,\r\nit may introduce a noticeable \"hitch\".\r\n\r\nPreviously, node-heapdump first forked the process before writing the snapshot,\r\nmaking it effectively asynchronous.  However, it broke the comparison view in\r\nChrome DevTools and is fundamentally incompatible with node.js v0.12.  If you\r\nreally want the old behavior and know what you are doing, you can enable it\r\nagain by setting `NODE_HEAPDUMP_OPTIONS=fork` in the environment:\r\n\r\n    $ env NODE_HEAPDUMP_OPTIONS=fork node script.js\r\n\r\nOn UNIX platforms, you can force a snapshot by sending the node.js process\r\na SIGUSR2 signal:\r\n\r\n    $ kill -USR2 <pid>\r\n\r\nThe SIGUSR2 signal handler is enabled by default but you can disable it\r\nby setting `NODE_HEAPDUMP_OPTIONS=nosignal` in the environment:\r\n\r\n    $ env NODE_HEAPDUMP_OPTIONS=nosignal node script.js\r\n\r\n### Inspecting the snapshot\r\n\r\nOpen [Google Chrome](https://www.google.com/intl/en/chrome/browser/) and\r\npress F12 to open the developer toolbar.\r\n\r\nGo to the `Profiles` tab, right-click in the tab pane and select\r\n`Load profile...`.\r\n\r\nSelect the dump file and click `Open`.  You can now inspect the heap snapshot\r\nat your leisure.\r\n\r\nNote that Chrome will refuse to load the file unless it has the `.heapsnapshot`\r\nextension.\r\n\r\n### Caveats\r\n\r\nOn UNIX systems, the rule of thumb for creating a heap snapshot is that it\r\nrequires memory twice the size of the heap at the time of the snapshot.\r\nIf you end up with empty or truncated snapshot files, check the output of\r\n`dmesg`; you may have had a run-in with the system's OOM killer or a resource\r\nlimit enforcing policy, like `ulimit -u` (max user processes) or `ulimit -v`\r\n(max virtual memory size).\r\n"
}