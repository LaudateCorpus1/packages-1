{
  "name": "universal-web-template",
  "version": "2.0.0",
  "description": "An universal web proejct template - let you quickly set up a project using Handlebars, sass and ReactJS for front-end templating. It can be adopted with most modern CMS.",
  "keywords": [
    "font-end",
    "framework",
    "web template",
    "Sass",
    "Handlebars",
    "ReactJs",
    "browser-sync"
  ],
  "files": [
    "template"
  ],
  "main": "app/index.js",
  "repository": {
    "type": "git",
    "url": "http://bitbucket.org/haolongfan/universal-web-template"
  },
  "author": {
    "name": "Henry Fan"
  },
  "company": "Sparkup Web",
  "license": "MIT",
  "homepage": "https://www.npmjs.com/package/universal-web-template",
  "gitHead": "8c58f4a064f9da6e7ef297209d426ff7fe8dcfe2",
  "scripts": {},
  "_npmVersion": "3.7.5",
  "_nodeVersion": "5.1.0",
  "dist": {
    "shasum": "22247c73a067633c02aac7ab2f2e500b1017a676",
    "tarball": "http://registry.npmjs.org/universal-web-template/-/universal-web-template-2.0.0.tgz"
  },
  "versions": [
    {
      "number": "1.0.6",
      "date": "2016-01-28T01:01:31.711Z"
    },
    {
      "number": "1.0.7",
      "date": "2016-01-28T01:12:43.190Z"
    },
    {
      "number": "1.8.0",
      "date": "2016-07-15T05:14:44.680Z"
    },
    {
      "number": "1.8.1",
      "date": "2016-07-15T05:24:59.709Z"
    },
    {
      "number": "1.9.0",
      "date": "2016-08-18T07:33:03.450Z"
    },
    {
      "number": "2.0.0",
      "date": "2016-09-30T01:35:46.273Z"
    }
  ],
  "created": "2016-01-28T01:01:31.711Z",
  "modified": "2016-09-30T01:35:46.273Z",
  "lastPublisher": {
    "name": "henryfan",
    "email": "FHL-VP@hotmail.com"
  },
  "owners": [
    {
      "name": "henryfan",
      "email": "FHL-VP@hotmail.com"
    }
  ],
  "readme": "[![Build status][ci-image]][ci-url]\n\n# Universal Web Template\nAn universal web project template - let you quickly set up a project using Handlebars, sass and ReactJS for front-end templating. It can be adopted with most modern CMS.\n\n## Directory Layout\n\n```\n.\n├── /app/                       # NodeJS middleware, including data model, models and controllers\n│   ├── /controllers/           # NodeJS Controllers\n│   ├── /models/                # NodeJS Models\n├── /build/                     # The folder for compiled output\n├── /gulp/                      # All gulp tasks\n│   ├── /helpers/               # Handlebars Template Helpers\n│   ├── /modules/               # Configuration of modules\n│   ├── /tasks/                 # All gulp tasks\n├── /node_modules/              # 3rd-party libraries and utilities\n├── /public/                    # The folder for template output\n├── /package/                   # The folder for app package\n├── /src/                       # The source code of the application\n│   ├── /favicons/              # All favicons generated\n│   ├── /fonts/                 # TTF/OTF font files\n│   ├── /images/                # All images for the template\n│   ├── /misc/                  # Some files which will be deployed to the root of CMS\n│   ├── /pages/                 # HTML template files and data\n│       ├── /components/        # All template components\n│       ├── /data/              # JSON data for each page and main components\n│       ├── /pages/             # All pages\n│       ├── /partials/          # Page partials\n│       ├── /master.hbs         # Master Template\n│   ├── /sass/                  # Sass files\n│   ├── /scripts/               # Javascript files and ReactJs components\n│       ├── /custom/            # Custom Javascript code\n│       ├── /plugins/           # External Javascript plugin for accessing internal data\n│       ├── /react/             # ReactJs components\n│       ├── /tests/             # Unit Test code\n│       ├── /vendors/           # Other javascript vendors\n├── /web/                       # The folder for CMS project\n│── gulpfile.js                 # A list of core gulp tasks\n│── server.js                   # NodeJs server\n│── package.json                # The list of 3rd party libraries and utilities\n```\n\n## Features\n\n### HTML\n- [Handlebars Javascript Template](http://handlebarsjs.com/) is using HTML with JavaScript-based features embedded\n- Minify HTML code with [Gulp Htmlmin](https://www.npmjs.com/package/gulp-htmlmin)\n- Support to generate static HTML pages\n\n### CSS\n- Use [Sass](http://sass-lang.com/) CSS extension language\n- Map compiled CSS to source stylesheets with source maps with [Gulp Sourcemaps](https://www.npmjs.com/package/gulp-sourcemaps)\n- CSS Autoprefixing using [Gulp Autoprefixer](https://www.npmjs.com/package/gulp-autoprefixer)\n- Minify CSS file with [Gulp Cssnano](https://www.npmjs.com/package/gulp-cssnano)\n- Support Bootstrap, flexbox, Reponsive Design\n- Allow to create multiple css themes\n\n### Javascript\n- [ReactJS](https://facebook.github.io/react/) provides a flexible and efficient view coming with [Gulp React Render](https://www.npmjs.com/package/gulp-react-render)\n- Flexible ReactJS rendering via React JSON array and React components\n- Process javascript file with ESLint using [Gulp Eslint](https://www.npmjs.com/package/gulp-eslint)\n- Generate custom Modernizr builds to improve browser compatibility with [Gulp Modernizr](https://www.npmjs.com/package/gulp-modernizr)  \n- Support next generation Javascript ES6 code with [Gulp Babel](https://www.npmjs.com/package/gulp-babel)\n- Obfuscate project plugins with [Gulp Obfuscator](https://www.npmjs.com/package/gulp-obfuscator)\n- Support to build project plugins for external sites to import\n\n### Font\n- Generate web fonts from TTF/OTF font files using [Gulp Fontgen](https://www.npmjs.com/package/gulp-fontgen)\n- Create icon fonts from SVG icons with [Gulp Iconfont](https://www.npmjs.com/package/gulp-iconfont) and generate css for icon fonts with [Gulp Iconfont Css](https://www.npmjs.com/package/gulp-iconfont-css)\n- Provide scss template for custom font\n\n### Favicons\n- Generate a range of favicons for web site, android, apple, windows and social shares with [Gulp Favicons](https://www.npmjs.com/package/gulp-favicons)\n\n### Images\n- Minify and optimize PNG, JPEG and GIF images with [Gulp Image Optimization](https://www.npmjs.com/package/gulp-image-optimization)\n\n### Audit & Testing\n- Support to run audit on the project via [Gulp Webstandards](https://www.npmjs.com/package/gulp-webstandards)\n- Able to run Qunit test on pages. Through setting **test_enabled** as true, Qunit will run on each page.\n\n### NodeJs Server & Middleware\n- Run NodeJS server to set up backend middleware [Gulp Nodemon](https://www.npmjs.com/package/gulp-nodemon)\n- Database using JSON file as storage for Node.JS [Node Json DB](https://www.npmjs.com/package/node-json-db)\n\n### Building System\n- Support to enable/disable each module from **package.json** configuration file.\n- Using [Gulp](http://gulpjs.com/) streaming building system to render CSS, javascript and HTML pages. Configuration file is also provided, as you can update settings via the **config.js** file.\n- Live server to run template and support browser syncing [Browser Sync](https://www.npmjs.com/package/browser-sync)\n- Build cross platform desktop apps with web technologies using [Electron](http://electron.atom.io/)\n- Place miscellaneous items in **src/misc**. e.g. .htaccess, web configure and Docker files. They will be copied to release.\n\n\n## Getting Started\n\n### Requirements\n- Mac OS X, or Linux\n- [Node.js](https://nodejs.org/) v5.0 or newer\n- `npm` v3.3 or newer (new to [npm](https://docs.npmjs.com/)?)\n\n### 1. Get the template via NPM\nYou can start the latest version of Universal Web Template on your local machine by running:\n\n```shell\nsudo npm install universal-web-template\n```\n\nor\n```shell\ngit clone https://bitbucket.org/haolongfan/universal-web-template.git\n```\n\nPlease grab the template from `/template` folder and copy to your project.\n\n\n### 2. Install components via NPM\n\n```shell\n$ npm install -g npm-check-updates\n$ brew install fontforge ttfautohint ttf2eot batik\n$ sudo npm install\n```\n\n\n### 3. Run Template\n\n```shell\n$ npm start\n```\n\nThis command will build the app from the source files (`/src`) into the dev output `/dist` folder. As soon as the initial build completes, it will start the Node.js server (`node build/server.js`) and [Browsersync](https://browsersync.io/) on top of it.\n\nNow you can see your web app in a browser, on mobile devices and start hacking. Whenever you modify any of the source files inside the `/src` folder, it will recompile the app on the fly and refresh all the connected browsers.\n\n\n### 4. Build Template\n\n```shell\n$ gulp\n```\n\nor\n\n```shell\n$ gulp compile\n```\n\nThese two command will build the app from the source files (`/src`) into the dev output `/dist` folder.\n\n### 5. Build Template\n\n```shell\n$ gulp\n```\n\nor\n\n```shell\n$ gulp build\n```\n\nThese two command will build the app from the source files (`/src`) into the build output `/build` folder.\n\n\n### 6. Integrate Template\n\n```shell\n$ gulp\n```\n\nor\n\n```shell\n$ gulp integrate\n```\n\nThis command will generate final files to the public folder (`/public`) for CMS integration.\n\n### 7. Watch Template\n\n```shell\n$ gulp watch\n```\n\nThis command will watch any code change from the source files (`/src`) and re-build the app once modification happens.\n\n\n### 8. Test Template\n\n```shell\n$ gulp test\n```\n\nThis command will run Qunit testing based on test scripts which are generated from test script folder (`/src/scripts/tests`).  \n\n\n### 9. Package Project as Executables Bundles\n\n```shell\n$ gulp package\n```\n\nThis command will generate OS-specific bundles (.app and .exe) for the web app. Supports building Windows, Linux or Mac executables.\n\n\n### 10. Clean All Compiled Files\n\n```shell\n$ gulp clean\n```\n\nThis command will clean all files from compile folder (`/dist`), build folder (`/build`), public folder (`/public`).\n\n\n\n### How to Update\nIf you need to keep your project up to date with the recent changes, you can always run NPM update via:\n\n```shell\n$ npm update universal-web-template\n```\n\nIf you want to update packages, please run:\n```shell\n$ sudo ncu -u\n$ npm update\n```\n\n## Issues and New Features\n\nIf you found any issues or hope to add new features in, please record them in [here](https://bitbucket.org/haolongfan/universal-web-template/issues?status=new&status=open). I'll response you as soon as possible. Many thanks!\n\n\n## License\nCopyright (c) 2016 Haolong Fan Licensed under the MIT license.\n\n[ci-image]: https://travis-ci.org/bahmutov/qunit-promises.png?branch=master\n[ci-url]: https://bitbucket.org/haolongfan/universal-web-template\n"
}