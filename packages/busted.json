{
  "name": "busted",
  "version": "1.0.0",
  "description": "A node module that detects improper iframe busting code",
  "main": "busted.js",
  "scripts": {
    "test": "mocha",
    "test-travis": "./node_modules/istanbul/lib/cli.js cover ./node_modules/mocha/bin/_mocha -- -R spec ./test/*"
  },
  "repository": {
    "user": "nathanchapman",
    "repo": "busted",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/nathanchapman/busted/tarball/master",
    "clone_url": "https://github.com/nathanchapman/busted",
    "https_url": "https://github.com/nathanchapman/busted",
    "travis_url": "https://travis-ci.org/nathanchapman/busted",
    "zip_url": "https://github.com/nathanchapman/busted/archive/master.zip",
    "api_url": "https://api.github.com/repos/nathanchapman/busted"
  },
  "keywords": [
    "busted",
    "iframe",
    "x-frame-options",
    "content-security-policy",
    "clickjacking"
  ],
  "tonicExampleFilename": "example.js",
  "author": {
    "name": "Nathan Chapman",
    "email": "nathanchapman@utexas.edu",
    "url": "http://nathanchapman.io"
  },
  "license": "MIT",
  "homepage": "https://github.com/nathanchapman/busted#readme",
  "devDependencies": {
    "chai": "^3.5.0",
    "coveralls": "^2.11.9",
    "istanbul": "^0.4.3",
    "mocha": "^2.4.5"
  },
  "dependencies": {
    "xhr2": "^0.1.3"
  },
  "gitHead": "9f1942b3f1492c0263985519a238556bef4c0012",
  "_npmVersion": "3.6.0",
  "_nodeVersion": "5.6.0",
  "dist": {
    "shasum": "56c90fbcc0d4c93676dd875bfaf55b6a22f0c85e",
    "tarball": "http://registry.npmjs.org/busted/-/busted-1.0.0.tgz"
  },
  "versions": [
    {
      "number": "0.0.3",
      "date": "2016-03-24T18:34:38.685Z"
    },
    {
      "number": "0.0.4",
      "date": "2016-04-05T22:29:13.446Z"
    },
    {
      "number": "0.0.5",
      "date": "2016-04-05T23:37:46.350Z"
    },
    {
      "number": "0.0.6",
      "date": "2016-04-06T17:30:44.613Z"
    },
    {
      "number": "0.0.7",
      "date": "2016-04-06T17:40:24.342Z"
    },
    {
      "number": "0.1.0",
      "date": "2016-04-07T19:53:49.206Z"
    },
    {
      "number": "0.5.0",
      "date": "2016-04-14T17:47:54.627Z"
    },
    {
      "number": "1.0.0",
      "date": "2016-05-02T02:50:20.772Z"
    }
  ],
  "created": "2016-03-24T18:34:38.685Z",
  "modified": "2016-05-02T02:50:20.772Z",
  "lastPublisher": {
    "name": "nathanchapman",
    "email": "nathanchapman@utexas.edu"
  },
  "owners": [
    {
      "name": "nathanchapman",
      "email": "nathanchapman@utexas.edu"
    }
  ],
  "readme": "# Busted\n[![npm version](https://img.shields.io/npm/v/busted.svg)](https://www.npmjs.org/package/busted)\n[![npm downloads](https://img.shields.io/npm/dt/busted.svg)](https://www.npmjs.org/package/busted)\n[![Travis CI](https://travis-ci.org/nathanchapman/busted.svg)](https://travis-ci.org/nathanchapman/busted)\n[![Coverage Status](https://coveralls.io/repos/github/nathanchapman/busted/badge.svg?branch=master)](https://coveralls.io/github/nathanchapman/busted?branch=master)\n[![Code Climate Grade](https://codeclimate.com/github/nathanchapman/busted/badges/gpa.svg)](https://codeclimate.com/github/nathanchapman/busted)\n[![bitHound Overall Score](https://www.bithound.io/github/nathanchapman/busted/badges/score.svg)](https://www.bithound.io/github/nathanchapman/busted)\n[![GitHub license](https://img.shields.io/github/license/nathanchapman/busted.svg)](https://github.com/nathanchapman/busted/blob/master/LICENSE)\n\n<img align=\"right\" width=\"300\" src=\"http://www.dafont.com/forum/attach/orig/5/5/554705.png\">\n\nAn npm package that detects improper iframe busting code and incorrect HTTP headers. \"Clickjacking\" is a malicious technique of tricking users into clicking on invisible iframes, and thus performing sensitive actions like sharing data or bank transfers without their knowledge. This tool attempts to find and offer suggestions to patch these vulnerabilities in your web applications. Also included are an [Electron](http://electron.atom.io/) application, [Chrome extension](https://chrome.google.com/webstore/detail/busted/nhlicbgagiecfehanppnblhoglonondm), and an [Arachni](http://www.arachni-scanner.com/) check.\n\n\n## Install npm package\n```sh\n$ npm install busted\n```\n\n## Usage\nIn a Node.js application (no DOM access to iframes, so only headers test is functional):\n```javascript\nvar busted = require('busted');\nvar URL = 'http://www.example.com';\nbusted.headersTest(URL, function(url, passed) {\n  console.log(url + (passed ? ' passed ' : ' failed ') + 'the headers test.');\n});\n```\n\nIn any Electron application (has DOM access so iframes can be tested):\n```javascript\nwindow.BUSTED = require('busted.js');\n\nvar URL = 'http://www.example.com';\nvar iframe = document.getElementById('frame');\niframe.src = URL;\n\nwindow.BUSTED.headersTest(URL, function(url, passed) {\n  console.log(url + (passed ? ' passed ' : ' failed ') + 'the headers test.');\n});\n\niframe.onload = function() {\n  var passed = window.BUSTED.iframeTest(URL, iframe);\n  console.log(URL + (passed ? ' passed ' : ' failed ') + 'the iframe test.');\n}\n```\n\n## Using our Electron app\nOur Electron app allows for scanning and testing URLs for the vulnerabilities.\n#### Install\n```sh\n$ git clone https://github.com/nathanchapman/busted.git && cd busted/electron && npm install\n```\n#### Starting the app\nFrom `busted/electron` run:\n```sh\n$ npm start\n```\n\n## Arachni Web Scanner Check\nAn Arachni check that tests headers and parses JavaScript for improper frame-busting code.\n#### Install Arachni\nDownload and install [Arachni](http://www.arachni-scanner.com/download/).\n#### Install Busted\n```sh\n$ git clone https://github.com/nathanchapman/busted.git\n```\nMove the `arachni/clickjacking.rb` file to:\n`[ARACHNI_DIRECTORY]/system/gems/gems/arachni-1.4/components/checks/passive`\nfrom within `[ARACHNI_DIRECTORY]` run the following:\n```sh\n$ bin/arachni --checks=clickjacking --scope-page-limit 1 --browser-cluster-pool-size 1 SOME_URL_OR_FILE\n```\nfor more information, see the [Arachni CLI guide](https://github.com/Arachni/arachni/wiki/Command-line-user-interface).\n\n\n## Clickjacking Prevention\nThere are other attacks that are site-specific or are possible if the attacker controls certian domain names. These attacks cannot be tested here, but we will attempt to prevent them with this two-fold solution.\n\n__Headers:__ Set X-Frame-Options header to DENY or SAMEORIGIN\n\n__Frame Busting Code:__ Use the following frame busting code as a solution for older browsers that do not support X-Frame-Options or Content-Security-Policy headers.\n```html\n<!-- Source: http://w2spconf.com/2010/papers/p27.pdf -->\n<style>\nhtml { display: none; }\n</style>\n<script>\nif (self == top) {\n  document.documentElement.style.display = 'block';\n} else {\n  top.location = self.location;\n}\n</script>\n```\n"
}