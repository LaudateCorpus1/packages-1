{
  "name": "electron-installer-redhat",
  "description": "Create a Red Hat package for your Electron app.",
  "version": "0.3.0",
  "license": "MIT",
  "author": {
    "name": "Daniel Perez Alvarez",
    "email": "unindented@gmail.com",
    "url": "http://unindented.org/"
  },
  "repository": {
    "user": "unindented",
    "repo": "electron-installer-redhat",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/unindented/electron-installer-redhat/tarball/master",
    "clone_url": "https://github.com/unindented/electron-installer-redhat",
    "https_url": "https://github.com/unindented/electron-installer-redhat",
    "travis_url": "https://travis-ci.org/unindented/electron-installer-redhat",
    "zip_url": "https://github.com/unindented/electron-installer-redhat/archive/master.zip",
    "api_url": "https://api.github.com/repos/unindented/electron-installer-redhat"
  },
  "keywords": [
    "electron",
    "redhat"
  ],
  "os": [
    "darwin",
    "linux"
  ],
  "main": "src/installer.js",
  "bin": {
    "electron-installer-redhat": "src/cli.js"
  },
  "scripts": {
    "clean": "rimraf test/fixtures/out",
    "lint": "eslint .",
    "spec": "mocha",
    "test": "npm run clean && npm run lint && npm run spec"
  },
  "dependencies": {
    "asar": "^0.12.0",
    "async": "^2.0.0",
    "debug": "^2.2.0",
    "fs-extra": "^0.30.0",
    "glob": "^7.0.0",
    "lodash": "^4.0.1",
    "temp": "^0.8.3",
    "word-wrap": "^1.1.0",
    "yargs": "^4.1.0"
  },
  "devDependencies": {
    "chai": "^3.4.1",
    "eslint": "^3.2.2",
    "eslint-config-standard": "^5.1.0",
    "eslint-plugin-promise": "^2.0.0",
    "eslint-plugin-standard": "^2.0.0",
    "mocha": "^3.0.0",
    "retry": "^0.9.0",
    "rimraf": "^2.5.1"
  },
  "gitHead": "d0efd28696c92d8a5305e11904aeb83eae850ca1",
  "homepage": "https://github.com/unindented/electron-installer-redhat#readme",
  "_npmVersion": "2.15.8",
  "_nodeVersion": "4.4.7",
  "dist": {
    "shasum": "b4d51a234d7aa9a23f59120d8f2bb152711d90a1",
    "tarball": "http://registry.npmjs.org/electron-installer-redhat/-/electron-installer-redhat-0.3.0.tgz"
  },
  "stars": 1,
  "versions": [
    {
      "number": "0.0.1",
      "date": "2016-01-28T18:05:13.105Z"
    },
    {
      "number": "0.1.0",
      "date": "2016-02-02T19:38:48.009Z"
    },
    {
      "number": "0.1.1",
      "date": "2016-02-05T21:08:30.940Z"
    },
    {
      "number": "0.2.0",
      "date": "2016-02-07T19:21:55.097Z"
    },
    {
      "number": "0.3.0",
      "date": "2016-08-02T21:50:29.891Z"
    }
  ],
  "created": "2016-01-28T18:05:13.105Z",
  "modified": "2016-08-02T21:50:29.891Z",
  "lastPublisher": {
    "name": "unindented",
    "email": "unindented@gmail.com"
  },
  "owners": [
    {
      "name": "unindented",
      "email": "unindented@gmail.com"
    }
  ],
  "readme": "![Electron Installer for Red Hat](resources/logo.png)\n\n# electron-installer-redhat [![Version](https://img.shields.io/npm/v/electron-installer-redhat.svg)](https://www.npmjs.com/package/electron-installer-redhat) [![Build Status](https://img.shields.io/travis/unindented/electron-installer-redhat.svg)](http://travis-ci.org/unindented/electron-installer-redhat) [![Dependency Status](https://img.shields.io/gemnasium/unindented/electron-installer-redhat.svg)](https://gemnasium.com/unindented/electron-installer-redhat)\n\n> Create a Red Hat package for your Electron app.\n\n\n## Requirements\n\nThis tool requires `rpmbuild` to build the `.rpm` package. On Fedora you can do something like this:\n\n```\n$ sudo dnf install rpm-build\n```\n\nWhile on Ubuntu you'll need to do this instead:\n\n```\n$ sudo apt-get install rpm\n```\n\n\n## Installation\n\nFor use from command-line:\n\n```\n$ npm install -g electron-installer-redhat\n```\n\nFor use in npm scripts or programmatically:\n\n```\n$ npm install --save-dev electron-installer-redhat\n```\n\n\n## Usage\n\nSay your Electron app lives in `path/to/app`, and has a structure like this:\n\n```\n.\n├── LICENSE\n├── README.md\n├── node_modules\n│   ├── electron-packager\n│   └── electron-prebuilt\n├── package.json\n├── resources\n│   ├── Icon.png\n│   ├── IconTemplate.png\n│   └── IconTemplate@2x.png\n└── src\n    ├── index.js\n    ├── main\n    │   └── index.js\n    └── renderer\n        ├── index.html\n        └── index.js\n```\n\nYou now run `electron-packager` to build the app for Red Hat:\n\n```\n$ electron-packager . app --platform linux --arch x64 --out dist/\n```\n\nAnd you end up with something like this in your `dist` folder:\n\n```\n.\n└── dist\n    └── app-linux-x64\n        ├── LICENSE\n        ├── LICENSES.chromium.html\n        ├── content_shell.pak\n        ├── app\n        ├── icudtl.dat\n        ├── libgcrypt.so.11\n        ├── libnode.so\n        ├── locales\n        ├── natives_blob.bin\n        ├── resources\n        ├── snapshot_blob.bin\n        └── version\n```\n\nHow do you turn that into a Red Hat package that your users can install?\n\n### Command-Line\n\nIf you want to run `electron-installer-redhat` straight from the command-line, install the package globally:\n\n```\n$ npm install -g electron-installer-redhat\n```\n\nAnd point it to your built app:\n\n```\n$ electron-installer-redhat --src dist/app-linux-x64/ --dest dist/installers/ --arch amd64\n```\n\nYou'll end up with the package at `dist/installers/app_0.0.1_amd64.rpm`.\n\n### Scripts\n\nIf you want to run `electron-installer-redhat` through npm, install the package locally:\n\n```\n$ npm install --save-dev electron-installer-redhat\n```\n\nEdit the `scripts` section of your `package.json`:\n\n```js\n{\n  \"name\": \"app\",\n  \"description\": \"An awesome app!\",\n  \"version\": \"0.0.1\",\n  \"scripts\": {\n    \"start\": \"electron .\",\n    \"build\": \"electron-packager . app --platform linux --arch x64 --out dist/\",\n    \"rpm64\": \"electron-installer-redhat --src dist/app-linux-x64/ --dest dist/installers/ --arch amd64\"\n  },\n  \"devDependencies\": {\n    \"electron-installer-redhat\": \"*\",\n    \"electron-packager\": \"*\",\n    \"electron-prebuilt\": \"*\"\n  }\n}\n```\n\nAnd run the script:\n\n```\n$ npm run rpm64\n```\n\nYou'll end up with the package at `dist/installers/app_0.0.1_amd64.rpm`.\n\n### Programmatically\n\nInstall the package locally:\n\n```\n$ npm install --save-dev electron-installer-redhat\n```\n\nAnd write something like this:\n\n```js\nvar installer = require('electron-installer-redhat')\n\nvar options = {\n  src: 'dist/app-linux-x64/',\n  dest: 'dist/installers/',\n  arch: 'amd64'\n}\n\nconsole.log('Creating package (this may take a while)')\n\ninstaller(options, function (err) {\n  if (err) {\n    console.error(err, err.stack)\n    process.exit(1)\n  }\n\n  console.log('Successfully created package at ' + options.dest)\n})\n```\n\nYou'll end up with the package at `dist/installers/app_0.0.1_amd64.rpm`.\n\n### Options\n\nEven though you can pass most of these options through the command-line interface, it may be easier to create a configuration file:\n\n```js\n{\n  \"dest\": \"dist/installers/\",\n  \"icon\": \"resources/Icon.png\",\n  \"categories\": [\n    \"Utility\"\n  ]\n}\n```\n\nAnd pass that instead with the `config` option:\n\n```\n$ electron-installer-redhat --src dist/app-linux-x64/ --arch amd64 --config config.json\n```\n\nAnyways, here's the full list of options:\n\n#### src\nType: `String`\nDefault: `undefined`\n\nPath to the folder that contains your built Electron application.\n\n#### dest\nType: `String`\nDefault: `undefined`\n\nPath to the folder that will contain your Red Hat installer.\n\n#### rename\nType: `Function`\nDefault: `function (dest, src) { return path.join(dest, src); }`\n\nFunction that renames all files generated by the task just before putting them in your `dest` folder.\n\n#### options.name\nType: `String`\nDefault: `package.name`\n\nName of the package (e.g. `atom`), used in the [`Name` field of the `spec` file](https://fedoraproject.org/wiki/How_to_create_an_RPM_package#Creating_a_SPEC_file).\n\nCheck out the [Fedora Naming Guidelines](https://fedoraproject.org/wiki/Packaging:NamingGuidelines#Common_Character_Set_for_Package_Naming).\n\n#### options.productName\nType: `String`\nDefault: `package.productName || package.name`\n\nName of the application (e.g. `Atom`), used in the [`Name` field of the `desktop` specification](http://standards.freedesktop.org/desktop-entry-spec/desktop-entry-spec-latest.html).\n\n#### options.genericName\nType: `String`\nDefault: `package.genericName || package.productName || package.name`\n\nGeneric name of the application (e.g. `Text Editor`), used in the [`GenericName` field of the `desktop` specification](http://standards.freedesktop.org/desktop-entry-spec/desktop-entry-spec-latest.html).\n\n#### options.description\nType: `String`\nDefault: `package.description`\n\nShort description of the application, used in the [`Summary` field of the `spec` file](https://fedoraproject.org/wiki/How_to_create_an_RPM_package#Creating_a_SPEC_file).\n\n#### options.productDescription\nType: `String`\nDefault: `package.productDescription || package.description`\n\nLong description of the application, used in the [`%description` tag of the `spec` file](https://fedoraproject.org/wiki/How_to_create_an_RPM_package#Creating_a_SPEC_file).\n\n#### options.version\nType: `String`\nDefault: `package.version`\n\nVersion number of the package, used in the [`Version` field of the `spec` file](https://fedoraproject.org/wiki/How_to_create_an_RPM_package#Creating_a_SPEC_file).\n\n#### options.revision\nType: `String`\nDefault: `package.revision`\n\nRevision number of the package, used in the [`Release` field of the `spec` file](https://fedoraproject.org/wiki/How_to_create_an_RPM_package#Creating_a_SPEC_file).\n\n#### options.license\nType: `String`\nDefault: `package.license`\n\nLicense of the package, used in the [`License` field of the `spec` file](https://fedoraproject.org/wiki/How_to_create_an_RPM_package#Creating_a_SPEC_file).\n\n#### options.group\nType: `String`\nDefault: `undefined`\n\nGroup of the package, used in the [`Group` field of the `spec` file](https://fedoraproject.org/wiki/How_to_create_an_RPM_package#Creating_a_SPEC_file).\n\n#### options.arch\nType: `String`\nDefault: `undefined`\n\nMachine architecture the package is targeted to, used to set the `--target` option.\n\n#### options.requires\nType: `Array[String]`\nDefault: `['lsb']`\n\nPackages that are required when the program starts, used in the [`Requires` field of the `spec` file](https://fedoraproject.org/wiki/How_to_create_an_RPM_package#Creating_a_SPEC_file).\n\n#### options.homepage\nType: `String`\nDefault: `package.homepage || package.author.url`\n\nURL of the homepage for the package, used in the [`Homepage` field of the `control` specification](https://fedoraproject.org/wiki/How_to_create_an_RPM_package#Creating_a_SPEC_file).\n\n#### options.bin\nType: `String`\nDefault: `package.name`\n\nRelative path to the executable that will act as binary for the application, used in the [`Exec` field of the `desktop` specification](http://standards.freedesktop.org/desktop-entry-spec/desktop-entry-spec-latest.html).\n\nThe generated package will contain a symlink `/usr/bin/<%= options.name %>` pointing to the path provided here.\n\nFor example, providing this configuration:\n\n```js\n{\n  src: '...',\n  dest: '...',\n  name: 'foo',\n  bin: 'resources/cli/launcher.sh'\n}\n```\n\nWill create a package with the following symlink:\n\n```\nusr/bin/foo@ -> ../share/foo/resources/cli/launcher/sh\n```\n\nAnd a desktop specification with the following `Exec` key:\n\n```\nExec=foo %U\n```\n\n#### options.icon\nType: `String` or `Object[String:String]`\nDefault: `undefined`\n\nPath to a single image that will act as icon for the application:\n\n```js\n{\n  icon: 'resources/Icon.png'\n}\n```\n\nOr multiple images with their corresponding resolutions:\n\n```js\n{\n  icon: {\n    '48x48': 'resources/Icon48.png',\n    '64x64': 'resources/Icon64.png',\n    '128x128': 'resources/Icon128.png',\n    '256x256': 'resources/Icon256.png'\n  }\n}\n```\n\n#### options.categories\nType: `Array[String]`\nDefault: `[]`\n\nCategories in which the application should be shown in a menu, used in the [`Categories` field of the `desktop` specification](http://standards.freedesktop.org/desktop-entry-spec/desktop-entry-spec-latest.html).\n\nFor possible values check out the [Desktop Menu Specification](http://standards.freedesktop.org/menu-spec/latest/apa.html).\n\n#### options.mimeType\nType: `Array[String]`\nDefault: `[]`\n\nMIME types the application is able to open, used in the [`MimeType` field of the `desktop` specification](http://standards.freedesktop.org/desktop-entry-spec/desktop-entry-spec-latest.html).\n\n## Meta\n\n* Code: `git clone git://github.com/unindented/electron-installer-redhat.git`\n* Home: <https://github.com/unindented/electron-installer-redhat/>\n\n\n## Contributors\n\n* Daniel Perez Alvarez ([unindented@gmail.com](mailto:unindented@gmail.com))\n\n\n## License\n\nCopyright (c) 2016 Daniel Perez Alvarez ([unindented.org](https://unindented.org/)). This is free software, and may be redistributed under the terms specified in the LICENSE file.\n"
}