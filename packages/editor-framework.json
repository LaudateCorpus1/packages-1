{
  "name": "editor-framework",
  "version": "0.6.4",
  "description": "A simple framework for making panel based applications.",
  "homepage": "https://github.com/cocos-creator/editor-framework",
  "repository": {
    "user": "cocos-creator",
    "repo": "editor-framework",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/cocos-creator/editor-framework/tarball/master",
    "clone_url": "https://github.com/cocos-creator/editor-framework",
    "https_url": "https://github.com/cocos-creator/editor-framework",
    "travis_url": "https://travis-ci.org/cocos-creator/editor-framework",
    "zip_url": "https://github.com/cocos-creator/editor-framework/archive/master.zip",
    "api_url": "https://api.github.com/repos/cocos-creator/editor-framework"
  },
  "author": {
    "name": "Firebox Technology"
  },
  "license": "MIT",
  "scripts": {
    "build": "node ./tasks/build-css.js",
    "build:dev": "node ./tasks/build-css.js --dev",
    "build:native": "node ./tasks/build-native.js",
    "build:node-inspector": "node ./tasks/build-node-inspector.js",
    "clear": "sh ./tasks/remove-settings.sh",
    "start": "node ./tasks/run-dev.js",
    "start:no-dev": "node ./tasks/run.js",
    "start:node-inspector": "node ./tasks/run-node-inspector.js",
    "test": "node ./tasks/run-tests.js"
  },
  "dependencies": {
    "async": "^2.0.0",
    "chalk": "^1.1.1",
    "chokidar": "^1.6.0",
    "chroma-js": "^1.1.1",
    "del": "^2.2.0",
    "diff": "^2.2.1",
    "find-up": "^1.1.0",
    "fire-fs": "^0.2.4",
    "fire-path": "^0.1.9",
    "fire-url": "^0.1.7",
    "globby": "^6.0.0",
    "highlight.js": "^9.4.0",
    "lodash": "^4.13.0",
    "mousetrap": "^1.6.0",
    "node-polyglot": "^2.0.0",
    "os-locale": "1.4.0",
    "remarkable": "^1.6.2",
    "semver": "^5.3.0",
    "sinon": "^1.17.3",
    "tap": "6.x",
    "tap-mocha-reporter": "git+https://github.com/jwu/tap-mocha-reporter.git",
    "winston": "^2.2.0",
    "yargs": "^5.0.0"
  },
  "devDependencies": {
    "devtron": "^1.1.0",
    "electron": "1.3.3",
    "gulp": "3.9.0",
    "gulp-babel": "6.1.1",
    "gulp-less": "3.0.5",
    "gulp-sequence": "0.4.4",
    "less": "^2.6.1",
    "less-plugin-clean-css": "^1.5.1"
  },
  "nativeModules": [
    "chokidar"
  ],
  "gitHead": "a196824e0a4e7e4f35fbba48bd3eb8f501fc3aa2",
  "_npmVersion": "3.8.9",
  "_nodeVersion": "6.2.0",
  "dist": {
    "shasum": "ac80e60eba8f019140be0a8e67bc1d6b1e505c29",
    "tarball": "http://registry.npmjs.org/editor-framework/-/editor-framework-0.6.4.tgz"
  },
  "versions": [
    {
      "number": "0.3.12",
      "date": "2015-07-20T16:57:23.144Z"
    },
    {
      "number": "0.3.13",
      "date": "2015-07-20T17:21:51.492Z"
    },
    {
      "number": "0.3.16",
      "date": "2015-10-05T13:58:46.690Z"
    },
    {
      "number": "0.3.17",
      "date": "2015-10-14T07:27:53.447Z"
    },
    {
      "number": "0.5.0",
      "date": "2016-04-07T09:29:13.837Z"
    },
    {
      "number": "0.5.1",
      "date": "2016-04-13T13:47:00.524Z"
    },
    {
      "number": "0.5.2",
      "date": "2016-04-19T02:53:58.485Z"
    },
    {
      "number": "0.5.3",
      "date": "2016-04-22T09:10:31.302Z"
    },
    {
      "number": "0.6.0",
      "date": "2016-05-13T11:23:10.393Z"
    },
    {
      "number": "0.6.1",
      "date": "2016-05-31T08:53:47.130Z"
    },
    {
      "number": "0.6.2",
      "date": "2016-07-15T02:14:49.904Z"
    },
    {
      "number": "0.6.3",
      "date": "2016-08-08T06:13:24.571Z"
    },
    {
      "number": "0.6.4",
      "date": "2016-08-23T10:59:05.274Z"
    }
  ],
  "created": "2015-07-20T16:57:23.144Z",
  "modified": "2016-08-23T10:59:05.274Z",
  "lastPublisher": {
    "name": "firebox",
    "email": "team@firebox.im"
  },
  "owners": [
    {
      "name": "firebox",
      "email": "team@firebox.im"
    }
  ],
  "readme": "# Editor Framework\n\n[Documentation](https://github.com/cocos-creator/editor-framework/tree/master/docs) |\n[Downloads](https://github.com/cocos-creator/editor-framework/releases/) |\n[Installation](#installation) |\n[Features](#features)\n\n[![Circle CI](https://circleci.com/gh/cocos-creator/editor-framework.svg?style=svg)](https://circleci.com/gh/cocos-creator/editor-framework)\n[![Build Status](https://travis-ci.org/cocos-creator/editor-framework.svg?branch=master)](https://travis-ci.org/cocos-creator/editor-framework)\n[![Build status](https://ci.appveyor.com/api/projects/status/ugkft1nmcy2wklrl?svg=true)](https://ci.appveyor.com/project/jwu/editor-framework)\n[![bitHound Overall Score](https://www.bithound.io/github/cocos-creator/editor-framework/badges/score.svg)](https://www.bithound.io/github/cocos-creator/editor-framework)\n[![Dependency Status](https://david-dm.org/cocos-creator/editor-framework.svg)](https://david-dm.org/cocos-creator/editor-framework)\n[![devDependency Status](https://david-dm.org/cocos-creator/editor-framework/dev-status.svg)](https://david-dm.org/cocos-creator/editor-framework#info=devDependencies)\n\nEditor-Framework gives you the power to quickly and easily write professional multi-panel desktop software in HTML5 and Node.js on top of [Electron](http://electron.atom.io).\n\nAt its core is a modular and extensible package management system and open-ended API that allow you to quickly prototype and build reusable UI components on the fly in a live, hot-reloadable development environment.\n\nInternally, Editor-Framework conforms with Electron’s [main and renderer process architecture](http://electron.atom.io/docs/tutorial/quick-start/).\nTo make multiple windows communicate easily, Editor Framework extends Electron’s [main](http://electron.atom.io/docs/api/ipc-main/) and [renderer](http://electron.atom.io/docs/api/ipc-renderer/) IPC API, making it easier to send and receive callbacks between the main and renderer processes. In the renderer process, we use HTML5 Web Component standards (Custom Element and Shadow DOM) by default, and provide a set of builtin UI-Kit elements which you can use to extend existing widgets and panels. It's also possible to extend any existing UI framework such as Polymer, Vue.js, React, or any other UI framework you'd prefer to use..\n\n**NOTE: editor-framework is currently under active development. The documentation is a little bit out of date, but still can help you get started. I will update the doc as soon as possible.**\n\n![demo-01](https://cloud.githubusercontent.com/assets/174891/16065534/3480115a-32de-11e6-88ba-9bdb5f047602.png)\n\n## Installation\n\nEditor-Framework can simply be declared and imported like any other package in your project:\n\n\n```bash\nnpm install --save editor-framework\n```\n\n## Usage\n\nHere is a simple example for using Editor-Framework in your Electron project:\n\n**package.json**\n\n```json\n{\n  \"name\": \"your app name\",\n  \"version\": \"0.0.1\",\n  \"description\": \"A simple app based on editor-framework.\",\n  \"dependencies\": {},\n  \"main\": \"main.js\"\n}\n```\n\n**main.js**\n\n```javascript\nconst Editor = require('editor-framework');\n\nEditor.App.extend({\n  init ( opts, cb ) {\n    Editor.init({\n      'package-search-path': [\n        Editor.url('app://packages/'),\n      ],\n    });\n\n    if ( cb ) {\n      cb ();\n    }\n  },\n\n  run () {\n    // create main window\n    let mainWin = new Editor.Window('main', {\n      title: 'Editor Framework',\n      width: 900,\n      height: 700,\n      minWidth: 900,\n      minHeight: 700,\n      show: false,\n      resizable: true,\n    });\n    Editor.Window.main = mainWin;\n\n    // restore window size and position\n    mainWin.restorePositionAndSize();\n\n    // load and show main window\n    mainWin.load( 'app://index.html' );\n    mainWin.show();\n\n    // open dev tools if needed\n    if ( Editor.argv.showDevtools ) {\n      // NOTE: open dev-tools before did-finish-load will make it insert an unused <style> in page-level\n      mainWin.nativeWin.webContents.once('did-finish-load', function () {\n        mainWin.openDevTools({\n          detach: true\n        });\n      });\n    }\n    mainWin.focus();\n  },\n});\n```\n\n**index.html**\n\n```html\n<html>\n  <head>\n    <title>Main Window</title>\n    <meta charset=\"utf-8\">\n\n    <style>\n      #mainDock {\n        position: relative;\n      }\n    </style>\n  </head>\n\n  <body class=\"layout vertical\">\n    <main-dock class=\"flex-1\"></main-dock>\n  </body>\n</html>\n```\n\n## Features\n\n- ### App Customization and Extensibility through modular Packages\n\n - Dynamically load and unload packages\n - Watch package changes and notify changes immediately\n - Hot reload your packages\n\n- ### Panel and Window Management\n\n - Freely dock panels anywhere in multiple windows\n - Dynamically load user defined panels from a package\n - Easily register and respond to ipc messages for your panel\n - Easily register shortcuts (hotkeys) for your panel\n - Save and load panel profiles\n - Save and load panels layout in json\n\n- ### Extensible Menus\n\n - Manipulate menu items by menu path (`foo/bar/foobar` for example)\n - Dynamically add and remove menu items\n - Dynamically change a menu item's state (enabled, checked, visible, ...)\n - Load user menus from packages\n\n- ### Builtin UI-KIT Element Library\n\n - Several UI elements are included to boost your development productivity\n    - `<ui-button>`\n    - `<ui-checkbox>`\n    - `<ui-color>` and `<ui-color-picker>`\n    - `<ui-input>`\n    - `<ui-num-input>`\n    - `<ui-select>`\n    - `<ui-slider>`\n    - `<ui-text-area>`\n    - and more...\n - A [ui-kit-preview](https://github.com/fireball-packages/ui-kit-preview) is included to help you learn and custom ui-kit\n - Develop ui elements by Custom Element and Shadow DOM\n - Allow users to customize their theme for ui elements\n - Can be integrated with any other UI frameworks (Polymer, Vue.js, React, ...)\n - Well designed for focus behavior (Use our own focus manager for better user experience)\n - Uniform events (`change`, `confirm` and `cancel`) in every ui element makes our ui-kit friendly for Undo/Redo functionality\n\n- ### Customizable UI Properties\n\n - `<ui-prop>` elements help users write properties/inspector panel\n - Automatically detect and choose a view for the property by type\n - Allow users to register their own property type and customize the view for it\n - Support nested properties (for `object` type and `array` type)\n - Support disable, readonly property in hierarchy\n\n- ### Customizable Profiles\n\n - Customize your profile for different scope (global, local, project, ...)\n - Load and save profiles through unified API\n\n- ### Logging\n\n - Uniform log interface for main and renderer process\n - Sort and store all windows and main process logs in one place\n - Support log to file\n - Integrate with [console](https://github.com/fireball-packages/console) for displaying and querying your logs\n\n- ### Enhanced Selection\n\n - Selection cached and synced among windows\n - User can register his own selection type\n - Automatically filtering selections\n\n- ### Improved IPC\n\n - Enhance IPC Programming Experience\n - Allow sending ipc message to specific panel\n - Allow sending ipc message to specific window\n - Allow sending ipc request and waiting for the reply in callback function\n\n- ### Undo & Redo Actions\n\n - Global Undo and Redo\n\n- ### Test Driven Workflow\n\n - Integrate [node-tap](http://www.node-tap.org/) to the test framework\n - Detect your package changes and automatically run tests under it via [tester](https://github.com/fireball-packages/tester)\n - A helper module to simulate UI input (mouse, keyboard) to help user write panel tests\n - Automatically recreate your test target (windows, widgets, panels, ...) after each test case\n\n## Development\n\n### Getting Started\n\nClone the repo:\n\n```bash\ngit clone https://github.com/cocos-creator/editor-framework\n```\n\nRun `npm install`:\n\n```bash\nnpm install\nnpm run build # build styles\n```\n\n### Installing and Running the Examples\n\n#### example-apps\n\n[example-apps](https://github.com/editor-framework/example-apps) is a set of examples\nshows how to create Editor-Framework Apps.\n\nInstallation:\n\n```bash\ngit clone https://github.com/editor-framework/example-apps\n```\n\nRun:\n\n```bash\nnpm start ./example-apps/${example-name}\n```\n\n#### example-packages\n\n[example-packages](https://github.com/editor-framework/example-packages) is a set of examples\nshows how to create Editor-Framework Apps.\n\nInstallation:\n\n```bash\ngit clone https://github.com/editor-framework/example-packages\n```\n\nRun:\n\n```bash\nnpm start ./example-packages/\n```\n\n#### demo\n\n[demo](https://github.com/editor-framework/demo) is a demo project to help users develop their own packages.\nTo use the demo project, clone it first and go to the demo folder to install it.\n\nInstallation:\n\n```bash\ngit clone https://github.com/editor-framework/demo\ncd ./demo\nnpm install\nbower install\ngulp update\n```\n\nRun:\n\n```bash\nnpm start ./demo\n```\n\n## License (MIT)\n\nCopyright (c) 2015 Cocos Creator\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
}