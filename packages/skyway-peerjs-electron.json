{
  "name": "skyway-peerjs-electron",
  "version": "0.3.14",
  "description": "PeerJS client for Electron & skyway.io",
  "main": "./lib/peer.js",
  "repository": {
    "user": "pirosikick",
    "repo": "peerjs",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/pirosikick/peerjs/tarball/master",
    "clone_url": "https://github.com/pirosikick/peerjs",
    "https_url": "https://github.com/pirosikick/peerjs",
    "travis_url": "https://travis-ci.org/pirosikick/peerjs",
    "zip_url": "https://github.com/pirosikick/peerjs/archive/master.zip",
    "api_url": "https://api.github.com/repos/pirosikick/peerjs"
  },
  "author": {
    "name": "Michelle Bu, Eric Zhang, NTT Communications, pirosikick"
  },
  "license": "MIT",
  "scripts": {
    "prepublish": "grunt"
  },
  "devDependencies": {
    "expect.js": "*",
    "grunt": "^0.4.5",
    "grunt-browserify": "^3.0.1",
    "grunt-cli": "^0.1.13",
    "grunt-contrib-concat": "^0.5.0",
    "grunt-contrib-uglify": "^0.9.1",
    "mocha": "*"
  },
  "dependencies": {
    "es6-promise": "^2.2.0",
    "eventemitter3": "0.1.5",
    "isomorphic-fetch": "^2.1.0",
    "js-binarypack": "0.0.9",
    "reliable": "git+https://github.com/michelle/reliable.git",
    "ws": "^0.7.2"
  },
  "files": [
    "lib",
    "dist",
    "LICENSE"
  ],
  "gitHead": "cf105c6af776e97549efe5019f8e60a27a840843",
  "homepage": "https://github.com/pirosikick/peerjs#readme",
  "_npmVersion": "2.9.0",
  "_nodeVersion": "0.10.33",
  "dist": {
    "shasum": "4bf629ee0c68571fd7b0f8bc7f4b781b5883679d",
    "tarball": "http://registry.npmjs.org/skyway-peerjs-electron/-/skyway-peerjs-electron-0.3.14.tgz"
  },
  "versions": [
    {
      "number": "0.3.14",
      "date": "2015-06-10T16:18:26.354Z"
    }
  ],
  "created": "2015-06-10T16:18:26.354Z",
  "modified": "2015-06-10T16:18:26.354Z",
  "lastPublisher": {
    "name": "pirosikick",
    "email": "pirosikick@gmail.com"
  },
  "owners": [
    {
      "name": "pirosikick",
      "email": "pirosikick@gmail.com"
    }
  ],
  "readme": "# PeerJS: Simple peer-to-peer with WebRTC #\n\nPeerJS provides a complete, configurable, and easy-to-use peer-to-peer API built on top of WebRTC, supporting both data channels and media streams.\n\n### [http://nttcom.github.io/skyway](https://nttcom.github.io/skyway)\n\n## Setup\n\n\n**Include the library**\n\n```html\n<script src=\"https://skyway.io/dist/0.3/peer.js\"></script>\n```\n\n**Create a Peer**  \nGet a [free API key](http://nttcom.github.io/skyway/registration.html). Your id only needs to be unique to the namespace of your API key.\n```javascript\nvar peer = new Peer('pick-an-id', {key: 'myapikey'}); \n// You can pick your own id or omit the id if you want to get a random one from the server.\n```\n\n## Data connections\n**Connect**\n```javascript\nvar conn = peer.connect('another-peers-id');\nconn.on('open', function(){\n  conn.send('hi!');\n});\n```\n**Receive**\n```javascript\npeer.on('connection', function(conn) {\n  conn.on('data', function(data){\n    // Will print 'hi!'\n    console.log(data);\n  });\n});\n```\n\n## Media calls\n**Call**\n```javascript\nnavigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\nnavigator.getUserMedia({video: true, audio: true}, function(stream) {\n  var call = peer.call('another-peers-id', stream);\n  call.on('stream', function(remoteStream) {\n    // Show stream in some <video> element.\n  });\n}, function(err) {\n  console.log('Failed to get local stream' ,err);\n});\n\n```\n**Answer**\n```javascript\nnavigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\npeer.on('call', function(call) {\n  navigator.getUserMedia({video: true, audio: true}, function(stream) {\n    call.answer(stream); // Answer the call with an A/V stream.\n    call.on('stream', function(remoteStream) {\n      // Show stream in some <video> element.\n    });\n  }, function(err) {\n    console.log('Failed to get local stream' ,err);\n  });\n});\n```\n## SkyWay Links\n\n### [Documentation / API Reference](http://nttcom.github.io/skyway/docs)\n\n### [Changelog](https://github.com/nttcom/peerjs/blob/master/changelog.md)\n\n### [free API key](http://nttcom.github.io/skyway/registration.html)\n\n### [Discuss SkyWay on our Google Group](https://groups.google.com/forum/#!forum/skywayjs)\n\n## PeerJS links\n\n### [WebRTC Browser compatibility status](http://peerjs.com/status)\n\n### [PeerServer](https://github.com/peers/peerjs-server)\n\n### [Discuss PeerJS on our Google Group](https://groups.google.com/forum/?fromgroups#!forum/peerjs)\n\n\n"
}