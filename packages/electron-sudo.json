{
  "name": "electron-sudo",
  "version": "4.0.12",
  "description": "Electron subprocess with administrative privileges, prompting the user with an OS dialog if necessary.",
  "main": "./dist/index.js",
  "author": {
    "name": "Aleksandr Komlev"
  },
  "license": "MIT",
  "repository": {
    "user": "automation-stack",
    "repo": "electron-sudo",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/automation-stack/electron-sudo/tarball/master",
    "clone_url": "https://github.com/automation-stack/electron-sudo",
    "https_url": "https://github.com/automation-stack/electron-sudo",
    "travis_url": "https://travis-ci.org/automation-stack/electron-sudo",
    "zip_url": "https://github.com/automation-stack/electron-sudo/archive/master.zip",
    "api_url": "https://api.github.com/repos/automation-stack/electron-sudo"
  },
  "keywords": [
    "sudo",
    "os",
    "dialog",
    "prompt",
    "command",
    "exec",
    "ui",
    "electron",
    "elevate",
    "administrative",
    "privileges",
    "UAC",
    "subprocess"
  ],
  "homepage": "https://github.com/automation-stack/electron-sudo#readme",
  "scripts": {
    "build": "node_modules/webpack/bin/webpack.js --config ./webpack/config.babel.js",
    "build-win32": "node node_modules\\webpack\\bin\\webpack.js --config webpack\\config.babel.js",
    "prepublish": "npm run test",
    "lint": "node_modules/eslint/bin/eslint.js -c .eslintrc ./src",
    "test-win32": "npm run build-win32 && node node_modules\\mocha\\bin\\mocha --compilers js:babel-core/register tests",
    "test": "npm run build && node_modules/mocha/bin/mocha --compilers js:babel-core/register ./tests"
  },
  "devDependencies": {
    "babel-cli": "^6.10.1",
    "babel-core": "^6.10.4",
    "babel-eslint": "^6.0.0",
    "babel-loader": "^6.2.4",
    "babel-plugin-array-includes": "^2.0.3",
    "babel-plugin-lodash": "^2.2.1",
    "babel-plugin-module-alias": "^1.2.0",
    "babel-plugin-syntax-async-functions": "^6.5.0",
    "babel-plugin-syntax-decorators": "^6.5.0",
    "babel-plugin-syntax-flow": "^6.8.0",
    "babel-plugin-syntax-object-rest-spread": "^6.5.0",
    "babel-plugin-transform-async-to-module-method": "^6.7.0",
    "babel-plugin-transform-class-properties": "^6.6.0",
    "babel-plugin-transform-decorators-legacy": "^1.3.4",
    "babel-plugin-transform-flow-strip-types": "^6.8.0",
    "babel-plugin-transform-regenerator": "^6.6.5",
    "babel-plugin-transform-runtime": "^6.6.0",
    "babel-polyfill": "^6.16.0",
    "babel-preset-es2015": "^6.9.0",
    "babel-preset-stage-0": "^6.5.0",
    "babel-runtime": "^6.9.2",
    "chai": "^3.5.0",
    "copy-webpack-plugin": "^3.0.1",
    "dirty-chai": "^1.2.2",
    "eslint": "^2.6.0",
    "eslint-loader": "^1.3.0",
    "eslint-plugin-babel": "^3.2.0",
    "estraverse-fb": "^1.3.1",
    "json-loader": "^0.5.4",
    "mocha": "^2.4.5",
    "raw-loader": "^0.5.1",
    "source-map-support": "^0.4.0",
    "webpack": "^1.12.14",
    "webpack-dev-server": "^1.14.1",
    "webpack-module-hot-accept": "^1.0.4",
    "webpack-shell-plugin": "^0.4.2"
  },
  "dependencies": {
    "babel-runtime": "^6.18.0",
    "bluebird": "^3.4.6"
  },
  "gitHead": "c08805d35a2dddf796cfe9141ba801fa741f426e",
  "_npmVersion": "3.10.3",
  "_nodeVersion": "6.5.0",
  "dist": {
    "shasum": "17d27fcb33837b7f6fd3a7946f168d6590566a53",
    "tarball": "http://registry.npmjs.org/electron-sudo/-/electron-sudo-4.0.12.tgz"
  },
  "stars": 4,
  "versions": [
    {
      "number": "3.0.0",
      "date": "2015-11-25T09:52:25.591Z"
    },
    {
      "number": "3.0.1",
      "date": "2015-11-26T14:08:51.165Z"
    },
    {
      "number": "3.0.2",
      "date": "2015-11-26T14:16:18.021Z"
    },
    {
      "number": "3.0.3",
      "date": "2016-02-25T09:25:12.432Z"
    },
    {
      "number": "3.0.4",
      "date": "2016-04-10T18:30:54.814Z"
    },
    {
      "number": "3.0.5",
      "date": "2016-04-27T15:09:04.511Z"
    },
    {
      "number": "3.0.6",
      "date": "2016-06-09T01:26:23.329Z"
    },
    {
      "number": "3.0.7",
      "date": "2016-06-27T11:20:27.489Z"
    },
    {
      "number": "3.0.8",
      "date": "2016-06-30T10:29:40.788Z"
    },
    {
      "number": "3.0.9",
      "date": "2016-07-01T15:29:08.835Z"
    },
    {
      "number": "3.0.10",
      "date": "2016-07-15T10:38:24.638Z"
    },
    {
      "number": "3.0.11",
      "date": "2016-07-18T21:54:28.179Z"
    },
    {
      "number": "3.0.12",
      "date": "2016-07-18T21:57:17.051Z"
    },
    {
      "number": "3.0.13",
      "date": "2016-07-20T11:01:49.895Z"
    },
    {
      "number": "4.0.0",
      "date": "2016-07-28T12:05:06.768Z"
    },
    {
      "number": "4.0.2",
      "date": "2016-08-15T10:59:20.410Z"
    },
    {
      "number": "4.0.3",
      "date": "2016-08-15T15:24:07.828Z"
    },
    {
      "number": "4.0.4",
      "date": "2016-08-15T22:47:51.103Z"
    },
    {
      "number": "4.0.5",
      "date": "2016-08-15T22:49:46.035Z"
    },
    {
      "number": "4.0.6",
      "date": "2016-10-16T17:32:37.322Z"
    },
    {
      "number": "4.0.7",
      "date": "2016-10-22T16:42:46.826Z"
    },
    {
      "number": "4.0.8",
      "date": "2016-11-04T12:35:33.059Z"
    },
    {
      "number": "4.0.9",
      "date": "2016-11-04T12:44:40.060Z"
    },
    {
      "number": "4.0.10",
      "date": "2016-11-04T13:52:13.769Z"
    },
    {
      "number": "4.0.11",
      "date": "2016-11-04T14:26:47.558Z"
    },
    {
      "number": "4.0.12",
      "date": "2016-11-05T20:00:28.763Z"
    }
  ],
  "created": "2015-11-25T09:52:25.591Z",
  "modified": "2016-11-05T20:00:28.763Z",
  "lastPublisher": {
    "name": "automation-stack",
    "email": "aleksandr.komlev@gmail.com"
  },
  "owners": [
    {
      "name": "automation-stack",
      "email": "aleksandr.komlev@gmail.com"
    }
  ],
  "readme": "## Electron subprocess with administrative privileges\n\nRun a subprocess with administrative privileges, prompting the user with a graphical OS dialog if necessary. Useful for background subprocesse which run native Electron apps that need sudo.\n\n- `Windows`, uses [elevate utility](https://github.com/automation-stack/electron-sudo/tree/master/src/vendor/win32) with native `User Account Control (UAC)` prompt (no `PowerShell` required)\n- `OS X`, uses bundled [applet](https://github.com/automation-stack/electron-sudo/tree/master/src/bin/applet.app) (inspired by  [Joran Dirk Greef](https://github.com/jorangreef))\n- `Linux`, uses system `pkexec` or [gksudo](http://www.nongnu.org/gksu) (system or bundled).\n\nIf you don't trust binaries bundled in `npm` package you can manually build tools and use them instead.\n\n<img height=\"150px\" src=\"./assets/win32.png\">\n<img height=\"150px\" src=\"./assets/osx.png\">\n<img height=\"150px\" src=\"./assets/linux.png\">\n\n## Features\n  - Supports ```spawn``` and ```exec``` subprocess behavior\n  - Supports applications packaged as ```asar``` archive\n  - Separate password prompt for each call (use ```sh``` or ```bat``` script for single prompt)\n  - No external dependencies, does not depend on OS versions\n\n## Installation\n```\nnpm install electron-sudo\n```\n\n## Usage\n**Note: Your command should not start with the ```sudo``` prefix.**\n\n### Version 4.0.*\n\n```js\nimport Sudoer from 'electron-sudo';\n\nlet options = {name: 'electron sudo application'},\n    sudoer = new Sudoer(options);\n\n/* Spawn subprocess behavior */\nlet cp = await sudoer.spawn(\n  'echo', ['$PARAM'], {env: {PARAM: 'VALUE'}}\n);\ncp.on('close', () => {\n  /*\n    cp.output.stdout (Buffer)\n    cp.output.stderr (Buffer)\n  */\n});\n\n/* Exec subprocess behavior */\nlet result = await sudoer.exec(\n  'echo $PARAM', {env: {PARAM: 'VALUE'}}\n);\n/* result is Buffer with mixed (both stdout and stderr) output */\n\n\n/* Usage with Vanila JS */\n\nvar Sudoer = require('electron-sudo').default;\nvar sudoer = new Sudoer(options);\nsudoer.spawn('echo', ['$PARAM'], {env: {PARAM: 'VALUE'}}).then(function (cp) {\n  /*\n    cp.output.stdout (Buffer)\n    cp.output.stderr (Buffer)\n  */\n});\n\n```\n\n### Version 3.0.* (deprecated)\n\n```js\nvar sudo = require('electron-sudo');\nvar options = {\n  name: 'Your application name',\n  icns: '/path/to/icns/file' // (optional, only for MacOS),\n  process: {\n    options: {\n      // Can use custom environment variables for your privileged subprocess\n      env: {'VAR': 'VALUE'}\n      // ... and all other subprocess options described here\n      // https://nodejs.org/api/child_process.html#child_process_child_process_exec_command_options_callback\n    },\n    on: function(ps) {\n      ps.stdout.on('data', function(data) {});\n      setTimeout(function() {\n        ps.kill()\n      }.bind(ps), 50000);\n    }\n  }\n};\nsudo.exec('echo hello', options, function(error) {});\n```\n\n## Tests\n```\nnpm i && npm test\n```\n\n## Usage with Webpack\n\nWebpack config should contain ```__dirname``` equals ```true``` for work properly\n\n```js\n\nlet nodeModules = fs.readdirSync('./node_modules')\n    .filter((module) => {\n        return module !== '.bin';\n    })\n    .reduce((prev, module) => {\n        return Object.assign(prev, {[module]: 'commonjs ' + module});\n    }, {});\n\nexport default {\n    ...\n    target: 'electron',\n    node: {\n        /* http://webpack.github.io/docs/configuration.html#node */\n        __dirname: true\n    },\n    externals: nodeModules\n};\n```\n"
}