{
  "name": "djia",
  "description": "The most recent Dow Jones opening for a date.",
  "version": "1.3.0",
  "author": {
    "name": "Luke Karrys"
  },
  "browser": "lib/browser.js",
  "browserify": {
    "transform": [
      "babelify"
    ]
  },
  "dependencies": {
    "async": "^2.0.1",
    "debug": "^2.2.0",
    "flat-cache": "^1.2.1",
    "localforage": "^1.4.2",
    "moment": "^2.14.1",
    "moment-timezone": "^0.5.5",
    "request": "^2.74.0",
    "xhr": "^2.2.2"
  },
  "devDependencies": {
    "babel-cli": "^6.5.2",
    "babel-preset-es2015": "^6.13.2",
    "babel-tape-runner": "^2.0.1",
    "babelify": "^7.3.0",
    "browserify": "^13.1.0",
    "electron-prebuilt": "^1.3.2",
    "git-validate": "^2.1.4",
    "rimraf": "^2.5.4",
    "run-browser": "^2.0.2",
    "standard": "^8.0.0-beta.3",
    "tap-spec": "^4.1.1",
    "tape": "^4.6.0",
    "tape-run": "^2.1.4"
  },
  "files": [
    "lib/*"
  ],
  "homepage": "https://github.com/lukekarrys/djia",
  "keywords": [
    "djia",
    "dow jones",
    "stock market",
    "xkcd"
  ],
  "license": "MIT",
  "main": "./lib/index.js",
  "pre-commit": [
    "lint",
    "test",
    "validate"
  ],
  "react-native": {
    "./lib/index.js": "./lib/react-native.js"
  },
  "repository": {
    "user": "lukekarrys",
    "repo": "djia",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/lukekarrys/djia/tarball/master",
    "clone_url": "https://github.com/lukekarrys/djia",
    "https_url": "https://github.com/lukekarrys/djia",
    "travis_url": "https://travis-ci.org/lukekarrys/djia",
    "zip_url": "https://github.com/lukekarrys/djia/archive/master.zip",
    "api_url": "https://api.github.com/repos/lukekarrys/djia"
  },
  "scripts": {
    "browser-test": "browserify test/browser.js | tape-run | tap-spec",
    "compile": "babel src --out-dir lib",
    "lint": "standard",
    "node-test": "babel-tape-runner test/{index,dowHasData}.js | tap-spec",
    "prepublish": "npm run compile",
    "start": "run-browser test/browser.js",
    "test": "npm run node-test && npm run browser-test",
    "validate": "npm ls"
  },
  "standard": {
    "ignore": [
      "**/lib/**"
    ]
  },
  "gitHead": "4fd8b32312cc7caa5112a5366b87b69c37c22a75",
  "_npmVersion": "3.10.5",
  "_nodeVersion": "5.12.0",
  "dist": {
    "shasum": "e2d0efad9fd857662bdcc5df96a02a2be11ebcfa",
    "tarball": "http://registry.npmjs.org/djia/-/djia-1.3.0.tgz"
  },
  "versions": [
    {
      "number": "0.0.0",
      "date": "2015-05-01T18:49:54.427Z"
    },
    {
      "number": "1.0.0",
      "date": "2015-05-01T18:50:21.700Z"
    },
    {
      "number": "1.0.1",
      "date": "2015-05-05T00:04:37.156Z"
    },
    {
      "number": "1.0.2",
      "date": "2015-05-05T01:14:37.419Z"
    },
    {
      "number": "1.0.3",
      "date": "2015-05-05T21:52:25.691Z"
    },
    {
      "number": "1.0.4",
      "date": "2015-05-09T20:26:47.427Z"
    },
    {
      "number": "1.1.0",
      "date": "2015-05-09T21:15:26.004Z"
    },
    {
      "number": "1.1.1",
      "date": "2015-05-09T22:22:36.051Z"
    },
    {
      "number": "1.1.2",
      "date": "2015-05-13T04:52:17.618Z"
    },
    {
      "number": "1.1.3",
      "date": "2015-05-13T06:20:36.283Z"
    },
    {
      "number": "1.2.0",
      "date": "2015-05-18T23:06:36.948Z"
    },
    {
      "number": "1.2.1",
      "date": "2015-12-16T19:45:08.377Z"
    },
    {
      "number": "1.2.2",
      "date": "2016-03-26T06:39:49.836Z"
    },
    {
      "number": "1.2.3",
      "date": "2016-08-07T17:02:04.069Z"
    },
    {
      "number": "1.2.4",
      "date": "2016-08-07T18:16:30.336Z"
    },
    {
      "number": "1.3.0",
      "date": "2016-08-27T18:23:37.776Z"
    }
  ],
  "created": "2015-05-01T18:49:54.427Z",
  "modified": "2016-08-27T18:23:37.776Z",
  "lastPublisher": {
    "name": "lukekarrys",
    "email": "luke@lukekarrys.com"
  },
  "owners": [
    {
      "name": "lukekarrys",
      "email": "luke@lukekarrys.com"
    }
  ],
  "readme": "djia\n===================\n\nGet the opening Dow Jones Industrial Average for a date, or the most recent opening if the market is closed for that day.\n\nIt fetches data from a web service, with the option to cache the results for future requests.\n\nI use this for [xkcd Geohashing](https://xkcd.com/426/).\n\n[![NPM](https://nodei.co/npm/djia.png)](https://nodei.co/npm/djia/)\n[![Build Status](https://travis-ci.org/lukekarrys/djia.png?branch=master)](https://travis-ci.org/lukekarrys/djia)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat)](https://github.com/feross/standard)\n\n\n## Install\n\n`npm install djia`\n\n\n## Usage\n\n```js\nimport djia from 'djia'\n\ndjia('2015-03-27', (err, value) => {\n    // err: null\n    // value: 17673.63\n})\n\ndjia('1900-01-01', (err) => {\n    // err: [Error: date too much in the past]\n})\n\ndjia('2999-01-01', (err) => {\n    // err: [Error: data not available yet]\n})\n\n// Cache the result in $HOME/.config/djia\ndjia({date: '2015-03-27' cache: true}, (err, value) => {})\n\n// Cache it in your current directory\ndjia({date: '2015-03-27' cache: process.cwd()}, (err, value) => {})\n```\n\n\n## API\n\n### `djia(options, callback)`\n\n#### `options` (`YYYY-MM-DD` formatted date string or `object`)\n\nThe first paramter is either a `YYYY-MM-DD` date string or an object of options.\n\n#### `options.date` (required, `YYYY-MM-DD` formatted date string)\n\nIf you are using the object form, then pass in the formatted date string using the `date` key.\n\n#### `options.cache` (optional, can be `true` or path to cache directory/file in node or cache prefix in the browser)\n\nSince the fetched data will never change (it is only for the opening value), it can make sense to cache it. There are slight differences in how this works if you are using it in the browser vs Node.\n\n**Node**\nIf you pass in `true` then a cache directory will be created for you at `$HOME/.config/djia`. You can also pass in a path to your own cache directory or a `.json` file, and they will be created if they do not exist. If your path ends in `.json` thats where the cache will be, otherwise it is assumed you are passing in a direcotry and the path will be `DIRECTORY/djia_cache.json`.\n\n**Browser**\nIt will use [`localforage`](https://www.npmjs.com/package/localforage) to cache everything. If you pass in `true` then each key will be prefixed with `djia_`, otherwise pass in a string and it will use that. The key format is `PREFIX_DATE`.\n\n#### `callback(err, value)`\n\n`err` will be an `Error` object with a message most likely from the web service.\n`value` will be the Dow Jones opening value as a `number`.\n\n\n## Contributing\n\nThis is written in ES6 and compiled to ES5 using [`babel`](https://babeljs.io/). The code you require will come from the `lib/` directory which gets compiled from `src/` before each `npm publish`.\n\n\n## Tests\n\n`npm test`\n\n\n## License\n\nMIT"
}