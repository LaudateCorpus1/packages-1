{
  "name": "jatabase",
  "description": "JSON file database",
  "version": "0.0.12",
  "keywords": [
    "json",
    "database"
  ],
  "repository": {
    "user": "GabrielJMJ",
    "repo": "jatabase",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/GabrielJMJ/jatabase/tarball/master",
    "clone_url": "https://github.com/GabrielJMJ/jatabase",
    "https_url": "https://github.com/GabrielJMJ/jatabase",
    "travis_url": "https://travis-ci.org/GabrielJMJ/jatabase",
    "zip_url": "https://github.com/GabrielJMJ/jatabase/archive/master.zip",
    "api_url": "https://api.github.com/repos/GabrielJMJ/jatabase"
  },
  "author": {
    "name": "Gabriel Jacinto",
    "email": "gamjj74@hotmail.com"
  },
  "devDependencies": {
    "chai": "^3.4.0",
    "gulp": "^3.9.0",
    "gulp-mocha": "^2.1.3"
  },
  "main": "./src/jatabase.js",
  "dependencies": {},
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/MIT"
    }
  ],
  "scripts": {
    "test": "mocha"
  },
  "gitHead": "4649a4a0edc5f26330fc351b9f78b3623efa8011",
  "homepage": "https://github.com/GabrielJMJ/jatabase#readme",
  "_npmVersion": "3.3.6",
  "_nodeVersion": "5.0.0",
  "dist": {
    "shasum": "877bebc8b854c68cd63cc3eb7f495a3c1e8285e4",
    "tarball": "http://registry.npmjs.org/jatabase/-/jatabase-0.0.12.tgz"
  },
  "versions": [
    {
      "number": "0.0.1",
      "date": "2015-10-26T23:06:25.006Z"
    },
    {
      "number": "0.0.2",
      "date": "2015-10-26T23:10:58.787Z"
    },
    {
      "number": "0.0.3",
      "date": "2015-10-27T16:51:53.498Z"
    },
    {
      "number": "0.0.4",
      "date": "2015-10-28T15:22:22.648Z"
    },
    {
      "number": "0.0.5",
      "date": "2015-10-29T18:35:29.933Z"
    },
    {
      "number": "0.0.6",
      "date": "2015-10-29T21:14:45.014Z"
    },
    {
      "number": "0.0.7",
      "date": "2015-10-30T15:49:36.754Z"
    },
    {
      "number": "0.0.8",
      "date": "2015-11-01T18:10:18.488Z"
    },
    {
      "number": "0.0.9",
      "date": "2015-11-03T22:35:55.544Z"
    },
    {
      "number": "0.0.10",
      "date": "2015-11-05T21:24:48.529Z"
    },
    {
      "number": "0.0.11",
      "date": "2015-11-07T05:00:52.843Z"
    },
    {
      "number": "0.0.12",
      "date": "2015-11-10T15:35:08.930Z"
    }
  ],
  "created": "2015-10-26T23:06:25.006Z",
  "modified": "2015-11-10T15:35:08.930Z",
  "lastPublisher": {
    "name": "gabrieljmj",
    "email": "gamjj74@hotmail.com"
  },
  "owners": [
    {
      "name": "gabrieljmj",
      "email": "gamjj74@hotmail.com"
    }
  ],
  "readme": "jatabase\r\n=========\r\n![](https://img.shields.io/badge/status-development-red.svg) ![](https://img.shields.io/npm/v/jatabase.svg) [![Build Status](https://travis-ci.org/gabrieljmj/jatabase.svg?branch=dev)](https://travis-ci.org/gabrieljmj/jatabase)\r\n\r\nThis is advisable when you need a local simple database without any security -- is a JSON file. **jatabase** was created for a desktop application using [electron](http://electron.atom.io/), so, is also ideal for desktop application.\r\n\r\n## Installing\r\n```console\r\n$ npm install jatabase --save\r\n```\r\n\r\n![](https://nodei.co/npm/jatabase.png?downloads=true&downloadRank=true&stars=true)\r\n\r\n## Usage\r\nAll the persistence methods use promises, so they have an async way of using and a sync way.\r\n\r\n* [Creating models](#creating-models) \r\n* [Field types](#field-types)\r\n* [Add](#add)\r\n* [Find/Find one/Find all](#findfind-onefind-all)\r\n* [Delete](#delete)\r\n* [Update](#update)\r\n* [Search](#search)\r\n* [Has method](#has-method)\r\n\r\n### Creating models\r\nCreate models with the method ```createModel```. This model will contain all persistence methods lide ```add``` and ```delete```.\r\n```js\r\nvar Jatabase = require('jatabase'),\r\n  jd = new Jatabase(__dirname + '/file.json'),\r\n  models = {\r\n    products: jd.createModel('products', {\r\n      name: {\r\n        type: 'string'\r\n      },\r\n      price: {\r\n        type: 'number'\r\n      },\r\n      categories: {\r\n        type: 'array'\r\n      },\r\n      description: {\r\n        type: 'string'\r\n      },\r\n      created_at: {\r\n        type: 'date'\r\n      }\r\n    })\r\n  };\r\n\r\nmodule.exports = models;\r\n```\r\n\r\n### Field types\r\n* ```string```\r\n* ```number```\r\n* ```array```\r\n* ```object```\r\n* ```date``` Returns a Date object\r\n\r\n### Add\r\n\r\n#### Async way\r\n```js\r\nproductsModel.add({name: 'Pear TV', price: 1280.00, categories: ['TV'], decription: 'Just a TV', created_at: new Date()}).then(function (success) {\r\n    // ...\r\n});\r\n```\r\n\r\n#### Sync way\r\n```js\r\nproductsModel.addSync({name: 'Pear TV', price: 2400.00, categories: ['TV'], decription: 'Just a TV'});\r\n```\r\n\r\n### Find/Find one/Find all\r\n\r\n#### Async way\r\n```js\r\n// Using ID\r\nproductsModel.find(3).then(function (product) {\r\n    // ...\r\n});\r\n\r\n// Using price\r\nproductsModel.find({price: 2400.00}).then(function (product) {\r\n    // ...\r\n});\r\n\r\n// Find one\r\n// Using ID\r\nproductsModel.findOne(3).then(function (product) {\r\n    // ...\r\n});\r\n\r\n// Using price\r\nproductsModel.findOne({price: 2400.00}).then(function (product) {\r\n    // ...\r\n});\r\n\r\n// Find all\r\nproductsModel.findAll().then(function (products) {\r\n    // ...\r\n});\r\n```\r\n\r\n#### Sync way\r\n```js\r\n// Using ID\r\nvar product = productsModel.findSync(3);\r\n\r\n// Using price\r\nvar product = productsModel.findSync({price: 2400.00});\r\n\r\n// Find one\r\n// Using ID\r\nvar product = productsModel.findOneSync(3);\r\n\r\n// Using price\r\nvar product = productsModel.findOneSync({price: 2400.00});\r\n\r\n// Find all\r\nvar products = productsModel.findAllSync();\r\n```\r\n\r\n### Delete\r\n\r\n#### Async way\r\n```js\r\n// Using ID\r\nproductsModel.delete(3).then(function (success) {\r\n    // ...\r\n});\r\n\r\n// Using price\r\nproductsModel.delete({price: 2400.00}).then(function (success) {\r\n    // ...\r\n});\r\n```\r\n\r\n#### Sync way\r\n```js\r\n// Using ID\r\nproductsModel.deleteSync(3);\r\n\r\n// Using price\r\nproductsModel.deleteSync({price: 2400.00});\r\n```\r\n\r\n### Update\r\n\r\n#### Async way\r\n```js\r\n// Using ID\r\nproductsModel.set({price: 2500.00}, 5).then(function (success) {\r\n    // ...\r\n});\r\n\r\n// Using name\r\nproductsModel.set({price: 2500.00}, {name: 'Pear TV'}).then(function (success) {\r\n    // ...\r\n});\r\n```\r\n\r\n#### Sync way\r\n```js\r\n// Using ID\r\nproductsModel.setSync({price: 2500.00}, 5);\r\n\r\n// Using name\r\nproductsModel.setSync({price: 2500.00}, {name: 'Pear TV'});\r\n```\r\n\r\n### Search\r\n\r\n#### Async way\r\n```js\r\n// Using \r\nproductsModel.search({name: 'TV'}).then(function (products) {\r\n    // ...\r\n});\r\n\r\n// Case sensitive off\r\nproductsModel.search({name: 'TV'}, {lowerCase: true}).then(function (products) {\r\n    // ...\r\n});\r\n```\r\n\r\n#### Sync way\r\n```js\r\n// Using \r\nvar products = productsModel.search({name: 'TV'});\r\n\r\n// Case sensitive off\r\nvar products = productsModel.search({name: 'TV'}, {lowerCase: true});\r\n```\r\n\r\n### Has method\r\n\r\n#### Async way\r\n```js\r\n// Using ID\r\nproductsModel.has(5).then(function (has) {\r\n    // ...\r\n});\r\n\r\n// Using another fields\r\nproductsModel.has({name: 'Pear TV'}).then(function (has) {\r\n    // ...\r\n});\r\n```\r\n\r\n#### Sync way\r\n```js\r\n// Using ID\r\nproductsModel.has(5);\r\n\r\n// Using another fields\r\nproductsModel.has({name: 'Pear TV'});\r\n```\r\n\r\n# License\r\n[MIT License](https://github.com/gabrieljmj/jatabase/blob/dev/LICENSE.md) 2015 Â© Gabriel Jacinto."
}