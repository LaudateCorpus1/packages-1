{
  "name": "electron-chromecast",
  "version": "1.0.15",
  "description": "An implementation of the chrome.cast API in electron",
  "main": "build/index.js",
  "contributors": [
    {
      "name": "Jesse Ostrander",
      "email": "jesse.ostrander@gmail.com"
    }
  ],
  "dependencies": {
    "castv2": "^0.1.6",
    "lodash": "^4.13.1",
    "node-mdns-easy": "^1.0.0"
  },
  "devDependencies": {
    "babel-eslint": "^6.0.4",
    "babel-plugin-transform-class-properties": "^6.6.0",
    "babel-preset-es2015": "^6.6.0",
    "eslint": "^2.9.0",
    "eslint-config-airbnb-base": "^2.0.0",
    "eslint-plugin-import": "^1.6.1",
    "gulp": "^3.9.1",
    "gulp-babel": "^6.1.2",
    "gulp-clean": "^0.3.2"
  },
  "scripts": {
    "build": "gulp build",
    "lint": "eslint ./src",
    "prepublish": "npm run build",
    "test": "npm run lint"
  },
  "repository": {
    "user": "GPMDP",
    "repo": "electron-chromecast",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/GPMDP/electron-chromecast/tarball/master",
    "clone_url": "https://github.com/GPMDP/electron-chromecast",
    "https_url": "https://github.com/GPMDP/electron-chromecast",
    "travis_url": "https://travis-ci.org/GPMDP/electron-chromecast",
    "zip_url": "https://github.com/GPMDP/electron-chromecast/archive/master.zip",
    "api_url": "https://api.github.com/repos/GPMDP/electron-chromecast"
  },
  "keywords": [
    "chromecast",
    "electron"
  ],
  "author": {
    "name": "Samuel Attard"
  },
  "license": "MIT",
  "homepage": "https://github.com/GPMDP/electron-chromecast#readme",
  "babel": {
    "presets": [
      "es2015"
    ],
    "plugins": [
      "transform-class-properties"
    ]
  },
  "gitHead": "1661e715d309224c3c1ca84d98b69a29f847f937",
  "_npmVersion": "3.9.5",
  "_nodeVersion": "6.2.2",
  "dist": {
    "shasum": "4c4d22d063eccfcc188a95e311672a1912215f1f",
    "tarball": "http://registry.npmjs.org/electron-chromecast/-/electron-chromecast-1.0.15.tgz"
  },
  "stars": 1,
  "versions": [
    {
      "number": "1.0.0",
      "date": "2016-05-05T05:45:01.146Z"
    },
    {
      "number": "1.0.1",
      "date": "2016-05-05T06:08:19.708Z"
    },
    {
      "number": "1.0.3",
      "date": "2016-05-05T06:13:49.171Z"
    },
    {
      "number": "1.0.4",
      "date": "2016-05-10T05:50:38.879Z"
    },
    {
      "number": "1.0.5",
      "date": "2016-05-31T11:29:03.634Z"
    },
    {
      "number": "1.0.6",
      "date": "2016-06-15T13:59:05.232Z"
    },
    {
      "number": "1.0.7",
      "date": "2016-06-30T00:06:12.395Z"
    },
    {
      "number": "1.0.8",
      "date": "2016-06-30T00:52:11.576Z"
    },
    {
      "number": "1.0.9",
      "date": "2016-06-30T00:53:41.460Z"
    },
    {
      "number": "1.0.10",
      "date": "2016-06-30T02:00:38.768Z"
    },
    {
      "number": "1.0.12",
      "date": "2016-07-03T02:01:19.644Z"
    },
    {
      "number": "1.0.13",
      "date": "2016-07-03T07:50:28.376Z"
    },
    {
      "number": "1.0.14",
      "date": "2016-07-03T08:44:14.820Z"
    },
    {
      "number": "1.0.15",
      "date": "2016-07-09T04:15:29.625Z"
    }
  ],
  "created": "2016-05-05T05:45:01.146Z",
  "modified": "2016-07-09T04:15:29.625Z",
  "lastPublisher": {
    "name": "marshallofsound",
    "email": "samuel@marshallofsound.me"
  },
  "owners": [
    {
      "name": "marshallofsound",
      "email": "samuel.r.attard@gmail.com"
    }
  ],
  "readme": "Electron Chromecast\r\n------------------\r\n\r\n[![Join the chat at https://gitter.im/GPMDP/electron-chromecast](https://badges.gitter.im/GPMDP/electron-chromecast.svg)](https://gitter.im/GPMDP/electron-chromecast?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n[![Build Status](https://travis-ci.org/GPMDP/electron-chromecast.svg?branch=master)](https://travis-ci.org/GPMDP/electron-chromecast)\r\n\r\n> An implementation of the chrome.cast API in electron\r\n\r\n## Usage\r\n\r\n### Basic\r\n\r\nYou must consume `electron-chromecast` from within your renderer process, preferably in a `preload` script.\r\n\r\n```js\r\n// ES5\r\nrequire('electron-chromecast');\r\n\r\n// ES6\r\nimport 'electron-chromecast';\r\n```\r\n\r\nThis will inject the `chrome.cast` variables and the associated methods globally automatically.  \r\nBy default when requesting a new [`Session`](https://developers.google.com/cast/docs/reference/chrome/chrome.cast.Session) through [`chrome.cast.requestSession`](https://developers.google.com/cast/docs/reference/chrome/chrome.cast#.requestSession) you will be provided an active Session with the first Chromecast Device we find.  To change this behaviour read the Advanced section.\r\n\r\n\r\n### Advanced\r\n\r\n```js\r\n// ES5\r\nvar chromecast = require('electron-chromecast');\r\n\r\nchromecast(function (receivers) {\r\n    return new Promise(function (resolve, reject) {\r\n        // Do some logic to choose a receiver, possibly ask the user through a UI\r\n        var chosenReceiver = receivers[0];\r\n        resolve(chosenReceiver);\r\n    });\r\n});\r\n\r\n// ES6\r\nimport chromecast from 'electron-chromecast';\r\n\r\nchromecast((receivers) =>\r\n    new Promise((resolve, reject) => {\r\n        // Do some logic to choose a receiver, possibly ask the user through a UI\r\n        const chosenReceiver = receivers[0];\r\n        resolve(chosenReceiver);\r\n    });\r\n);\r\n```\r\n\r\nThe function returned from `electron-chromecast` should be called with a single parameter; a function that returns a promise that will eventually resolve with a single receiver.  This receiver is the one that will be used by `chrome.cast`.\r\n\r\n## TODO\r\n- [ ] All the TODO's in code (We only implemented the functionality required by Google Play Music, however this should be sufficient for MOST applications)\r\n\r\n**TODO *(But totally not needed)*:** The `chrome.cast.games` API\r\n"
}