{
  "name": "nutjar",
  "version": "0.3.4",
  "description": "Squirrel update handling server for node to simplify things",
  "main": "index.js",
  "scripts": {
    "start": "squirrel-server --port 8080 --releases ./releases.json"
  },
  "repository": {
    "user": "VogaSoftware",
    "repo": "stackdesk-nutjar",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/VogaSoftware/stackdesk-nutjar/tarball/master",
    "clone_url": "https://github.com/VogaSoftware/stackdesk-nutjar",
    "https_url": "https://github.com/VogaSoftware/stackdesk-nutjar",
    "travis_url": "https://travis-ci.org/VogaSoftware/stackdesk-nutjar",
    "zip_url": "https://github.com/VogaSoftware/stackdesk-nutjar/archive/master.zip",
    "api_url": "https://api.github.com/repos/VogaSoftware/stackdesk-nutjar"
  },
  "keywords": [
    "update"
  ],
  "author": {
    "name": "Graham Dianaty"
  },
  "license": "MIT",
  "homepage": "https://github.com/VogaSoftware/stackdesk-nutjar#readme",
  "dependencies": {
    "squirrel-server": "0.0.1"
  },
  "_npmVersion": "2.14.20",
  "_nodeVersion": "4.4.0",
  "dist": {
    "shasum": "7b1a6ca1f115dd6089cb47a48b1cf727a34d6689",
    "tarball": "http://registry.npmjs.org/nutjar/-/nutjar-0.3.4.tgz"
  },
  "versions": [
    {
      "number": "0.2.5",
      "date": "2016-03-24T18:46:44.260Z"
    },
    {
      "number": "0.2.7",
      "date": "2016-03-24T19:05:57.725Z"
    },
    {
      "number": "0.3.4",
      "date": "2016-03-24T19:12:50.600Z"
    }
  ],
  "created": "2016-03-24T18:46:44.260Z",
  "modified": "2016-03-24T19:12:50.600Z",
  "lastPublisher": {
    "name": "gmdianaty",
    "email": "gmdianaty@gmail.com"
  },
  "owners": [
    {
      "name": "gmdianaty",
      "email": "gmdianaty@gmail.com"
    }
  ],
  "readme": "nutjar\r\n=\r\n-----\r\n\r\nA multi-version squirrel/nuts#5 server built for node.js\r\n\r\n> **!** This is stackdesk-nutjar but evolved and preped for use in non-electron apps (even though it works in electron)\r\n\r\nOriginaly created to supply a simple squirrel update server.\r\nRecommened that you learn to use squirrel at their git repos here\r\n\r\nUsage (non-npm)\r\n=\r\n\r\nFor use on a personal computer\r\n------------------------------\r\n\r\n> **!** This only works if you have a static IP adress! Users will not be able to connect if you have a dynamic IP adress! Even if you use DNS!\r\n\r\nYou must have *Node.js*/*NPM* installed for this tool to work properly\r\n\r\n 1.  Git-Clone the repository to your computer with `$ git clone http://www.github.com/vogasoftware/nutjar.git`\r\n 2. Change-Directory (`cd`) into the directory you git-cloned to.\r\n 2. Update required packages automagically with `$ npm install`\r\n 3. To start the server run `npm start`\r\n 4. You will see something allong the lines of:\r\n\r\n        $ npm start\r\n\r\n        > stackdesk-nutjar@0.2.5 start C:\\ladel\\stackdesk\\nutjar\r\n        > squirrel-server --port 8080 --releases ./releases.json\r\n\r\n 5. YOU WILL NOT GET ANY OUTPUT AFTER THAT! But, congradulations your server is now online! *claping for you excitedly*.\r\n\r\nFor use on Docker/Heroku\r\n-\r\n 1.  Git-Clone the repository to your computer with `$ git clone http://www.github.com/vogasoftware/nutjar.git`\r\n 2. Change-Directory (`cd`) into the directory you git-cloned to.\r\n 3. Execute:\r\n For heroku (*REQUIRES [HEROKU TOOLBELT*](https://toolbelt.heroku.com/)):\r\n\r\n        heroku create my-nutjar\r\n        git push heroku master\r\n\r\n For docker (*REQUIRES [DOCKER ENGINE](https://docs.docker.com/engine/installation/)*)\r\n\r\n        docker build -t my-nutjar .\r\n        docker run -p 3000 my-nutjar\r\n 4. And it should run elegantly at this point!\r\n\r\nUsage (npm)\r\n=\r\nThis method is for using a dedicated home computer.\r\nWe do not recommend using this method for heroku/docker servers\r\n\r\n 1. CD into your node.js application directory.\r\n 2. Run the command `npm install nutjar`\r\n 3. Run the command `cd node_modules` and then run `cd nutjar`\r\n 4. To start your squirrel server run `npm start`.\r\n 5. YOU WILL NOT RECIEVE ANY OUTPUT.\r\n\r\nConfiguration\r\n=\r\nMost of the configuration magic goes on in package.json's definitive line of:\r\n\r\n    \"start\": \"squirrel-server --port 8080 --releases ./releases.json\"\r\n\r\nEditing this must be tailored to how it should be formatted if you wish to change your releases file.\r\n\r\nCredit\r\n=\r\nThis application mainly uses the `squirrel-server` npm module. In fact it is simply a simplified version of this application.\r\n"
}