{
  "name": "nightmare-crash-reporter",
  "version": "0.1.0",
  "license": "MIT",
  "main": "./nightmare-crash-reporter.js",
  "description": "Adds a crash reporter to NightmareJS",
  "scripts": {
    "test": "mocha test"
  },
  "repository": {
    "user": "rosshinkley",
    "repo": "nightmare-crash-reporter",
    "host": "github.com",
    "branch": "master",
    "apiHost": "api.github.com",
    "tarball_url": "https://api.github.com/repos/rosshinkley/nightmare-crash-reporter/tarball/master",
    "clone_url": "https://github.com/rosshinkley/nightmare-crash-reporter",
    "https_url": "https://github.com/rosshinkley/nightmare-crash-reporter",
    "travis_url": "https://travis-ci.org/rosshinkley/nightmare-crash-reporter",
    "zip_url": "https://github.com/rosshinkley/nightmare-crash-reporter/archive/master.zip",
    "api_url": "https://api.github.com/repos/rosshinkley/nightmare-crash-reporter"
  },
  "author": {
    "name": "Ross Hinkley"
  },
  "keywords": [
    "nightmare",
    "phantomjs",
    "crash",
    "crashreporter"
  ],
  "peerDependencies": {
    "nightmare": "^2.6.0"
  },
  "dependencies": {
    "debug": "^2.2.0",
    "multiparty": "^4.1.2",
    "portscanner": "^1.0.0"
  },
  "devDependencies": {
    "chai": "^3.5.0",
    "express": "^4.13.3",
    "mkdirp": "^0.5.1",
    "mocha": "^2.3.0",
    "rimraf": "^2.5.2",
    "serve-static": "^1.11.1"
  },
  "gitHead": "58bc53e2c0d52759a851a3f4a2f2117ea733e3d7",
  "homepage": "https://github.com/rosshinkley/nightmare-crash-reporter#readme",
  "_npmVersion": "3.10.6",
  "_nodeVersion": "6.2.2",
  "dist": {
    "shasum": "c676882fc53455fdcf7d86df3201b344cfa3aa2e",
    "tarball": "http://registry.npmjs.org/nightmare-crash-reporter/-/nightmare-crash-reporter-0.1.0.tgz"
  },
  "versions": [
    {
      "number": "0.1.0",
      "date": "2016-09-06T15:31:43.353Z"
    }
  ],
  "created": "2016-09-06T15:31:43.353Z",
  "modified": "2016-09-06T15:31:43.353Z",
  "lastPublisher": {
    "name": "rosshinkley",
    "email": "rosshinkley@gmail.com"
  },
  "owners": [
    {
      "name": "rosshinkley",
      "email": "rosshinkley@gmail.com"
    }
  ],
  "readme": "nightmare-crash-reporter\n========================\n\nAdd Electron crash reporting to your [Nightmare](http://github.com/segmentio/nightmare) scripts.\n\n## Usage\nRequire the library: and pass the Nightmare library as a reference to attach the plugin actions:\n\n```js\nvar Nightmare = require('nightmare');\nrequire('nightmare-crash-reporter')(Nightmare);\n```\n\nWhen started, `nightmare-crash-reporter` will scan for an open port on localhost starting with 3000, then stand up a temporary crash report server to accept crash reports.  When Nightmare is ended (either gracefully or via a crash), the temporary crash report server will be stopped and the port freed.\n\n### .crashReporter([options])\nStart the crash reporter with the given options.  If no options are given, the crash reporter will not be started _unless_ the `DEBUG` environment variable is set.  The options provided are ultimately passed to the crash reporter; all of the options available to the crash reporter are available to the options hash.  This method resolves to the port the temporary crash report server is started on.\n\n#### omitDump\nRemove the temporary dump after the crash is reported.\n\n#### companyName (defaults to 'Nightmare')\nMandatory from Electron's crash reporter.  Use this to denote who is doing the crash reporting.\n\n#### productName\nFrom Electron's crash reporter.  Use this to denote what is doing the crash reporting.\n\n#### dumpDirectory (defaults to `/tmp`)\nThe target directory for crash report dumps.\n\n#### callback\nIf a crash occurs, this function will get called with an error (if there was a problem moving the dump if using `options.dumpDirectory`) and the fields from the original crash report.  The saved path of the dump is included on the fields hash.\n\n## Example\n\n```javascript\nvar Nightmare = require('nightmare');\nrequire('nightmare-crash-reporter')(Nightmare);\nvar nightmare = Nightmare();\nnightmare\n  .crashReporter({\n    dumpDirectory: '/some/path',\n    callback: function(err, fields){\n      console.dir(fields);    \n    })\n  .someActionThatCausesCrash()\n  .end()\n  .then(()=>console.log('done'));\n```\n\n"
}